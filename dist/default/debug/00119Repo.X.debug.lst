

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 03 23:11:13 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16LF15325
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16LF15325 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000E                     	;# 
   105  0012                     	;# 
   106  0014                     	;# 
   107  0018                     	;# 
   108  001A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0119                     	;# 
   116  0119                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011A                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011B                     	;# 
   123  011B                     	;# 
   124  011B                     	;# 
   125  011B                     	;# 
   126  011C                     	;# 
   127  011C                     	;# 
   128  011C                     	;# 
   129  011D                     	;# 
   130  011D                     	;# 
   131  011D                     	;# 
   132  011E                     	;# 
   133  011E                     	;# 
   134  011E                     	;# 
   135  011F                     	;# 
   136  011F                     	;# 
   137  011F                     	;# 
   138  011F                     	;# 
   139  011F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  018E                     	;# 
   143  018F                     	;# 
   144  0190                     	;# 
   145  0191                     	;# 
   146  0192                     	;# 
   147  020C                     	;# 
   148  020C                     	;# 
   149  020D                     	;# 
   150  020E                     	;# 
   151  020F                     	;# 
   152  020F                     	;# 
   153  0210                     	;# 
   154  0210                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  028C                     	;# 
   158  028C                     	;# 
   159  028D                     	;# 
   160  028D                     	;# 
   161  028E                     	;# 
   162  028F                     	;# 
   163  0290                     	;# 
   164  0291                     	;# 
   165  030C                     	;# 
   166  030C                     	;# 
   167  030D                     	;# 
   168  030E                     	;# 
   169  030F                     	;# 
   170  0310                     	;# 
   171  0310                     	;# 
   172  0311                     	;# 
   173  0312                     	;# 
   174  0313                     	;# 
   175  0314                     	;# 
   176  0314                     	;# 
   177  0315                     	;# 
   178  0316                     	;# 
   179  0318                     	;# 
   180  0318                     	;# 
   181  0319                     	;# 
   182  031A                     	;# 
   183  031C                     	;# 
   184  031C                     	;# 
   185  031D                     	;# 
   186  031E                     	;# 
   187  038C                     	;# 
   188  038C                     	;# 
   189  038D                     	;# 
   190  038E                     	;# 
   191  058C                     	;# 
   192  058C                     	;# 
   193  058D                     	;# 
   194  058E                     	;# 
   195  058F                     	;# 
   196  058F                     	;# 
   197  0590                     	;# 
   198  0591                     	;# 
   199  0592                     	;# 
   200  0593                     	;# 
   201  059C                     	;# 
   202  059C                     	;# 
   203  059D                     	;# 
   204  059D                     	;# 
   205  059E                     	;# 
   206  059F                     	;# 
   207  060C                     	;# 
   208  060D                     	;# 
   209  060E                     	;# 
   210  060F                     	;# 
   211  0610                     	;# 
   212  0611                     	;# 
   213  0612                     	;# 
   214  0613                     	;# 
   215  0614                     	;# 
   216  070C                     	;# 
   217  070D                     	;# 
   218  070E                     	;# 
   219  070F                     	;# 
   220  0710                     	;# 
   221  0711                     	;# 
   222  0712                     	;# 
   223  0713                     	;# 
   224  0716                     	;# 
   225  0717                     	;# 
   226  0718                     	;# 
   227  0719                     	;# 
   228  071A                     	;# 
   229  071B                     	;# 
   230  071C                     	;# 
   231  071D                     	;# 
   232  0796                     	;# 
   233  0797                     	;# 
   234  0798                     	;# 
   235  0799                     	;# 
   236  079A                     	;# 
   237  079B                     	;# 
   238  080C                     	;# 
   239  080D                     	;# 
   240  080E                     	;# 
   241  080F                     	;# 
   242  0810                     	;# 
   243  0811                     	;# 
   244  0813                     	;# 
   245  0814                     	;# 
   246  081A                     	;# 
   247  081A                     	;# 
   248  081B                     	;# 
   249  081C                     	;# 
   250  081C                     	;# 
   251  081D                     	;# 
   252  081E                     	;# 
   253  081F                     	;# 
   254  088C                     	;# 
   255  088D                     	;# 
   256  088E                     	;# 
   257  088F                     	;# 
   258  0890                     	;# 
   259  0891                     	;# 
   260  0892                     	;# 
   261  0893                     	;# 
   262  0895                     	;# 
   263  0896                     	;# 
   264  090C                     	;# 
   265  090E                     	;# 
   266  090F                     	;# 
   267  091F                     	;# 
   268  098F                     	;# 
   269  098F                     	;# 
   270  0990                     	;# 
   271  0991                     	;# 
   272  0992                     	;# 
   273  0993                     	;# 
   274  0994                     	;# 
   275  0995                     	;# 
   276  0996                     	;# 
   277  0997                     	;# 
   278  0A19                     	;# 
   279  0A19                     	;# 
   280  0A1A                     	;# 
   281  0A1A                     	;# 
   282  0A1B                     	;# 
   283  0A1B                     	;# 
   284  0A1B                     	;# 
   285  0A1C                     	;# 
   286  0A1C                     	;# 
   287  0A1D                     	;# 
   288  0A1D                     	;# 
   289  0A1E                     	;# 
   290  0A1E                     	;# 
   291  0A1F                     	;# 
   292  0A1F                     	;# 
   293  0A1F                     	;# 
   294  1E0F                     	;# 
   295  1E10                     	;# 
   296  1E11                     	;# 
   297  1E12                     	;# 
   298  1E13                     	;# 
   299  1E14                     	;# 
   300  1E15                     	;# 
   301  1E16                     	;# 
   302  1E17                     	;# 
   303  1E18                     	;# 
   304  1E19                     	;# 
   305  1E1A                     	;# 
   306  1E1B                     	;# 
   307  1E1C                     	;# 
   308  1E1D                     	;# 
   309  1E1E                     	;# 
   310  1E1F                     	;# 
   311  1E20                     	;# 
   312  1E21                     	;# 
   313  1E22                     	;# 
   314  1E23                     	;# 
   315  1E24                     	;# 
   316  1E25                     	;# 
   317  1E26                     	;# 
   318  1E27                     	;# 
   319  1E28                     	;# 
   320  1E29                     	;# 
   321  1E2A                     	;# 
   322  1E2B                     	;# 
   323  1E2C                     	;# 
   324  1E2D                     	;# 
   325  1E2E                     	;# 
   326  1E2F                     	;# 
   327  1E30                     	;# 
   328  1E31                     	;# 
   329  1E32                     	;# 
   330  1E33                     	;# 
   331  1E34                     	;# 
   332  1E35                     	;# 
   333  1E36                     	;# 
   334  1E37                     	;# 
   335  1E8F                     	;# 
   336  1E90                     	;# 
   337  1E91                     	;# 
   338  1E92                     	;# 
   339  1E93                     	;# 
   340  1E9C                     	;# 
   341  1EA1                     	;# 
   342  1EA2                     	;# 
   343  1EB1                     	;# 
   344  1EBB                     	;# 
   345  1EBC                     	;# 
   346  1EBD                     	;# 
   347  1EBE                     	;# 
   348  1EC3                     	;# 
   349  1EC5                     	;# 
   350  1EC6                     	;# 
   351  1EC7                     	;# 
   352  1ECB                     	;# 
   353  1ECC                     	;# 
   354  1ECD                     	;# 
   355  1ECE                     	;# 
   356  1F10                     	;# 
   357  1F11                     	;# 
   358  1F12                     	;# 
   359  1F13                     	;# 
   360  1F14                     	;# 
   361  1F15                     	;# 
   362  1F20                     	;# 
   363  1F21                     	;# 
   364  1F22                     	;# 
   365  1F23                     	;# 
   366  1F24                     	;# 
   367  1F25                     	;# 
   368  1F38                     	;# 
   369  1F39                     	;# 
   370  1F3A                     	;# 
   371  1F3B                     	;# 
   372  1F3C                     	;# 
   373  1F3D                     	;# 
   374  1F3E                     	;# 
   375  1F3F                     	;# 
   376  1F4E                     	;# 
   377  1F4F                     	;# 
   378  1F50                     	;# 
   379  1F51                     	;# 
   380  1F52                     	;# 
   381  1F53                     	;# 
   382  1F54                     	;# 
   383  1F55                     	;# 
   384  1FE4                     	;# 
   385  1FE5                     	;# 
   386  1FE6                     	;# 
   387  1FE7                     	;# 
   388  1FE8                     	;# 
   389  1FE8                     	;# 
   390  1FE9                     	;# 
   391  1FEA                     	;# 
   392  1FEA                     	;# 
   393  1FEB                     	;# 
   394  1FED                     	;# 
   395  1FEE                     	;# 
   396  1FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000E                     	;# 
   411  0012                     	;# 
   412  0014                     	;# 
   413  0018                     	;# 
   414  001A                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  0119                     	;# 
   422  0119                     	;# 
   423  0119                     	;# 
   424  011A                     	;# 
   425  011A                     	;# 
   426  011A                     	;# 
   427  011B                     	;# 
   428  011B                     	;# 
   429  011B                     	;# 
   430  011B                     	;# 
   431  011B                     	;# 
   432  011C                     	;# 
   433  011C                     	;# 
   434  011C                     	;# 
   435  011D                     	;# 
   436  011D                     	;# 
   437  011D                     	;# 
   438  011E                     	;# 
   439  011E                     	;# 
   440  011E                     	;# 
   441  011F                     	;# 
   442  011F                     	;# 
   443  011F                     	;# 
   444  011F                     	;# 
   445  011F                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018E                     	;# 
   449  018F                     	;# 
   450  0190                     	;# 
   451  0191                     	;# 
   452  0192                     	;# 
   453  020C                     	;# 
   454  020C                     	;# 
   455  020D                     	;# 
   456  020E                     	;# 
   457  020F                     	;# 
   458  020F                     	;# 
   459  0210                     	;# 
   460  0210                     	;# 
   461  0211                     	;# 
   462  0211                     	;# 
   463  028C                     	;# 
   464  028C                     	;# 
   465  028D                     	;# 
   466  028D                     	;# 
   467  028E                     	;# 
   468  028F                     	;# 
   469  0290                     	;# 
   470  0291                     	;# 
   471  030C                     	;# 
   472  030C                     	;# 
   473  030D                     	;# 
   474  030E                     	;# 
   475  030F                     	;# 
   476  0310                     	;# 
   477  0310                     	;# 
   478  0311                     	;# 
   479  0312                     	;# 
   480  0313                     	;# 
   481  0314                     	;# 
   482  0314                     	;# 
   483  0315                     	;# 
   484  0316                     	;# 
   485  0318                     	;# 
   486  0318                     	;# 
   487  0319                     	;# 
   488  031A                     	;# 
   489  031C                     	;# 
   490  031C                     	;# 
   491  031D                     	;# 
   492  031E                     	;# 
   493  038C                     	;# 
   494  038C                     	;# 
   495  038D                     	;# 
   496  038E                     	;# 
   497  058C                     	;# 
   498  058C                     	;# 
   499  058D                     	;# 
   500  058E                     	;# 
   501  058F                     	;# 
   502  058F                     	;# 
   503  0590                     	;# 
   504  0591                     	;# 
   505  0592                     	;# 
   506  0593                     	;# 
   507  059C                     	;# 
   508  059C                     	;# 
   509  059D                     	;# 
   510  059D                     	;# 
   511  059E                     	;# 
   512  059F                     	;# 
   513  060C                     	;# 
   514  060D                     	;# 
   515  060E                     	;# 
   516  060F                     	;# 
   517  0610                     	;# 
   518  0611                     	;# 
   519  0612                     	;# 
   520  0613                     	;# 
   521  0614                     	;# 
   522  070C                     	;# 
   523  070D                     	;# 
   524  070E                     	;# 
   525  070F                     	;# 
   526  0710                     	;# 
   527  0711                     	;# 
   528  0712                     	;# 
   529  0713                     	;# 
   530  0716                     	;# 
   531  0717                     	;# 
   532  0718                     	;# 
   533  0719                     	;# 
   534  071A                     	;# 
   535  071B                     	;# 
   536  071C                     	;# 
   537  071D                     	;# 
   538  0796                     	;# 
   539  0797                     	;# 
   540  0798                     	;# 
   541  0799                     	;# 
   542  079A                     	;# 
   543  079B                     	;# 
   544  080C                     	;# 
   545  080D                     	;# 
   546  080E                     	;# 
   547  080F                     	;# 
   548  0810                     	;# 
   549  0811                     	;# 
   550  0813                     	;# 
   551  0814                     	;# 
   552  081A                     	;# 
   553  081A                     	;# 
   554  081B                     	;# 
   555  081C                     	;# 
   556  081C                     	;# 
   557  081D                     	;# 
   558  081E                     	;# 
   559  081F                     	;# 
   560  088C                     	;# 
   561  088D                     	;# 
   562  088E                     	;# 
   563  088F                     	;# 
   564  0890                     	;# 
   565  0891                     	;# 
   566  0892                     	;# 
   567  0893                     	;# 
   568  0895                     	;# 
   569  0896                     	;# 
   570  090C                     	;# 
   571  090E                     	;# 
   572  090F                     	;# 
   573  091F                     	;# 
   574  098F                     	;# 
   575  098F                     	;# 
   576  0990                     	;# 
   577  0991                     	;# 
   578  0992                     	;# 
   579  0993                     	;# 
   580  0994                     	;# 
   581  0995                     	;# 
   582  0996                     	;# 
   583  0997                     	;# 
   584  0A19                     	;# 
   585  0A19                     	;# 
   586  0A1A                     	;# 
   587  0A1A                     	;# 
   588  0A1B                     	;# 
   589  0A1B                     	;# 
   590  0A1B                     	;# 
   591  0A1C                     	;# 
   592  0A1C                     	;# 
   593  0A1D                     	;# 
   594  0A1D                     	;# 
   595  0A1E                     	;# 
   596  0A1E                     	;# 
   597  0A1F                     	;# 
   598  0A1F                     	;# 
   599  0A1F                     	;# 
   600  1E0F                     	;# 
   601  1E10                     	;# 
   602  1E11                     	;# 
   603  1E12                     	;# 
   604  1E13                     	;# 
   605  1E14                     	;# 
   606  1E15                     	;# 
   607  1E16                     	;# 
   608  1E17                     	;# 
   609  1E18                     	;# 
   610  1E19                     	;# 
   611  1E1A                     	;# 
   612  1E1B                     	;# 
   613  1E1C                     	;# 
   614  1E1D                     	;# 
   615  1E1E                     	;# 
   616  1E1F                     	;# 
   617  1E20                     	;# 
   618  1E21                     	;# 
   619  1E22                     	;# 
   620  1E23                     	;# 
   621  1E24                     	;# 
   622  1E25                     	;# 
   623  1E26                     	;# 
   624  1E27                     	;# 
   625  1E28                     	;# 
   626  1E29                     	;# 
   627  1E2A                     	;# 
   628  1E2B                     	;# 
   629  1E2C                     	;# 
   630  1E2D                     	;# 
   631  1E2E                     	;# 
   632  1E2F                     	;# 
   633  1E30                     	;# 
   634  1E31                     	;# 
   635  1E32                     	;# 
   636  1E33                     	;# 
   637  1E34                     	;# 
   638  1E35                     	;# 
   639  1E36                     	;# 
   640  1E37                     	;# 
   641  1E8F                     	;# 
   642  1E90                     	;# 
   643  1E91                     	;# 
   644  1E92                     	;# 
   645  1E93                     	;# 
   646  1E9C                     	;# 
   647  1EA1                     	;# 
   648  1EA2                     	;# 
   649  1EB1                     	;# 
   650  1EBB                     	;# 
   651  1EBC                     	;# 
   652  1EBD                     	;# 
   653  1EBE                     	;# 
   654  1EC3                     	;# 
   655  1EC5                     	;# 
   656  1EC6                     	;# 
   657  1EC7                     	;# 
   658  1ECB                     	;# 
   659  1ECC                     	;# 
   660  1ECD                     	;# 
   661  1ECE                     	;# 
   662  1F10                     	;# 
   663  1F11                     	;# 
   664  1F12                     	;# 
   665  1F13                     	;# 
   666  1F14                     	;# 
   667  1F15                     	;# 
   668  1F20                     	;# 
   669  1F21                     	;# 
   670  1F22                     	;# 
   671  1F23                     	;# 
   672  1F24                     	;# 
   673  1F25                     	;# 
   674  1F38                     	;# 
   675  1F39                     	;# 
   676  1F3A                     	;# 
   677  1F3B                     	;# 
   678  1F3C                     	;# 
   679  1F3D                     	;# 
   680  1F3E                     	;# 
   681  1F3F                     	;# 
   682  1F4E                     	;# 
   683  1F4F                     	;# 
   684  1F50                     	;# 
   685  1F51                     	;# 
   686  1F52                     	;# 
   687  1F53                     	;# 
   688  1F54                     	;# 
   689  1F55                     	;# 
   690  1FE4                     	;# 
   691  1FE5                     	;# 
   692  1FE6                     	;# 
   693  1FE7                     	;# 
   694  1FE8                     	;# 
   695  1FE8                     	;# 
   696  1FE9                     	;# 
   697  1FEA                     	;# 
   698  1FEA                     	;# 
   699  1FEB                     	;# 
   700  1FED                     	;# 
   701  1FEE                     	;# 
   702  1FEF                     	;# 
   703  0000                     	;# 
   704  0001                     	;# 
   705  0002                     	;# 
   706  0003                     	;# 
   707  0004                     	;# 
   708  0005                     	;# 
   709  0006                     	;# 
   710  0007                     	;# 
   711  0008                     	;# 
   712  0009                     	;# 
   713  000A                     	;# 
   714  000B                     	;# 
   715  000C                     	;# 
   716  000E                     	;# 
   717  0012                     	;# 
   718  0014                     	;# 
   719  0018                     	;# 
   720  001A                     	;# 
   721  009B                     	;# 
   722  009B                     	;# 
   723  009C                     	;# 
   724  009D                     	;# 
   725  009E                     	;# 
   726  009F                     	;# 
   727  0119                     	;# 
   728  0119                     	;# 
   729  0119                     	;# 
   730  011A                     	;# 
   731  011A                     	;# 
   732  011A                     	;# 
   733  011B                     	;# 
   734  011B                     	;# 
   735  011B                     	;# 
   736  011B                     	;# 
   737  011B                     	;# 
   738  011C                     	;# 
   739  011C                     	;# 
   740  011C                     	;# 
   741  011D                     	;# 
   742  011D                     	;# 
   743  011D                     	;# 
   744  011E                     	;# 
   745  011E                     	;# 
   746  011E                     	;# 
   747  011F                     	;# 
   748  011F                     	;# 
   749  011F                     	;# 
   750  011F                     	;# 
   751  011F                     	;# 
   752  018C                     	;# 
   753  018D                     	;# 
   754  018E                     	;# 
   755  018F                     	;# 
   756  0190                     	;# 
   757  0191                     	;# 
   758  0192                     	;# 
   759  020C                     	;# 
   760  020C                     	;# 
   761  020D                     	;# 
   762  020E                     	;# 
   763  020F                     	;# 
   764  020F                     	;# 
   765  0210                     	;# 
   766  0210                     	;# 
   767  0211                     	;# 
   768  0211                     	;# 
   769  028C                     	;# 
   770  028C                     	;# 
   771  028D                     	;# 
   772  028D                     	;# 
   773  028E                     	;# 
   774  028F                     	;# 
   775  0290                     	;# 
   776  0291                     	;# 
   777  030C                     	;# 
   778  030C                     	;# 
   779  030D                     	;# 
   780  030E                     	;# 
   781  030F                     	;# 
   782  0310                     	;# 
   783  0310                     	;# 
   784  0311                     	;# 
   785  0312                     	;# 
   786  0313                     	;# 
   787  0314                     	;# 
   788  0314                     	;# 
   789  0315                     	;# 
   790  0316                     	;# 
   791  0318                     	;# 
   792  0318                     	;# 
   793  0319                     	;# 
   794  031A                     	;# 
   795  031C                     	;# 
   796  031C                     	;# 
   797  031D                     	;# 
   798  031E                     	;# 
   799  038C                     	;# 
   800  038C                     	;# 
   801  038D                     	;# 
   802  038E                     	;# 
   803  058C                     	;# 
   804  058C                     	;# 
   805  058D                     	;# 
   806  058E                     	;# 
   807  058F                     	;# 
   808  058F                     	;# 
   809  0590                     	;# 
   810  0591                     	;# 
   811  0592                     	;# 
   812  0593                     	;# 
   813  059C                     	;# 
   814  059C                     	;# 
   815  059D                     	;# 
   816  059D                     	;# 
   817  059E                     	;# 
   818  059F                     	;# 
   819  060C                     	;# 
   820  060D                     	;# 
   821  060E                     	;# 
   822  060F                     	;# 
   823  0610                     	;# 
   824  0611                     	;# 
   825  0612                     	;# 
   826  0613                     	;# 
   827  0614                     	;# 
   828  070C                     	;# 
   829  070D                     	;# 
   830  070E                     	;# 
   831  070F                     	;# 
   832  0710                     	;# 
   833  0711                     	;# 
   834  0712                     	;# 
   835  0713                     	;# 
   836  0716                     	;# 
   837  0717                     	;# 
   838  0718                     	;# 
   839  0719                     	;# 
   840  071A                     	;# 
   841  071B                     	;# 
   842  071C                     	;# 
   843  071D                     	;# 
   844  0796                     	;# 
   845  0797                     	;# 
   846  0798                     	;# 
   847  0799                     	;# 
   848  079A                     	;# 
   849  079B                     	;# 
   850  080C                     	;# 
   851  080D                     	;# 
   852  080E                     	;# 
   853  080F                     	;# 
   854  0810                     	;# 
   855  0811                     	;# 
   856  0813                     	;# 
   857  0814                     	;# 
   858  081A                     	;# 
   859  081A                     	;# 
   860  081B                     	;# 
   861  081C                     	;# 
   862  081C                     	;# 
   863  081D                     	;# 
   864  081E                     	;# 
   865  081F                     	;# 
   866  088C                     	;# 
   867  088D                     	;# 
   868  088E                     	;# 
   869  088F                     	;# 
   870  0890                     	;# 
   871  0891                     	;# 
   872  0892                     	;# 
   873  0893                     	;# 
   874  0895                     	;# 
   875  0896                     	;# 
   876  090C                     	;# 
   877  090E                     	;# 
   878  090F                     	;# 
   879  091F                     	;# 
   880  098F                     	;# 
   881  098F                     	;# 
   882  0990                     	;# 
   883  0991                     	;# 
   884  0992                     	;# 
   885  0993                     	;# 
   886  0994                     	;# 
   887  0995                     	;# 
   888  0996                     	;# 
   889  0997                     	;# 
   890  0A19                     	;# 
   891  0A19                     	;# 
   892  0A1A                     	;# 
   893  0A1A                     	;# 
   894  0A1B                     	;# 
   895  0A1B                     	;# 
   896  0A1B                     	;# 
   897  0A1C                     	;# 
   898  0A1C                     	;# 
   899  0A1D                     	;# 
   900  0A1D                     	;# 
   901  0A1E                     	;# 
   902  0A1E                     	;# 
   903  0A1F                     	;# 
   904  0A1F                     	;# 
   905  0A1F                     	;# 
   906  1E0F                     	;# 
   907  1E10                     	;# 
   908  1E11                     	;# 
   909  1E12                     	;# 
   910  1E13                     	;# 
   911  1E14                     	;# 
   912  1E15                     	;# 
   913  1E16                     	;# 
   914  1E17                     	;# 
   915  1E18                     	;# 
   916  1E19                     	;# 
   917  1E1A                     	;# 
   918  1E1B                     	;# 
   919  1E1C                     	;# 
   920  1E1D                     	;# 
   921  1E1E                     	;# 
   922  1E1F                     	;# 
   923  1E20                     	;# 
   924  1E21                     	;# 
   925  1E22                     	;# 
   926  1E23                     	;# 
   927  1E24                     	;# 
   928  1E25                     	;# 
   929  1E26                     	;# 
   930  1E27                     	;# 
   931  1E28                     	;# 
   932  1E29                     	;# 
   933  1E2A                     	;# 
   934  1E2B                     	;# 
   935  1E2C                     	;# 
   936  1E2D                     	;# 
   937  1E2E                     	;# 
   938  1E2F                     	;# 
   939  1E30                     	;# 
   940  1E31                     	;# 
   941  1E32                     	;# 
   942  1E33                     	;# 
   943  1E34                     	;# 
   944  1E35                     	;# 
   945  1E36                     	;# 
   946  1E37                     	;# 
   947  1E8F                     	;# 
   948  1E90                     	;# 
   949  1E91                     	;# 
   950  1E92                     	;# 
   951  1E93                     	;# 
   952  1E9C                     	;# 
   953  1EA1                     	;# 
   954  1EA2                     	;# 
   955  1EB1                     	;# 
   956  1EBB                     	;# 
   957  1EBC                     	;# 
   958  1EBD                     	;# 
   959  1EBE                     	;# 
   960  1EC3                     	;# 
   961  1EC5                     	;# 
   962  1EC6                     	;# 
   963  1EC7                     	;# 
   964  1ECB                     	;# 
   965  1ECC                     	;# 
   966  1ECD                     	;# 
   967  1ECE                     	;# 
   968  1F10                     	;# 
   969  1F11                     	;# 
   970  1F12                     	;# 
   971  1F13                     	;# 
   972  1F14                     	;# 
   973  1F15                     	;# 
   974  1F20                     	;# 
   975  1F21                     	;# 
   976  1F22                     	;# 
   977  1F23                     	;# 
   978  1F24                     	;# 
   979  1F25                     	;# 
   980  1F38                     	;# 
   981  1F39                     	;# 
   982  1F3A                     	;# 
   983  1F3B                     	;# 
   984  1F3C                     	;# 
   985  1F3D                     	;# 
   986  1F3E                     	;# 
   987  1F3F                     	;# 
   988  1F4E                     	;# 
   989  1F4F                     	;# 
   990  1F50                     	;# 
   991  1F51                     	;# 
   992  1F52                     	;# 
   993  1F53                     	;# 
   994  1F54                     	;# 
   995  1F55                     	;# 
   996  1FE4                     	;# 
   997  1FE5                     	;# 
   998  1FE6                     	;# 
   999  1FE7                     	;# 
  1000  1FE8                     	;# 
  1001  1FE8                     	;# 
  1002  1FE9                     	;# 
  1003  1FEA                     	;# 
  1004  1FEA                     	;# 
  1005  1FEB                     	;# 
  1006  1FED                     	;# 
  1007  1FEE                     	;# 
  1008  1FEF                     	;# 
  1009  0000                     	;# 
  1010  0001                     	;# 
  1011  0002                     	;# 
  1012  0003                     	;# 
  1013  0004                     	;# 
  1014  0005                     	;# 
  1015  0006                     	;# 
  1016  0007                     	;# 
  1017  0008                     	;# 
  1018  0009                     	;# 
  1019  000A                     	;# 
  1020  000B                     	;# 
  1021  000C                     	;# 
  1022  000E                     	;# 
  1023  0012                     	;# 
  1024  0014                     	;# 
  1025  0018                     	;# 
  1026  001A                     	;# 
  1027  009B                     	;# 
  1028  009B                     	;# 
  1029  009C                     	;# 
  1030  009D                     	;# 
  1031  009E                     	;# 
  1032  009F                     	;# 
  1033  0119                     	;# 
  1034  0119                     	;# 
  1035  0119                     	;# 
  1036  011A                     	;# 
  1037  011A                     	;# 
  1038  011A                     	;# 
  1039  011B                     	;# 
  1040  011B                     	;# 
  1041  011B                     	;# 
  1042  011B                     	;# 
  1043  011B                     	;# 
  1044  011C                     	;# 
  1045  011C                     	;# 
  1046  011C                     	;# 
  1047  011D                     	;# 
  1048  011D                     	;# 
  1049  011D                     	;# 
  1050  011E                     	;# 
  1051  011E                     	;# 
  1052  011E                     	;# 
  1053  011F                     	;# 
  1054  011F                     	;# 
  1055  011F                     	;# 
  1056  011F                     	;# 
  1057  011F                     	;# 
  1058  018C                     	;# 
  1059  018D                     	;# 
  1060  018E                     	;# 
  1061  018F                     	;# 
  1062  0190                     	;# 
  1063  0191                     	;# 
  1064  0192                     	;# 
  1065  020C                     	;# 
  1066  020C                     	;# 
  1067  020D                     	;# 
  1068  020E                     	;# 
  1069  020F                     	;# 
  1070  020F                     	;# 
  1071  0210                     	;# 
  1072  0210                     	;# 
  1073  0211                     	;# 
  1074  0211                     	;# 
  1075  028C                     	;# 
  1076  028C                     	;# 
  1077  028D                     	;# 
  1078  028D                     	;# 
  1079  028E                     	;# 
  1080  028F                     	;# 
  1081  0290                     	;# 
  1082  0291                     	;# 
  1083  030C                     	;# 
  1084  030C                     	;# 
  1085  030D                     	;# 
  1086  030E                     	;# 
  1087  030F                     	;# 
  1088  0310                     	;# 
  1089  0310                     	;# 
  1090  0311                     	;# 
  1091  0312                     	;# 
  1092  0313                     	;# 
  1093  0314                     	;# 
  1094  0314                     	;# 
  1095  0315                     	;# 
  1096  0316                     	;# 
  1097  0318                     	;# 
  1098  0318                     	;# 
  1099  0319                     	;# 
  1100  031A                     	;# 
  1101  031C                     	;# 
  1102  031C                     	;# 
  1103  031D                     	;# 
  1104  031E                     	;# 
  1105  038C                     	;# 
  1106  038C                     	;# 
  1107  038D                     	;# 
  1108  038E                     	;# 
  1109  058C                     	;# 
  1110  058C                     	;# 
  1111  058D                     	;# 
  1112  058E                     	;# 
  1113  058F                     	;# 
  1114  058F                     	;# 
  1115  0590                     	;# 
  1116  0591                     	;# 
  1117  0592                     	;# 
  1118  0593                     	;# 
  1119  059C                     	;# 
  1120  059C                     	;# 
  1121  059D                     	;# 
  1122  059D                     	;# 
  1123  059E                     	;# 
  1124  059F                     	;# 
  1125  060C                     	;# 
  1126  060D                     	;# 
  1127  060E                     	;# 
  1128  060F                     	;# 
  1129  0610                     	;# 
  1130  0611                     	;# 
  1131  0612                     	;# 
  1132  0613                     	;# 
  1133  0614                     	;# 
  1134  070C                     	;# 
  1135  070D                     	;# 
  1136  070E                     	;# 
  1137  070F                     	;# 
  1138  0710                     	;# 
  1139  0711                     	;# 
  1140  0712                     	;# 
  1141  0713                     	;# 
  1142  0716                     	;# 
  1143  0717                     	;# 
  1144  0718                     	;# 
  1145  0719                     	;# 
  1146  071A                     	;# 
  1147  071B                     	;# 
  1148  071C                     	;# 
  1149  071D                     	;# 
  1150  0796                     	;# 
  1151  0797                     	;# 
  1152  0798                     	;# 
  1153  0799                     	;# 
  1154  079A                     	;# 
  1155  079B                     	;# 
  1156  080C                     	;# 
  1157  080D                     	;# 
  1158  080E                     	;# 
  1159  080F                     	;# 
  1160  0810                     	;# 
  1161  0811                     	;# 
  1162  0813                     	;# 
  1163  0814                     	;# 
  1164  081A                     	;# 
  1165  081A                     	;# 
  1166  081B                     	;# 
  1167  081C                     	;# 
  1168  081C                     	;# 
  1169  081D                     	;# 
  1170  081E                     	;# 
  1171  081F                     	;# 
  1172  088C                     	;# 
  1173  088D                     	;# 
  1174  088E                     	;# 
  1175  088F                     	;# 
  1176  0890                     	;# 
  1177  0891                     	;# 
  1178  0892                     	;# 
  1179  0893                     	;# 
  1180  0895                     	;# 
  1181  0896                     	;# 
  1182  090C                     	;# 
  1183  090E                     	;# 
  1184  090F                     	;# 
  1185  091F                     	;# 
  1186  098F                     	;# 
  1187  098F                     	;# 
  1188  0990                     	;# 
  1189  0991                     	;# 
  1190  0992                     	;# 
  1191  0993                     	;# 
  1192  0994                     	;# 
  1193  0995                     	;# 
  1194  0996                     	;# 
  1195  0997                     	;# 
  1196  0A19                     	;# 
  1197  0A19                     	;# 
  1198  0A1A                     	;# 
  1199  0A1A                     	;# 
  1200  0A1B                     	;# 
  1201  0A1B                     	;# 
  1202  0A1B                     	;# 
  1203  0A1C                     	;# 
  1204  0A1C                     	;# 
  1205  0A1D                     	;# 
  1206  0A1D                     	;# 
  1207  0A1E                     	;# 
  1208  0A1E                     	;# 
  1209  0A1F                     	;# 
  1210  0A1F                     	;# 
  1211  0A1F                     	;# 
  1212  1E0F                     	;# 
  1213  1E10                     	;# 
  1214  1E11                     	;# 
  1215  1E12                     	;# 
  1216  1E13                     	;# 
  1217  1E14                     	;# 
  1218  1E15                     	;# 
  1219  1E16                     	;# 
  1220  1E17                     	;# 
  1221  1E18                     	;# 
  1222  1E19                     	;# 
  1223  1E1A                     	;# 
  1224  1E1B                     	;# 
  1225  1E1C                     	;# 
  1226  1E1D                     	;# 
  1227  1E1E                     	;# 
  1228  1E1F                     	;# 
  1229  1E20                     	;# 
  1230  1E21                     	;# 
  1231  1E22                     	;# 
  1232  1E23                     	;# 
  1233  1E24                     	;# 
  1234  1E25                     	;# 
  1235  1E26                     	;# 
  1236  1E27                     	;# 
  1237  1E28                     	;# 
  1238  1E29                     	;# 
  1239  1E2A                     	;# 
  1240  1E2B                     	;# 
  1241  1E2C                     	;# 
  1242  1E2D                     	;# 
  1243  1E2E                     	;# 
  1244  1E2F                     	;# 
  1245  1E30                     	;# 
  1246  1E31                     	;# 
  1247  1E32                     	;# 
  1248  1E33                     	;# 
  1249  1E34                     	;# 
  1250  1E35                     	;# 
  1251  1E36                     	;# 
  1252  1E37                     	;# 
  1253  1E8F                     	;# 
  1254  1E90                     	;# 
  1255  1E91                     	;# 
  1256  1E92                     	;# 
  1257  1E93                     	;# 
  1258  1E9C                     	;# 
  1259  1EA1                     	;# 
  1260  1EA2                     	;# 
  1261  1EB1                     	;# 
  1262  1EBB                     	;# 
  1263  1EBC                     	;# 
  1264  1EBD                     	;# 
  1265  1EBE                     	;# 
  1266  1EC3                     	;# 
  1267  1EC5                     	;# 
  1268  1EC6                     	;# 
  1269  1EC7                     	;# 
  1270  1ECB                     	;# 
  1271  1ECC                     	;# 
  1272  1ECD                     	;# 
  1273  1ECE                     	;# 
  1274  1F10                     	;# 
  1275  1F11                     	;# 
  1276  1F12                     	;# 
  1277  1F13                     	;# 
  1278  1F14                     	;# 
  1279  1F15                     	;# 
  1280  1F20                     	;# 
  1281  1F21                     	;# 
  1282  1F22                     	;# 
  1283  1F23                     	;# 
  1284  1F24                     	;# 
  1285  1F25                     	;# 
  1286  1F38                     	;# 
  1287  1F39                     	;# 
  1288  1F3A                     	;# 
  1289  1F3B                     	;# 
  1290  1F3C                     	;# 
  1291  1F3D                     	;# 
  1292  1F3E                     	;# 
  1293  1F3F                     	;# 
  1294  1F4E                     	;# 
  1295  1F4F                     	;# 
  1296  1F50                     	;# 
  1297  1F51                     	;# 
  1298  1F52                     	;# 
  1299  1F53                     	;# 
  1300  1F54                     	;# 
  1301  1F55                     	;# 
  1302  1FE4                     	;# 
  1303  1FE5                     	;# 
  1304  1FE6                     	;# 
  1305  1FE7                     	;# 
  1306  1FE8                     	;# 
  1307  1FE8                     	;# 
  1308  1FE9                     	;# 
  1309  1FEA                     	;# 
  1310  1FEA                     	;# 
  1311  1FEB                     	;# 
  1312  1FED                     	;# 
  1313  1FEE                     	;# 
  1314  1FEF                     	;# 
  1315  0000                     	;# 
  1316  0001                     	;# 
  1317  0002                     	;# 
  1318  0003                     	;# 
  1319  0004                     	;# 
  1320  0005                     	;# 
  1321  0006                     	;# 
  1322  0007                     	;# 
  1323  0008                     	;# 
  1324  0009                     	;# 
  1325  000A                     	;# 
  1326  000B                     	;# 
  1327  000C                     	;# 
  1328  000E                     	;# 
  1329  0012                     	;# 
  1330  0014                     	;# 
  1331  0018                     	;# 
  1332  001A                     	;# 
  1333  009B                     	;# 
  1334  009B                     	;# 
  1335  009C                     	;# 
  1336  009D                     	;# 
  1337  009E                     	;# 
  1338  009F                     	;# 
  1339  0119                     	;# 
  1340  0119                     	;# 
  1341  0119                     	;# 
  1342  011A                     	;# 
  1343  011A                     	;# 
  1344  011A                     	;# 
  1345  011B                     	;# 
  1346  011B                     	;# 
  1347  011B                     	;# 
  1348  011B                     	;# 
  1349  011B                     	;# 
  1350  011C                     	;# 
  1351  011C                     	;# 
  1352  011C                     	;# 
  1353  011D                     	;# 
  1354  011D                     	;# 
  1355  011D                     	;# 
  1356  011E                     	;# 
  1357  011E                     	;# 
  1358  011E                     	;# 
  1359  011F                     	;# 
  1360  011F                     	;# 
  1361  011F                     	;# 
  1362  011F                     	;# 
  1363  011F                     	;# 
  1364  018C                     	;# 
  1365  018D                     	;# 
  1366  018E                     	;# 
  1367  018F                     	;# 
  1368  0190                     	;# 
  1369  0191                     	;# 
  1370  0192                     	;# 
  1371  020C                     	;# 
  1372  020C                     	;# 
  1373  020D                     	;# 
  1374  020E                     	;# 
  1375  020F                     	;# 
  1376  020F                     	;# 
  1377  0210                     	;# 
  1378  0210                     	;# 
  1379  0211                     	;# 
  1380  0211                     	;# 
  1381  028C                     	;# 
  1382  028C                     	;# 
  1383  028D                     	;# 
  1384  028D                     	;# 
  1385  028E                     	;# 
  1386  028F                     	;# 
  1387  0290                     	;# 
  1388  0291                     	;# 
  1389  030C                     	;# 
  1390  030C                     	;# 
  1391  030D                     	;# 
  1392  030E                     	;# 
  1393  030F                     	;# 
  1394  0310                     	;# 
  1395  0310                     	;# 
  1396  0311                     	;# 
  1397  0312                     	;# 
  1398  0313                     	;# 
  1399  0314                     	;# 
  1400  0314                     	;# 
  1401  0315                     	;# 
  1402  0316                     	;# 
  1403  0318                     	;# 
  1404  0318                     	;# 
  1405  0319                     	;# 
  1406  031A                     	;# 
  1407  031C                     	;# 
  1408  031C                     	;# 
  1409  031D                     	;# 
  1410  031E                     	;# 
  1411  038C                     	;# 
  1412  038C                     	;# 
  1413  038D                     	;# 
  1414  038E                     	;# 
  1415  058C                     	;# 
  1416  058C                     	;# 
  1417  058D                     	;# 
  1418  058E                     	;# 
  1419  058F                     	;# 
  1420  058F                     	;# 
  1421  0590                     	;# 
  1422  0591                     	;# 
  1423  0592                     	;# 
  1424  0593                     	;# 
  1425  059C                     	;# 
  1426  059C                     	;# 
  1427  059D                     	;# 
  1428  059D                     	;# 
  1429  059E                     	;# 
  1430  059F                     	;# 
  1431  060C                     	;# 
  1432  060D                     	;# 
  1433  060E                     	;# 
  1434  060F                     	;# 
  1435  0610                     	;# 
  1436  0611                     	;# 
  1437  0612                     	;# 
  1438  0613                     	;# 
  1439  0614                     	;# 
  1440  070C                     	;# 
  1441  070D                     	;# 
  1442  070E                     	;# 
  1443  070F                     	;# 
  1444  0710                     	;# 
  1445  0711                     	;# 
  1446  0712                     	;# 
  1447  0713                     	;# 
  1448  0716                     	;# 
  1449  0717                     	;# 
  1450  0718                     	;# 
  1451  0719                     	;# 
  1452  071A                     	;# 
  1453  071B                     	;# 
  1454  071C                     	;# 
  1455  071D                     	;# 
  1456  0796                     	;# 
  1457  0797                     	;# 
  1458  0798                     	;# 
  1459  0799                     	;# 
  1460  079A                     	;# 
  1461  079B                     	;# 
  1462  080C                     	;# 
  1463  080D                     	;# 
  1464  080E                     	;# 
  1465  080F                     	;# 
  1466  0810                     	;# 
  1467  0811                     	;# 
  1468  0813                     	;# 
  1469  0814                     	;# 
  1470  081A                     	;# 
  1471  081A                     	;# 
  1472  081B                     	;# 
  1473  081C                     	;# 
  1474  081C                     	;# 
  1475  081D                     	;# 
  1476  081E                     	;# 
  1477  081F                     	;# 
  1478  088C                     	;# 
  1479  088D                     	;# 
  1480  088E                     	;# 
  1481  088F                     	;# 
  1482  0890                     	;# 
  1483  0891                     	;# 
  1484  0892                     	;# 
  1485  0893                     	;# 
  1486  0895                     	;# 
  1487  0896                     	;# 
  1488  090C                     	;# 
  1489  090E                     	;# 
  1490  090F                     	;# 
  1491  091F                     	;# 
  1492  098F                     	;# 
  1493  098F                     	;# 
  1494  0990                     	;# 
  1495  0991                     	;# 
  1496  0992                     	;# 
  1497  0993                     	;# 
  1498  0994                     	;# 
  1499  0995                     	;# 
  1500  0996                     	;# 
  1501  0997                     	;# 
  1502  0A19                     	;# 
  1503  0A19                     	;# 
  1504  0A1A                     	;# 
  1505  0A1A                     	;# 
  1506  0A1B                     	;# 
  1507  0A1B                     	;# 
  1508  0A1B                     	;# 
  1509  0A1C                     	;# 
  1510  0A1C                     	;# 
  1511  0A1D                     	;# 
  1512  0A1D                     	;# 
  1513  0A1E                     	;# 
  1514  0A1E                     	;# 
  1515  0A1F                     	;# 
  1516  0A1F                     	;# 
  1517  0A1F                     	;# 
  1518  1E0F                     	;# 
  1519  1E10                     	;# 
  1520  1E11                     	;# 
  1521  1E12                     	;# 
  1522  1E13                     	;# 
  1523  1E14                     	;# 
  1524  1E15                     	;# 
  1525  1E16                     	;# 
  1526  1E17                     	;# 
  1527  1E18                     	;# 
  1528  1E19                     	;# 
  1529  1E1A                     	;# 
  1530  1E1B                     	;# 
  1531  1E1C                     	;# 
  1532  1E1D                     	;# 
  1533  1E1E                     	;# 
  1534  1E1F                     	;# 
  1535  1E20                     	;# 
  1536  1E21                     	;# 
  1537  1E22                     	;# 
  1538  1E23                     	;# 
  1539  1E24                     	;# 
  1540  1E25                     	;# 
  1541  1E26                     	;# 
  1542  1E27                     	;# 
  1543  1E28                     	;# 
  1544  1E29                     	;# 
  1545  1E2A                     	;# 
  1546  1E2B                     	;# 
  1547  1E2C                     	;# 
  1548  1E2D                     	;# 
  1549  1E2E                     	;# 
  1550  1E2F                     	;# 
  1551  1E30                     	;# 
  1552  1E31                     	;# 
  1553  1E32                     	;# 
  1554  1E33                     	;# 
  1555  1E34                     	;# 
  1556  1E35                     	;# 
  1557  1E36                     	;# 
  1558  1E37                     	;# 
  1559  1E8F                     	;# 
  1560  1E90                     	;# 
  1561  1E91                     	;# 
  1562  1E92                     	;# 
  1563  1E93                     	;# 
  1564  1E9C                     	;# 
  1565  1EA1                     	;# 
  1566  1EA2                     	;# 
  1567  1EB1                     	;# 
  1568  1EBB                     	;# 
  1569  1EBC                     	;# 
  1570  1EBD                     	;# 
  1571  1EBE                     	;# 
  1572  1EC3                     	;# 
  1573  1EC5                     	;# 
  1574  1EC6                     	;# 
  1575  1EC7                     	;# 
  1576  1ECB                     	;# 
  1577  1ECC                     	;# 
  1578  1ECD                     	;# 
  1579  1ECE                     	;# 
  1580  1F10                     	;# 
  1581  1F11                     	;# 
  1582  1F12                     	;# 
  1583  1F13                     	;# 
  1584  1F14                     	;# 
  1585  1F15                     	;# 
  1586  1F20                     	;# 
  1587  1F21                     	;# 
  1588  1F22                     	;# 
  1589  1F23                     	;# 
  1590  1F24                     	;# 
  1591  1F25                     	;# 
  1592  1F38                     	;# 
  1593  1F39                     	;# 
  1594  1F3A                     	;# 
  1595  1F3B                     	;# 
  1596  1F3C                     	;# 
  1597  1F3D                     	;# 
  1598  1F3E                     	;# 
  1599  1F3F                     	;# 
  1600  1F4E                     	;# 
  1601  1F4F                     	;# 
  1602  1F50                     	;# 
  1603  1F51                     	;# 
  1604  1F52                     	;# 
  1605  1F53                     	;# 
  1606  1F54                     	;# 
  1607  1F55                     	;# 
  1608  1FE4                     	;# 
  1609  1FE5                     	;# 
  1610  1FE6                     	;# 
  1611  1FE7                     	;# 
  1612  1FE8                     	;# 
  1613  1FE8                     	;# 
  1614  1FE9                     	;# 
  1615  1FEA                     	;# 
  1616  1FEA                     	;# 
  1617  1FEB                     	;# 
  1618  1FED                     	;# 
  1619  1FEE                     	;# 
  1620  1FEF                     	;# 
  1621                           
  1622 ;; Function _read is unused but had its address taken
  1623  0000                     
  1624 ;; Function _readMul is unused but had its address taken
  1625  0000                     
  1626 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  1627  0000                     
  1628 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  1629  0000                     
  1630 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  1631  0000                     
  1632                           	psect	stringtext1
  1633  0800                     __pstringtext1:	
  1634  0800                     _adxl34x_reg_init:	
  1635  0800  34E5               	retlw	229
  1636  0801  340A               	retlw	10
  1637  0802  3400               	retlw	0
  1638  0803  3400               	retlw	0
  1639  0804  3400               	retlw	0
  1640  0805  3400               	retlw	0
  1641  0806  3400               	retlw	0
  1642  0807  3400               	retlw	0
  1643  0808  3405               	retlw	5
  1644  0809  3405               	retlw	5
  1645  080A  3401               	retlw	1
  1646  080B  3400               	retlw	0
  1647  080C  3401               	retlw	1
  1648  080D  3401               	retlw	1
  1649  080E  3400               	retlw	0
  1650  080F  3400               	retlw	0
  1651  0810  3400               	retlw	0
  1652  0811  3400               	retlw	0
  1653  0812  3400               	retlw	0
  1654  0813  3400               	retlw	0
  1655  0814  3400               	retlw	0
  1656  0815  3400               	retlw	0
  1657  0816  3400               	retlw	0
  1658  0817  3400               	retlw	0
  1659  0818  3400               	retlw	0
  1660  0819  3400               	retlw	0
  1661  081A  3400               	retlw	0
  1662  081B  3400               	retlw	0
  1663  081C  3400               	retlw	0
  1664  081D  3401               	retlw	1
  1665  081E  3400               	retlw	0
  1666  081F  3400               	retlw	0
  1667  0820  3400               	retlw	0
  1668  0821  3400               	retlw	0
  1669  0822  3400               	retlw	0
  1670  0823  3400               	retlw	0
  1671  0824  3400               	retlw	0
  1672  0825  3400               	retlw	0
  1673  0826  3400               	retlw	0
  1674  0827  3400               	retlw	0
  1675  0828  3400               	retlw	0
  1676  0829  3400               	retlw	0
  1677  082A  3400               	retlw	0
  1678  082B  3400               	retlw	0
  1679  082C  3400               	retlw	0
  1680  082D                     __end_of_adxl34x_reg_init:	
  1681                           
  1682                           	psect	nvBANK2
  1683  0165                     __pnvBANK2:	
  1684  0165                     _EUSART1_ErrorHandler:	
  1685  0165                     	ds	2
  1686  0167                     _EUSART1_OverrunErrorHandler:	
  1687  0167                     	ds	2
  1688  0169                     _EUSART1_FramingErrorHandler:	
  1689  0169                     	ds	2
  1690  0014                     _TRISC	set	20
  1691  0012                     _TRISA	set	18
  1692  001A                     _LATC	set	26
  1693  0018                     _LATA	set	24
  1694  011A                     _TXREG	set	282
  1695  011D                     _RCSTAbits	set	285
  1696  011E                     _TXSTA	set	286
  1697  011A                     _TX1REG	set	282
  1698  0119                     _RC1REG	set	281
  1699  011D                     _RC1STAbits	set	285
  1700  011E                     _TX1STAbits	set	286
  1701  011C                     _SP1BRGH	set	284
  1702  011B                     _SP1BRGL	set	283
  1703  011E                     _TX1STA	set	286
  1704  011D                     _RC1STA	set	285
  1705  011F                     _BAUD1CON	set	287
  1706  018F                     _SSP1STATbits	set	399
  1707  018C                     _SSP1BUF	set	396
  1708  0190                     _SSP1CON1bits	set	400
  1709  018D                     _SSP1ADD	set	397
  1710  0190                     _SSP1CON1	set	400
  1711  018F                     _SSP1STAT	set	399
  1712  070F                     _PIR3bits	set	1807
  1713  079B                     _PMD5	set	1947
  1714  079A                     _PMD4	set	1946
  1715  0799                     _PMD3	set	1945
  1716  0798                     _PMD2	set	1944
  1717  0797                     _PMD1	set	1943
  1718  0796                     _PMD0	set	1942
  1719  0892                     _OSCTUNE	set	2194
  1720  0890                     _OSCSTAT	set	2192
  1721  0893                     _OSCFRQ	set	2195
  1722  0891                     _OSCEN	set	2193
  1723  088F                     _OSCCON3	set	2191
  1724  088D                     _OSCCON1	set	2189
  1725  1EC6                     _SSP1DATPPS	set	7878
  1726  1EC5                     _SSP1CLKPPS	set	7877
  1727  1F22                     _RC2PPS	set	7970
  1728  1F24                     _RC4PPS	set	7972
  1729  1F20                     _RC0PPS	set	7968
  1730  1F51                     _SLRCONC	set	8017
  1731  1F3B                     _SLRCONA	set	7995
  1732  1F50                     _ODCONC	set	8016
  1733  1F3A                     _ODCONA	set	7994
  1734  1F4F                     _WPUC	set	8015
  1735  1F39                     _WPUA	set	7993
  1736  1F38                     _ANSELA	set	7992
  1737  1F4E                     _ANSELC	set	8014
  1738                           
  1739                           	psect	stringtext2
  1740  1000                     __pstringtext2:	
  1741  1000                     STR_1:	
  1742  1000  3457               	retlw	87	;'W'
  1743  1001  3472               	retlw	114	;'r'
  1744  1002  3469               	retlw	105	;'i'
  1745  1003  3474               	retlw	116	;'t'
  1746  1004  3469               	retlw	105	;'i'
  1747  1005  346E               	retlw	110	;'n'
  1748  1006  3467               	retlw	103	;'g'
  1749  1007  3420               	retlw	32	;' '
  1750  1008  3476               	retlw	118	;'v'
  1751  1009  3461               	retlw	97	;'a'
  1752  100A  346C               	retlw	108	;'l'
  1753  100B  3475               	retlw	117	;'u'
  1754  100C  3465               	retlw	101	;'e'
  1755  100D  3420               	retlw	32	;' '
  1756  100E  3425               	retlw	37	;'%'
  1757  100F  3458               	retlw	88	;'X'
  1758  1010  3420               	retlw	32	;' '
  1759  1011  3469               	retlw	105	;'i'
  1760  1012  346E               	retlw	110	;'n'
  1761  1013  3420               	retlw	32	;' '
  1762  1014  3472               	retlw	114	;'r'
  1763  1015  3465               	retlw	101	;'e'
  1764  1016  3467               	retlw	103	;'g'
  1765  1017  3469               	retlw	105	;'i'
  1766  1018  3473               	retlw	115	;'s'
  1767  1019  3474               	retlw	116	;'t'
  1768  101A  3465               	retlw	101	;'e'
  1769  101B  3472               	retlw	114	;'r'
  1770  101C  3420               	retlw	32	;' '
  1771  101D  3425               	retlw	37	;'%'
  1772  101E  3458               	retlw	88	;'X'
  1773  101F  340A               	retlw	10
  1774  1020  3400               	retlw	0
  1775                           
  1776                           	psect	stringtext3
  1777  1021                     __pstringtext3:	
  1778  1021                     STR_5:	
  1779  1021  3445               	retlw	69	;'E'
  1780  1022  346E               	retlw	110	;'n'
  1781  1023  3474               	retlw	116	;'t'
  1782  1024  3465               	retlw	101	;'e'
  1783  1025  3472               	retlw	114	;'r'
  1784  1026  3420               	retlw	32	;' '
  1785  1027  346C               	retlw	108	;'l'
  1786  1028  346F               	retlw	111	;'o'
  1787  1029  3477               	retlw	119	;'w'
  1788  102A  3420               	retlw	32	;' '
  1789  102B  3470               	retlw	112	;'p'
  1790  102C  346F               	retlw	111	;'o'
  1791  102D  3477               	retlw	119	;'w'
  1792  102E  3465               	retlw	101	;'e'
  1793  102F  3472               	retlw	114	;'r'
  1794  1030  3420               	retlw	32	;' '
  1795  1031  346D               	retlw	109	;'m'
  1796  1032  346F               	retlw	111	;'o'
  1797  1033  3464               	retlw	100	;'d'
  1798  1034  3465               	retlw	101	;'e'
  1799  1035  343A               	retlw	58	;':'
  1800  1036  3420               	retlw	32	;' '
  1801  1037  3425               	retlw	37	;'%'
  1802  1038  3464               	retlw	100	;'d'
  1803  1039  340A               	retlw	10
  1804  103A  3400               	retlw	0
  1805                           
  1806                           	psect	stringtext4
  1807  103B                     __pstringtext4:	
  1808  103B                     STR_6:	
  1809  103B  3445               	retlw	69	;'E'
  1810  103C  3478               	retlw	120	;'x'
  1811  103D  3469               	retlw	105	;'i'
  1812  103E  3474               	retlw	116	;'t'
  1813  103F  3420               	retlw	32	;' '
  1814  1040  346C               	retlw	108	;'l'
  1815  1041  346F               	retlw	111	;'o'
  1816  1042  3477               	retlw	119	;'w'
  1817  1043  3420               	retlw	32	;' '
  1818  1044  3470               	retlw	112	;'p'
  1819  1045  346F               	retlw	111	;'o'
  1820  1046  3477               	retlw	119	;'w'
  1821  1047  3465               	retlw	101	;'e'
  1822  1048  3472               	retlw	114	;'r'
  1823  1049  3420               	retlw	32	;' '
  1824  104A  346D               	retlw	109	;'m'
  1825  104B  346F               	retlw	111	;'o'
  1826  104C  3464               	retlw	100	;'d'
  1827  104D  3465               	retlw	101	;'e'
  1828  104E  343A               	retlw	58	;':'
  1829  104F  3420               	retlw	32	;' '
  1830  1050  3425               	retlw	37	;'%'
  1831  1051  3464               	retlw	100	;'d'
  1832  1052  340A               	retlw	10
  1833  1053  3400               	retlw	0
  1834                           
  1835                           	psect	stringtext5
  1836  1054                     __pstringtext5:	
  1837  1054                     STR_4:	
  1838  1054  3445               	retlw	69	;'E'
  1839  1055  3478               	retlw	120	;'x'
  1840  1056  3469               	retlw	105	;'i'
  1841  1057  3474               	retlw	116	;'t'
  1842  1058  3441               	retlw	65	;'A'
  1843  1059  3475               	retlw	117	;'u'
  1844  105A  3474               	retlw	116	;'t'
  1845  105B  346F               	retlw	111	;'o'
  1846  105C  3473               	retlw	115	;'s'
  1847  105D  3470               	retlw	112	;'p'
  1848  105E  3465               	retlw	101	;'e'
  1849  105F  3465               	retlw	101	;'e'
  1850  1060  3464               	retlw	100	;'d'
  1851  1061  3420               	retlw	32	;' '
  1852  1062  346D               	retlw	109	;'m'
  1853  1063  346F               	retlw	111	;'o'
  1854  1064  3464               	retlw	100	;'d'
  1855  1065  3465               	retlw	101	;'e'
  1856  1066  343A               	retlw	58	;':'
  1857  1067  3420               	retlw	32	;' '
  1858  1068  3425               	retlw	37	;'%'
  1859  1069  3464               	retlw	100	;'d'
  1860  106A  340A               	retlw	10
  1861  106B  3400               	retlw	0
  1862                           
  1863                           	psect	stringtext6
  1864  106C                     __pstringtext6:	
  1865  106C                     STR_3:	
  1866  106C  3449               	retlw	73	;'I'
  1867  106D  346E               	retlw	110	;'n'
  1868  106E  3469               	retlw	105	;'i'
  1869  106F  3474               	retlw	116	;'t'
  1870  1070  3469               	retlw	105	;'i'
  1871  1071  3461               	retlw	97	;'a'
  1872  1072  346C               	retlw	108	;'l'
  1873  1073  3469               	retlw	105	;'i'
  1874  1074  347A               	retlw	122	;'z'
  1875  1075  3465               	retlw	101	;'e'
  1876  1076  3420               	retlw	32	;' '
  1877  1077  3464               	retlw	100	;'d'
  1878  1078  3465               	retlw	101	;'e'
  1879  1079  3476               	retlw	118	;'v'
  1880  107A  3469               	retlw	105	;'i'
  1881  107B  3463               	retlw	99	;'c'
  1882  107C  3465               	retlw	101	;'e'
  1883  107D  343A               	retlw	58	;':'
  1884  107E  3420               	retlw	32	;' '
  1885  107F  3425               	retlw	37	;'%'
  1886  1080  3464               	retlw	100	;'d'
  1887  1081  340A               	retlw	10
  1888  1082  3400               	retlw	0
  1889                           
  1890                           	psect	stringtext7
  1891  0000                     __pstringtext7:	
  1892  1000                     
  1893                           ; #config settings
  1894  0000                     
  1895                           	psect	cinit
  1896  07E8                     start_initialization:	
  1897  07E8                     __initialization:	
  1898                           
  1899                           ; Clear objects allocated to BANK1
  1900  07E8  0141               	movlb	1	; select bank1
  1901  07E9  01EB               	clrf	__pbssBANK1& (0+127)
  1902  07EA  01EC               	clrf	(__pbssBANK1+1)& (0+127)
  1903  07EB  01ED               	clrf	(__pbssBANK1+2)& (0+127)
  1904  07EC  01EE               	clrf	(__pbssBANK1+3)& (0+127)
  1905  07ED  01EF               	clrf	(__pbssBANK1+4)& (0+127)
  1906                           
  1907                           ; Clear objects allocated to BANK2
  1908  07EE  3020               	movlw	low __pbssBANK2
  1909  07EF  0084               	movwf	4
  1910  07F0  3001               	movlw	high __pbssBANK2
  1911  07F1  0085               	movwf	5
  1912  07F2  303C               	movlw	60
  1913  07F3  318E  26A8  3187   	fcall	clear_ram0
  1914                           
  1915                           ; Clear objects allocated to BANK3
  1916  07F6  30A0               	movlw	low __pbssBANK3
  1917  07F7  0084               	movwf	4
  1918  07F8  3001               	movlw	high __pbssBANK3
  1919  07F9  0085               	movwf	5
  1920  07FA  3020               	movlw	32
  1921  07FB  318E  26A8         	fcall	clear_ram0
  1922  07FD                     end_of_initialization:	
  1923                           ;End of C runtime variable initialization code
  1924                           
  1925  07FD                     __end_of__initialization:	
  1926  07FD  0140               	movlb	0
  1927  07FE  3181  2992         	ljmp	_main	;jump to C main() function
  1928                           
  1929                           	psect	bssBANK1
  1930  00EB                     __pbssBANK1:	
  1931  00EB                     _flags:	
  1932  00EB                     	ds	2
  1933  00ED                     _commWriteByte:	
  1934  00ED                     	ds	2
  1935  00EF                     _ungetcnt:	
  1936  00EF                     	ds	1
  1937                           
  1938                           	psect	bssBANK2
  1939  0120                     __pbssBANK2:	
  1940  0120                     _adxl34x_reg:	
  1941  0120                     	ds	45
  1942  014D                     _nout:	
  1943  014D                     	ds	2
  1944  014F                     _width:	
  1945  014F                     	ds	2
  1946  0151                     _prec:	
  1947  0151                     	ds	2
  1948  0153                     _commReadMultipleBytes:	
  1949  0153                     	ds	2
  1950  0155                     _commWriteMultipleBytes:	
  1951  0155                     	ds	2
  1952  0157                     _commReadByte:	
  1953  0157                     	ds	2
  1954  0159                     _ungetbuf:	
  1955  0159                     	ds	1
  1956  015A                     _eusart1RxLastError:	
  1957  015A                     	ds	1
  1958  015B                     _input:	
  1959  015B                     	ds	1
  1960                           
  1961                           	psect	bssBANK3
  1962  01A0                     __pbssBANK3:	
  1963  01A0                     _dbuf:	
  1964  01A0                     	ds	32
  1965                           
  1966                           	psect	clrtext
  1967  0EA8                     clear_ram0:	
  1968                           ;	Called with FSR0 containing the base address, and
  1969                           ;	WREG with the size to clear
  1970                           
  1971  0EA8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1972  0EA9                     clrloop0:	
  1973  0EA9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1974  0EAA  3101               	addfsr 0,1
  1975  0EAB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1976  0EAC  2EA9               	goto	clrloop0	;have we reached the end yet?
  1977  0EAD  3400               	retlw	0	;all done for this memory range, return
  1978                           
  1979                           	psect	cstackBANK2
  1980  015C                     __pcstackBANK2:	
  1981  015C                     	ds	1
  1982  015D                     _main$1909:	
  1983                           
  1984                           ; 2 bytes @ 0x1
  1985  015D                     	ds	2
  1986  015F                     _main$1910:	
  1987                           
  1988                           ; 2 bytes @ 0x3
  1989  015F                     	ds	2
  1990  0161                     _main$1911:	
  1991                           
  1992                           ; 2 bytes @ 0x5
  1993  0161                     	ds	2
  1994  0163                     _main$1912:	
  1995                           
  1996                           ; 2 bytes @ 0x7
  1997  0163                     	ds	2
  1998                           
  1999                           	psect	cstackBANK1
  2000  00A0                     __pcstackBANK1:	
  2001  00A0                     vfprintf@fp:	
  2002                           
  2003                           ; 1 bytes @ 0x0
  2004  00A0                     	ds	1
  2005  00A1                     vfprintf@cfmt:	
  2006                           
  2007                           ; 2 bytes @ 0x1
  2008  00A1                     	ds	2
  2009  00A3                     ?_printf:	
  2010  00A3                     printf@fmt:	
  2011                           ; 2 bytes @ 0x3
  2012                           
  2013                           
  2014                           ; 2 bytes @ 0x3
  2015  00A3                     	ds	6
  2016  00A9                     ??_printf:	
  2017                           
  2018                           ; 1 bytes @ 0x9
  2019  00A9                     	ds	3
  2020  00AC                     printf@ap:	
  2021                           
  2022                           ; 1 bytes @ 0xC
  2023  00AC                     	ds	1
  2024  00AD                     ?_write:	
  2025  00AD                     ?_writeMul:	
  2026                           ; 1 bytes @ 0xD
  2027                           
  2028  00AD                     write@address:	
  2029                           ; 1 bytes @ 0xD
  2030                           
  2031  00AD                     writeMul@n:	
  2032                           ; 1 bytes @ 0xD
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0xD
  2036  00AD                     	ds	1
  2037  00AE                     write@value:	
  2038  00AE                     writeMul@address:	
  2039                           ; 1 bytes @ 0xE
  2040                           
  2041                           
  2042                           ; 1 bytes @ 0xE
  2043  00AE                     	ds	1
  2044  00AF                     ??_write:	
  2045  00AF                     writeMul@value:	
  2046                           ; 1 bytes @ 0xF
  2047                           
  2048                           
  2049                           ; 1 bytes @ 0xF
  2050  00AF                     	ds	1
  2051  00B0                     ??_writeMul:	
  2052                           
  2053                           ; 1 bytes @ 0x10
  2054  00B0                     	ds	2
  2055  00B2                     writeMul@i:	
  2056                           
  2057                           ; 2 bytes @ 0x12
  2058  00B2                     	ds	1
  2059  00B3                     ??_exitAutoSleepMode:	
  2060  00B3                     ??_enterLowPowerMode:	
  2061                           ; 1 bytes @ 0x13
  2062                           
  2063  00B3                     ??_exitLowPowerMode:	
  2064                           ; 1 bytes @ 0x13
  2065                           
  2066                           
  2067                           ; 1 bytes @ 0x13
  2068  00B3                     	ds	1
  2069  00B4                     ?_initializeDevice:	
  2070  00B4                     initializeDevice@init_values:	
  2071                           ; 1 bytes @ 0x14
  2072                           
  2073                           
  2074                           ; 45 bytes @ 0x14
  2075  00B4                     	ds	1
  2076  00B5                     exitAutoSleepMode@power_ctl_save:	
  2077  00B5                     enterLowPowerMode@bw_rate_save:	
  2078                           ; 1 bytes @ 0x15
  2079                           
  2080  00B5                     exitLowPowerMode@bw_rate_save:	
  2081                           ; 1 bytes @ 0x15
  2082                           
  2083                           
  2084                           ; 1 bytes @ 0x15
  2085  00B5                     	ds	44
  2086  00E1                     ??_initializeDevice:	
  2087                           
  2088                           ; 1 bytes @ 0x41
  2089  00E1                     	ds	3
  2090  00E4                     ?_main:	
  2091  00E4                     main@argc:	
  2092                           ; 2 bytes @ 0x44
  2093                           
  2094                           
  2095                           ; 2 bytes @ 0x44
  2096  00E4                     	ds	2
  2097  00E6                     main@argv:	
  2098                           
  2099                           ; 2 bytes @ 0x46
  2100  00E6                     	ds	2
  2101  00E8                     ??_main:	
  2102                           
  2103                           ; 1 bytes @ 0x48
  2104  00E8                     	ds	3
  2105                           
  2106                           	psect	cstackCOMMON
  2107  0070                     __pcstackCOMMON:	
  2108  0070                     ?_EUSART1_Initialize:	
  2109  0070                     ?_EUSART1_Write:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112  0070                     ??_EUSART1_Write:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115  0070                     ?_EUSART1_SetFramingErrorHandler:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118  0070                     ?_EUSART1_SetOverrunErrorHandler:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     ?_EUSART1_SetErrorHandler:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124  0070                     ?_setReadWriteByteInterfaces:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127  0070                     ?_setReadWriteMultipleByteInterfaces:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130  0070                     ?_exitAutoSleepMode:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0070                     ?_enterLowPowerMode:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0070                     ?_exitLowPowerMode:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139  0070                     ?_putch:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0070                     ??_putch:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0070                     ??___aodiv:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0070                     ??___aomod:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0070                     ?_strlen:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0070                     ?_isupper:	
  2155                           ; 2 bytes @ 0x0
  2156                           
  2157  0070                     ?_isalpha:	
  2158                           ; 2 bytes @ 0x0
  2159                           
  2160  0070                     ?_getch:	
  2161                           ; 2 bytes @ 0x0
  2162                           
  2163  0070                     ?_islower:	
  2164                           ; 2 bytes @ 0x0
  2165                           
  2166  0070                     EUSART1_Write@txData:	
  2167                           ; 2 bytes @ 0x0
  2168                           
  2169  0070                     putch@byte:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0070                     setReadWriteByteInterfaces@write_Interface:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0070                     setReadWriteMultipleByteInterfaces@writeInterface:	
  2176                           ; 2 bytes @ 0x0
  2177                           
  2178  0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  2179                           ; 2 bytes @ 0x0
  2180                           
  2181  0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  2182                           ; 2 bytes @ 0x0
  2183                           
  2184  0070                     EUSART1_SetErrorHandler@interruptHandler:	
  2185                           ; 2 bytes @ 0x0
  2186                           
  2187  0070                     isalpha@c:	
  2188                           ; 2 bytes @ 0x0
  2189                           
  2190  0070                     isupper@c:	
  2191                           ; 2 bytes @ 0x0
  2192                           
  2193  0070                     islower@c:	
  2194                           ; 2 bytes @ 0x0
  2195                           
  2196                           
  2197                           ; 2 bytes @ 0x0
  2198  0070                     	ds	1
  2199  0071                     ?_fputc:	
  2200  0071                     ___aodiv@counter:	
  2201                           ; 2 bytes @ 0x1
  2202                           
  2203  0071                     ___aomod@counter:	
  2204                           ; 1 bytes @ 0x1
  2205                           
  2206  0071                     fputc@c:	
  2207                           ; 1 bytes @ 0x1
  2208                           
  2209                           
  2210                           ; 2 bytes @ 0x1
  2211  0071                     	ds	1
  2212  0072                     ??_EUSART1_Initialize:	
  2213  0072                     ??_EUSART1_SetFramingErrorHandler:	
  2214                           ; 1 bytes @ 0x2
  2215                           
  2216  0072                     ??_EUSART1_SetOverrunErrorHandler:	
  2217                           ; 1 bytes @ 0x2
  2218                           
  2219  0072                     ??_EUSART1_SetErrorHandler:	
  2220                           ; 1 bytes @ 0x2
  2221                           
  2222  0072                     ??_strlen:	
  2223                           ; 1 bytes @ 0x2
  2224                           
  2225  0072                     ??_isupper:	
  2226                           ; 1 bytes @ 0x2
  2227                           
  2228  0072                     ??_isalpha:	
  2229                           ; 1 bytes @ 0x2
  2230                           
  2231  0072                     ??_getch:	
  2232                           ; 1 bytes @ 0x2
  2233                           
  2234  0072                     ??_islower:	
  2235                           ; 1 bytes @ 0x2
  2236                           
  2237  0072                     ?_fgetc:	
  2238                           ; 1 bytes @ 0x2
  2239                           
  2240  0072                     ___aodiv@sign:	
  2241                           ; 2 bytes @ 0x2
  2242                           
  2243  0072                     ___aomod@sign:	
  2244                           ; 1 bytes @ 0x2
  2245                           
  2246  0072                     setReadWriteByteInterfaces@read_Interface:	
  2247                           ; 1 bytes @ 0x2
  2248                           
  2249  0072                     setReadWriteMultipleByteInterfaces@readInterface:	
  2250                           ; 2 bytes @ 0x2
  2251                           
  2252                           
  2253                           ; 2 bytes @ 0x2
  2254  0072                     	ds	1
  2255  0073                     ?_abs:	
  2256  0073                     fputc@fp:	
  2257                           ; 2 bytes @ 0x3
  2258                           
  2259  0073                     strlen@a:	
  2260                           ; 1 bytes @ 0x3
  2261                           
  2262  0073                     abs@a:	
  2263                           ; 1 bytes @ 0x3
  2264                           
  2265  0073                     ___aodiv@quotient:	
  2266                           ; 2 bytes @ 0x3
  2267                           
  2268                           
  2269                           ; 8 bytes @ 0x3
  2270  0073                     	ds	1
  2271  0074                     ??_fputc:	
  2272  0074                     ??_fgetc:	
  2273                           ; 1 bytes @ 0x4
  2274                           
  2275  0074                     ??_setReadWriteByteInterfaces:	
  2276                           ; 1 bytes @ 0x4
  2277                           
  2278  0074                     ??_setReadWriteMultipleByteInterfaces:	
  2279                           ; 1 bytes @ 0x4
  2280                           
  2281  0074                     strlen@s:	
  2282                           ; 1 bytes @ 0x4
  2283                           
  2284                           
  2285                           ; 1 bytes @ 0x4
  2286  0074                     	ds	1
  2287  0075                     ??_abs:	
  2288                           
  2289                           ; 1 bytes @ 0x5
  2290  0075                     	ds	1
  2291  0076                     ?_toupper:	
  2292  0076                     toupper@c:	
  2293                           ; 2 bytes @ 0x6
  2294                           
  2295                           
  2296                           ; 2 bytes @ 0x6
  2297  0076                     	ds	1
  2298  0077                     fgetc@c:	
  2299                           
  2300                           ; 2 bytes @ 0x7
  2301  0077                     	ds	1
  2302  0078                     ??_toupper:	
  2303                           
  2304                           ; 1 bytes @ 0x8
  2305  0078                     	ds	1
  2306  0079                     ?_fputs:	
  2307  0079                     fputs@fp:	
  2308                           ; 2 bytes @ 0x9
  2309                           
  2310  0079                     fgetc@fp:	
  2311                           ; 1 bytes @ 0x9
  2312                           
  2313                           
  2314                           ; 1 bytes @ 0x9
  2315  0079                     	ds	1
  2316  007A                     ??_fputs:	
  2317  007A                     ?_getchar:	
  2318                           ; 1 bytes @ 0xA
  2319                           
  2320                           
  2321                           ; 2 bytes @ 0xA
  2322  007A                     	ds	2
  2323  007C                     ??_getchar:	
  2324  007C                     _toupper$1641:	
  2325                           ; 1 bytes @ 0xC
  2326                           
  2327                           
  2328                           ; 2 bytes @ 0xC
  2329  007C                     	ds	1
  2330  007D                     ??_pad:	
  2331                           
  2332                           ; 1 bytes @ 0xD
  2333  007D                     	ds	1
  2334                           
  2335                           	psect	cstackBANK0
  2336  0020                     __pcstackBANK0:	
  2337  0020                     ?___aodiv:	
  2338  0020                     ?___aomod:	
  2339                           ; 8 bytes @ 0x0
  2340                           
  2341  0020                     fputs@c:	
  2342                           ; 8 bytes @ 0x0
  2343                           
  2344  0020                     ___aodiv@divisor:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347  0020                     ___aomod@divisor:	
  2348                           ; 8 bytes @ 0x0
  2349                           
  2350                           
  2351                           ; 8 bytes @ 0x0
  2352  0020                     	ds	1
  2353  0021                     fputs@i:	
  2354                           
  2355                           ; 2 bytes @ 0x1
  2356  0021                     	ds	2
  2357  0023                     fputs@s:	
  2358                           
  2359                           ; 1 bytes @ 0x3
  2360  0023                     	ds	1
  2361  0024                     ?_pad:	
  2362  0024                     pad@buf:	
  2363                           ; 2 bytes @ 0x4
  2364                           
  2365                           
  2366                           ; 1 bytes @ 0x4
  2367  0024                     	ds	1
  2368  0025                     pad@p:	
  2369                           
  2370                           ; 2 bytes @ 0x5
  2371  0025                     	ds	2
  2372  0027                     pad@i:	
  2373                           
  2374                           ; 2 bytes @ 0x7
  2375  0027                     	ds	1
  2376  0028                     ___aodiv@dividend:	
  2377  0028                     ___aomod@dividend:	
  2378                           ; 8 bytes @ 0x8
  2379                           
  2380                           
  2381                           ; 8 bytes @ 0x8
  2382  0028                     	ds	1
  2383  0029                     pad@w:	
  2384                           
  2385                           ; 2 bytes @ 0x9
  2386  0029                     	ds	2
  2387  002B                     pad@fp:	
  2388                           
  2389                           ; 1 bytes @ 0xB
  2390  002B                     	ds	1
  2391  002C                     ?_xtoa:	
  2392  002C                     xtoa@d:	
  2393                           ; 2 bytes @ 0xC
  2394                           
  2395                           
  2396                           ; 8 bytes @ 0xC
  2397  002C                     	ds	4
  2398  0030                     ?_dtoa:	
  2399  0030                     dtoa@d:	
  2400                           ; 2 bytes @ 0x10
  2401                           
  2402                           
  2403                           ; 8 bytes @ 0x10
  2404  0030                     	ds	4
  2405  0034                     xtoa@x:	
  2406                           
  2407                           ; 1 bytes @ 0x14
  2408  0034                     	ds	1
  2409  0035                     ??_xtoa:	
  2410                           
  2411                           ; 1 bytes @ 0x15
  2412  0035                     	ds	3
  2413  0038                     ??_dtoa:	
  2414                           
  2415                           ; 1 bytes @ 0x18
  2416  0038                     	ds	3
  2417  003B                     _dtoa$1229:	
  2418                           
  2419                           ; 2 bytes @ 0x1B
  2420  003B                     	ds	2
  2421  003D                     dtoa@p:	
  2422  003D                     _xtoa$1240:	
  2423                           ; 2 bytes @ 0x1D
  2424                           
  2425                           
  2426                           ; 2 bytes @ 0x1D
  2427  003D                     	ds	2
  2428  003F                     dtoa@fp:	
  2429  003F                     _xtoa$1241:	
  2430                           ; 1 bytes @ 0x1F
  2431                           
  2432                           
  2433                           ; 2 bytes @ 0x1F
  2434  003F                     	ds	1
  2435  0040                     dtoa@w:	
  2436                           
  2437                           ; 2 bytes @ 0x20
  2438  0040                     	ds	1
  2439  0041                     xtoa@p:	
  2440                           
  2441                           ; 2 bytes @ 0x21
  2442  0041                     	ds	1
  2443  0042                     dtoa@s:	
  2444                           
  2445                           ; 2 bytes @ 0x22
  2446  0042                     	ds	1
  2447  0043                     xtoa@fp:	
  2448                           
  2449                           ; 1 bytes @ 0x23
  2450  0043                     	ds	1
  2451  0044                     xtoa@w:	
  2452  0044                     dtoa@n:	
  2453                           ; 2 bytes @ 0x24
  2454                           
  2455                           
  2456                           ; 8 bytes @ 0x24
  2457  0044                     	ds	2
  2458  0046                     xtoa@n:	
  2459                           
  2460                           ; 8 bytes @ 0x26
  2461  0046                     	ds	6
  2462  004C                     dtoa@i:	
  2463                           
  2464                           ; 2 bytes @ 0x2C
  2465  004C                     	ds	2
  2466  004E                     xtoa@i:	
  2467                           
  2468                           ; 2 bytes @ 0x2E
  2469  004E                     	ds	2
  2470  0050                     xtoa@c:	
  2471                           
  2472                           ; 2 bytes @ 0x30
  2473  0050                     	ds	2
  2474  0052                     ?_vfpfcnvrt:	
  2475  0052                     vfpfcnvrt@fmt:	
  2476                           ; 2 bytes @ 0x32
  2477                           
  2478                           
  2479                           ; 1 bytes @ 0x32
  2480  0052                     	ds	1
  2481  0053                     vfpfcnvrt@ap:	
  2482                           
  2483                           ; 1 bytes @ 0x33
  2484  0053                     	ds	1
  2485  0054                     ??_vfpfcnvrt:	
  2486                           
  2487                           ; 1 bytes @ 0x34
  2488  0054                     	ds	5
  2489  0059                     vfpfcnvrt@ll:	
  2490                           
  2491                           ; 8 bytes @ 0x39
  2492  0059                     	ds	8
  2493  0061                     vfpfcnvrt@llu:	
  2494                           
  2495                           ; 8 bytes @ 0x41
  2496  0061                     	ds	8
  2497  0069                     vfpfcnvrt@c:	
  2498                           
  2499                           ; 1 bytes @ 0x49
  2500  0069                     	ds	1
  2501  006A                     vfpfcnvrt@fp:	
  2502                           
  2503                           ; 1 bytes @ 0x4A
  2504  006A                     	ds	1
  2505  006B                     ?_vfprintf:	
  2506  006B                     vfprintf@fmt:	
  2507                           ; 2 bytes @ 0x4B
  2508                           
  2509                           
  2510                           ; 2 bytes @ 0x4B
  2511  006B                     	ds	2
  2512  006D                     vfprintf@ap:	
  2513                           
  2514                           ; 1 bytes @ 0x4D
  2515  006D                     	ds	1
  2516  006E                     ??_vfprintf:	
  2517                           
  2518                           ; 1 bytes @ 0x4E
  2519  006E                     	ds	2
  2520                           
  2521                           	psect	maintext
  2522  0192                     __pmaintext:	
  2523 ;;
  2524 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2525 ;;
  2526 ;; *************** function _main *****************
  2527 ;; Defined at:
  2528 ;;		line 68 in file "main.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  argc            2   68[BANK1 ] int 
  2531 ;;  argv            2   70[BANK1 ] PTR PTR unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  c               1    0        unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2   68[BANK1 ] int 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : B3F/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2543 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2546 ;;      Totals:         0       0       7       9       0       0       0       0       0       0       0       0       
      +0       0
  2547 ;;Total ram usage:       16 bytes
  2548 ;; Hardware stack levels required when called:   10
  2549 ;; This function calls:
  2550 ;;		_EUSART1_Initialize
  2551 ;;		_EUSART1_Write
  2552 ;;		_enterLowPowerMode
  2553 ;;		_exitAutoSleepMode
  2554 ;;		_exitLowPowerMode
  2555 ;;		_getchar
  2556 ;;		_initializeDevice
  2557 ;;		_printf
  2558 ;;		_setReadWriteByteInterfaces
  2559 ;;		_setReadWriteMultipleByteInterfaces
  2560 ;; This function is called by:
  2561 ;;		Startup code after reset
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           
  2566                           ;psect for function _main
  2567  0192                     _main:	
  2568                           
  2569                           ;main.c: 68:   int main(int argc, char *argv[]);main.c: 69:     {;main.c: 70:       EUSA
      +                          RT1_Initialize();
  2570                           
  2571                           ;incstack = 0
  2572                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2573  0192  318F  279A  3181   	fcall	_EUSART1_Initialize
  2574                           
  2575                           ;main.c: 71:       EUSART1_Write('a');
  2576  0195  3061               	movlw	97
  2577  0196  318E  26AE  3181   	fcall	_EUSART1_Write
  2578                           
  2579                           ;main.c: 73:       setReadWriteByteInterfaces(&write, &read);
  2580  0199  304E               	movlw	low _write
  2581  019A  00F0               	movwf	setReadWriteByteInterfaces@write_Interface
  2582  019B  300F               	movlw	high _write
  2583  019C  00F1               	movwf	setReadWriteByteInterfaces@write_Interface+1
  2584  019D  3000               	movlw	0
  2585  019E  00F2               	movwf	setReadWriteByteInterfaces@read_Interface
  2586  019F  3000               	movlw	0
  2587  01A0  00F3               	movwf	setReadWriteByteInterfaces@read_Interface+1
  2588  01A1  318E  26C8  3181   	fcall	_setReadWriteByteInterfaces
  2589                           
  2590                           ;main.c: 74:       setReadWriteMultipleByteInterfaces(&writeMul, readMul);
  2591  01A4  3071               	movlw	low _writeMul
  2592  01A5  00F0               	movwf	setReadWriteMultipleByteInterfaces@writeInterface
  2593  01A6  3000               	movlw	high _writeMul
  2594  01A7  00F1               	movwf	setReadWriteMultipleByteInterfaces@writeInterface+1
  2595  01A8  3000               	movlw	0
  2596  01A9  00F2               	movwf	setReadWriteMultipleByteInterfaces@readInterface
  2597  01AA  3000               	movlw	0
  2598  01AB  00F3               	movwf	setReadWriteMultipleByteInterfaces@readInterface+1
  2599  01AC  318E  26BE  3181   	fcall	_setReadWriteMultipleByteInterfaces
  2600                           
  2601                           ;main.c: 75:       printf("Initialize device: %d\n", initializeDevice(adxl34x_reg_init))
      +                          ;
  2602  01AF  3000               	movlw	low (_adxl34x_reg_init| (0+32768))
  2603  01B0  0084               	movwf	4
  2604  01B1  3088               	movlw	high (_adxl34x_reg_init| (0+32768))
  2605  01B2  0085               	movwf	5
  2606  01B3  30B4               	movlw	low initializeDevice@init_values
  2607  01B4  0086               	movwf	6
  2608  01B5  3000               	movlw	high initializeDevice@init_values
  2609  01B6  0087               	movwf	7
  2610  01B7  302D               	movlw	45
  2611  01B8  0141               	movlb	1	; select bank1
  2612  01B9  00E8               	movwf	??_main^(0+128)
  2613  01BA                     u3070:	
  2614  01BA  0012               	moviw fsr0++
  2615  01BB  001E               	movwi fsr1++
  2616  01BC  0BE8               	decfsz	??_main^(0+128),f
  2617  01BD  29BA               	goto	u3070
  2618  01BE  318E  26DF  3181   	fcall	_initializeDevice
  2619  01C1  0141               	movlb	1	; select bank1
  2620  01C2  00E9               	movwf	(??_main+1)^(0+128)
  2621  01C3  01EA               	clrf	((??_main+1)^(0+128)+1)
  2622  01C4  0869               	movf	(??_main+1)^(0+128),w
  2623  01C5  0142               	movlb	2	; select bank2
  2624  01C6  00DD               	movwf	_main$1909^(0+256)
  2625  01C7  0141               	movlb	1	; select bank1
  2626  01C8  086A               	movf	(??_main+2)^(0+128),w
  2627  01C9  0142               	movlb	2	; select bank2
  2628  01CA  00DE               	movwf	(_main$1909+1)^(0+256)
  2629                           
  2630                           ;main.c: 75:       printf("Initialize device: %d\n", initializeDevice(adxl34x_reg_init))
      +                          ;
  2631  01CB  306C               	movlw	low (STR_3| (0+32768))
  2632  01CC  0141               	movlb	1	; select bank1
  2633  01CD  00A3               	movwf	printf@fmt^(0+128)
  2634  01CE  3090               	movlw	high (STR_3| (0+32768))
  2635  01CF  00A4               	movwf	(printf@fmt^(0+128)+1)
  2636  01D0  0142               	movlb	2	; select bank2
  2637  01D1  085E               	movf	(_main$1909+1)^(0+256),w
  2638  01D2  0141               	movlb	1	; select bank1
  2639  01D3  00A6               	movwf	((?_printf+1)^(0+128)+2)
  2640  01D4  0142               	movlb	2	; select bank2
  2641  01D5  085D               	movf	_main$1909^(0+256),w
  2642  01D6  0141               	movlb	1	; select bank1
  2643  01D7  00A5               	movwf	(?_printf^(0+128)+2)
  2644  01D8  318E  26F3  3181   	fcall	_printf
  2645                           
  2646                           ;main.c: 76:       printf("ExitAutospeed mode: %d\n",exitAutoSleepMode());
  2647  01DB  318F  27DC  3181   	fcall	_exitAutoSleepMode
  2648  01DE  0141               	movlb	1	; select bank1
  2649  01DF  00E8               	movwf	??_main^(0+128)
  2650  01E0  01E9               	clrf	(??_main^(0+128)+1)
  2651  01E1  0868               	movf	??_main^(0+128),w
  2652  01E2  0142               	movlb	2	; select bank2
  2653  01E3  00DF               	movwf	_main$1910^(0+256)
  2654  01E4  0141               	movlb	1	; select bank1
  2655  01E5  0869               	movf	(??_main+1)^(0+128),w
  2656  01E6  0142               	movlb	2	; select bank2
  2657  01E7  00E0               	movwf	(_main$1910+1)^(0+256)
  2658                           
  2659                           ;main.c: 76:       printf("ExitAutospeed mode: %d\n",exitAutoSleepMode());
  2660  01E8  3054               	movlw	low (STR_4| (0+32768))
  2661  01E9  0141               	movlb	1	; select bank1
  2662  01EA  00A3               	movwf	printf@fmt^(0+128)
  2663  01EB  3090               	movlw	high (STR_4| (0+32768))
  2664  01EC  00A4               	movwf	(printf@fmt^(0+128)+1)
  2665  01ED  0142               	movlb	2	; select bank2
  2666  01EE  0860               	movf	(_main$1910+1)^(0+256),w
  2667  01EF  0141               	movlb	1	; select bank1
  2668  01F0  00A6               	movwf	((?_printf+1)^(0+128)+2)
  2669  01F1  0142               	movlb	2	; select bank2
  2670  01F2  085F               	movf	_main$1910^(0+256),w
  2671  01F3  0141               	movlb	1	; select bank1
  2672  01F4  00A5               	movwf	(?_printf^(0+128)+2)
  2673  01F5  318E  26F3  3181   	fcall	_printf
  2674                           
  2675                           ;main.c: 77:       printf("Enter low power mode: %d\n", enterLowPowerMode());
  2676  01F8  3180  2006  3181   	fcall	_enterLowPowerMode
  2677  01FB  0141               	movlb	1	; select bank1
  2678  01FC  00E8               	movwf	??_main^(0+128)
  2679  01FD  01E9               	clrf	(??_main^(0+128)+1)
  2680  01FE  0868               	movf	??_main^(0+128),w
  2681  01FF  0142               	movlb	2	; select bank2
  2682  0200  00E1               	movwf	_main$1911^(0+256)
  2683  0201  0141               	movlb	1	; select bank1
  2684  0202  0869               	movf	(??_main+1)^(0+128),w
  2685  0203  0142               	movlb	2	; select bank2
  2686  0204  00E2               	movwf	(_main$1911+1)^(0+256)
  2687                           
  2688                           ;main.c: 77:       printf("Enter low power mode: %d\n", enterLowPowerMode());
  2689  0205  3021               	movlw	low (STR_5| (0+32768))
  2690  0206  0141               	movlb	1	; select bank1
  2691  0207  00A3               	movwf	printf@fmt^(0+128)
  2692  0208  3090               	movlw	high (STR_5| (0+32768))
  2693  0209  00A4               	movwf	(printf@fmt^(0+128)+1)
  2694  020A  0142               	movlb	2	; select bank2
  2695  020B  0862               	movf	(_main$1911+1)^(0+256),w
  2696  020C  0141               	movlb	1	; select bank1
  2697  020D  00A6               	movwf	((?_printf+1)^(0+128)+2)
  2698  020E  0142               	movlb	2	; select bank2
  2699  020F  0861               	movf	_main$1911^(0+256),w
  2700  0210  0141               	movlb	1	; select bank1
  2701  0211  00A5               	movwf	(?_printf^(0+128)+2)
  2702  0212  318E  26F3  3181   	fcall	_printf
  2703                           
  2704                           ;main.c: 78:       printf("Exit low power mode: %d\n", exitLowPowerMode());
  2705  0215  3180  2027  3181   	fcall	_exitLowPowerMode
  2706  0218  0141               	movlb	1	; select bank1
  2707  0219  00E8               	movwf	??_main^(0+128)
  2708  021A  01E9               	clrf	(??_main^(0+128)+1)
  2709  021B  0868               	movf	??_main^(0+128),w
  2710  021C  0142               	movlb	2	; select bank2
  2711  021D  00E3               	movwf	_main$1912^(0+256)
  2712  021E  0141               	movlb	1	; select bank1
  2713  021F  0869               	movf	(??_main+1)^(0+128),w
  2714  0220  0142               	movlb	2	; select bank2
  2715  0221  00E4               	movwf	(_main$1912+1)^(0+256)
  2716                           
  2717                           ;main.c: 78:       printf("Exit low power mode: %d\n", exitLowPowerMode());
  2718  0222  303B               	movlw	low (STR_6| (0+32768))
  2719  0223  0141               	movlb	1	; select bank1
  2720  0224  00A3               	movwf	printf@fmt^(0+128)
  2721  0225  3090               	movlw	high (STR_6| (0+32768))
  2722  0226  00A4               	movwf	(printf@fmt^(0+128)+1)
  2723  0227  0142               	movlb	2	; select bank2
  2724  0228  0864               	movf	(_main$1912+1)^(0+256),w
  2725  0229  0141               	movlb	1	; select bank1
  2726  022A  00A6               	movwf	((?_printf+1)^(0+128)+2)
  2727  022B  0142               	movlb	2	; select bank2
  2728  022C  0863               	movf	_main$1912^(0+256),w
  2729  022D  0141               	movlb	1	; select bank1
  2730  022E  00A5               	movwf	(?_printf^(0+128)+2)
  2731  022F  318E  26F3  3181   	fcall	_printf
  2732  0232  318E  26B6         	fcall	_getchar
  2733  0234  3180  2802         	ljmp	start
  2734  0236                     __end_of_main:	
  2735                           
  2736                           	psect	text1
  2737  0EBE                     __ptext1:	
  2738 ;; *************** function _setReadWriteMultipleByteInterfaces *****************
  2739 ;; Defined at:
  2740 ;;		line 113 in file "C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  writeInterfa    2    0[COMMON] PTR FTN(unsigned char ,u
  2743 ;;		 -> writeMul(1), 
  2744 ;;  readInterfac    2    2[COMMON] PTR FTN(unsigned char ,u
  2745 ;;		 -> readMul(1), 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;		None
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;Total ram usage:        4 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           
  2771                           ;psect for function _setReadWriteMultipleByteInterfaces
  2772  0EBE                     _setReadWriteMultipleByteInterfaces:	
  2773                           
  2774                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 113: void setReadWriteMultipleB
      +                          yteInterfaces(_Bool (*writeInterface)(uint8_t, uint8_t, uint8_t*), _Bool (*readInterface
      +                          )(uint8_t, uint8_t, uint8_t*));C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 1
      +                          14: {;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 115:  commWriteMultipleByt
      +                          es = writeInterface;
  2775                           
  2776                           ;incstack = 0
  2777                           ; Regs used in _setReadWriteMultipleByteInterfaces: [wreg]
  2778  0EBE  0871               	movf	setReadWriteMultipleByteInterfaces@writeInterface+1,w
  2779  0EBF  0142               	movlb	2	; select bank2
  2780  0EC0  00D6               	movwf	(_commWriteMultipleBytes+1)^(0+256)
  2781  0EC1  0870               	movf	setReadWriteMultipleByteInterfaces@writeInterface,w
  2782  0EC2  00D5               	movwf	_commWriteMultipleBytes^(0+256)
  2783                           
  2784                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 116:  commReadMultipleBytes = r
      +                          eadInterface;
  2785  0EC3  0873               	movf	setReadWriteMultipleByteInterfaces@readInterface+1,w
  2786  0EC4  00D4               	movwf	(_commReadMultipleBytes+1)^(0+256)
  2787  0EC5  0872               	movf	setReadWriteMultipleByteInterfaces@readInterface,w
  2788  0EC6  00D3               	movwf	_commReadMultipleBytes^(0+256)
  2789  0EC7  0008               	return
  2790  0EC8                     __end_of_setReadWriteMultipleByteInterfaces:	
  2791                           
  2792                           	psect	text2
  2793  0EC8                     __ptext2:	
  2794 ;; *************** function _setReadWriteByteInterfaces *****************
  2795 ;; Defined at:
  2796 ;;		line 108 in file "C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  write_Interf    2    0[COMMON] PTR FTN(unsigned char ,u
  2799 ;;		 -> write(1), 
  2800 ;;  read_Interfa    2    2[COMMON] PTR FTN(unsigned char ,P
  2801 ;;		 -> read(1), 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;Total ram usage:        4 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _setReadWriteByteInterfaces
  2828  0EC8                     _setReadWriteByteInterfaces:	
  2829                           
  2830                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 108: void setReadWriteByteInter
      +                          faces(_Bool (*write_Interface)(uint8_t, uint8_t), _Bool (*read_Interface)(uint8_t, uint8
      +                          _t*));C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 109: {;C:/Users/tec4.ele/M
      +                          PLABXProjects/00119Repo.X/adxl34x.c: 110:  commWriteByte = write_Interface;
  2831                           
  2832                           ;incstack = 0
  2833                           ; Regs used in _setReadWriteByteInterfaces: [wreg]
  2834  0EC8  0871               	movf	setReadWriteByteInterfaces@write_Interface+1,w
  2835  0EC9  0141               	movlb	1	; select bank1
  2836  0ECA  00EE               	movwf	(_commWriteByte+1)^(0+128)
  2837  0ECB  0870               	movf	setReadWriteByteInterfaces@write_Interface,w
  2838  0ECC  00ED               	movwf	_commWriteByte^(0+128)
  2839                           
  2840                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 111:  commReadByte = read_Inter
      +                          face;
  2841  0ECD  0873               	movf	setReadWriteByteInterfaces@read_Interface+1,w
  2842  0ECE  0142               	movlb	2	; select bank2
  2843  0ECF  00D8               	movwf	(_commReadByte+1)^(0+256)
  2844  0ED0  0872               	movf	setReadWriteByteInterfaces@read_Interface,w
  2845  0ED1  00D7               	movwf	_commReadByte^(0+256)
  2846  0ED2  0008               	return
  2847  0ED3                     __end_of_setReadWriteByteInterfaces:	
  2848                           
  2849                           	psect	text3
  2850  0EDF                     __ptext3:	
  2851 ;; *************** function _initializeDevice *****************
  2852 ;; Defined at:
  2853 ;;		line 382 in file "C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  init_values    45   20[BANK1 ] struct .
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      _Bool 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2867 ;;      Params:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2869 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;      Totals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;Total ram usage:       48 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    9
  2874 ;; This function calls:
  2875 ;;		Absolute function
  2876 ;;		_writeMul
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _initializeDevice
  2884  0EDF                     _initializeDevice:	
  2885                           
  2886                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 382: _Bool initializeDevice(t_a
      +                          dxl34x_reg init_values);C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 383: {;C
      +                          :/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 384:  return commWriteMultipleByt
      +                          es(29, 0x1D, &init_values.thresh_tap);
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in _initializeDevice: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2890  0EDF  301D               	movlw	29
  2891  0EE0  0141               	movlb	1	; select bank1
  2892  0EE1  00E1               	movwf	??_initializeDevice^(0+128)
  2893  0EE2  0861               	movf	??_initializeDevice^(0+128),w
  2894  0EE3  00AD               	movwf	writeMul@n^(0+128)
  2895  0EE4  301D               	movlw	29
  2896  0EE5  00E2               	movwf	(??_initializeDevice+1)^(0+128)
  2897  0EE6  0862               	movf	(??_initializeDevice+1)^(0+128),w
  2898  0EE7  00AE               	movwf	writeMul@address^(0+128)
  2899  0EE8  30B5               	movlw	(low ((initializeDevice@init_values| 0+1)))& (0+255)
  2900  0EE9  00E3               	movwf	(??_initializeDevice+2)^(0+128)
  2901  0EEA  0863               	movf	(??_initializeDevice+2)^(0+128),w
  2902  0EEB  00AF               	movwf	writeMul@value^(0+128)
  2903  0EEC  0142               	movlb	2	; select bank2
  2904  0EED  0856               	movf	(_commWriteMultipleBytes+1)^(0+256),w
  2905  0EEE  008A               	movwf	10
  2906  0EEF  0855               	movf	_commWriteMultipleBytes^(0+256),w
  2907  0EF0  000A               	callw
  2908  0EF1  318E               	pagesel	$
  2909  0EF2  0008               	return
  2910  0EF3                     __end_of_initializeDevice:	
  2911                           
  2912                           	psect	text4
  2913  0071                     __ptext4:	
  2914 ;; *************** function _writeMul *****************
  2915 ;; Defined at:
  2916 ;;		line 21 in file "main.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  n               1   13[BANK1 ] unsigned char 
  2919 ;;  address         1   14[BANK1 ] unsigned char 
  2920 ;;  value           1   15[BANK1 ] PTR unsigned char 
  2921 ;;		 -> initializeDevice@init_values(45), 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  i               2   18[BANK1 ] int 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      _Bool 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2933 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2934 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2935 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;Total ram usage:        7 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    8
  2940 ;; This function calls:
  2941 ;;		_printf
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;;		_initializeDevice
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _writeMul
  2950  0071                     _writeMul:	
  2951                           
  2952                           ;main.c: 21: _Bool writeMul(uint8_t n, uint8_t address, uint8_t *value);main.c: 22: {;ma
      +                          in.c: 23:   for (int i = 0; i < n; i++)
  2953                           
  2954                           ;incstack = 0
  2955                           ; Regs used in _writeMul: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2956  0071  0141               	movlb	1	; select bank1
  2957  0072  01B2               	clrf	writeMul@i^(0+128)
  2958  0073  01B3               	clrf	(writeMul@i+1)^(0+128)
  2959  0074                     l2385:	
  2960  0074  0833               	movf	(writeMul@i+1)^(0+128),w
  2961  0075  3A80               	xorlw	128
  2962  0076  00B0               	movwf	??_writeMul^(0+128)
  2963  0077  3080               	movlw	128
  2964  0078  0230               	subwf	??_writeMul^(0+128),w
  2965  0079  1D03               	skipz
  2966  007A  287D               	goto	u2425
  2967  007B  082D               	movf	writeMul@n^(0+128),w
  2968  007C  0232               	subwf	writeMul@i^(0+128),w
  2969  007D                     u2425:	
  2970  007D  1803               	btfsc	3,0
  2971  007E  28A2               	goto	l2387
  2972                           
  2973                           ;main.c: 24:     printf("Writing value %X in register %X\n", *value++, address + i);
  2974  007F  3000               	movlw	low (STR_1| (0+32768))
  2975  0080  0141               	movlb	1	; select bank1
  2976  0081  00A3               	movwf	printf@fmt^(0+128)
  2977  0082  3090               	movlw	high (STR_1| (0+32768))
  2978  0083  00A4               	movwf	(printf@fmt^(0+128)+1)
  2979  0084  082F               	movf	writeMul@value^(0+128),w
  2980  0085  0086               	movwf	6
  2981  0086  0187               	clrf	7
  2982  0087  0801               	movf	1,w
  2983  0088  00B0               	movwf	??_writeMul^(0+128)
  2984  0089  01B1               	clrf	(??_writeMul^(0+128)+1)
  2985  008A  0830               	movf	??_writeMul^(0+128),w
  2986  008B  00A5               	movwf	(?_printf^(0+128)+2)
  2987  008C  0831               	movf	(??_writeMul+1)^(0+128),w
  2988  008D  00A6               	movwf	((?_printf+1)^(0+128)+2)
  2989  008E  082E               	movf	writeMul@address^(0+128),w
  2990  008F  0732               	addwf	writeMul@i^(0+128),w
  2991  0090  00A7               	movwf	(?_printf^(0+128)+4)
  2992  0091  0833               	movf	(writeMul@i+1)^(0+128),w
  2993  0092  1803               	skipnc
  2994  0093  0A33               	incf	(writeMul@i+1)^(0+128),w
  2995  0094  00A8               	movwf	(?_printf^(0+128)+5)
  2996  0095  318E  26F3  3180   	fcall	_printf
  2997  0098  3001               	movlw	1
  2998  0099  0141               	movlb	1	; select bank1
  2999  009A  00B0               	movwf	??_writeMul^(0+128)
  3000  009B  0830               	movf	??_writeMul^(0+128),w
  3001  009C  07AF               	addwf	writeMul@value^(0+128),f
  3002  009D  3001               	movlw	1
  3003  009E  07B2               	addwf	writeMul@i^(0+128),f
  3004  009F  3000               	movlw	0
  3005  00A0  3DB3               	addwfc	(writeMul@i+1)^(0+128),f
  3006  00A1  2874               	goto	l2385
  3007  00A2                     l2387:	
  3008                           
  3009                           ;main.c: 25:   return 1;
  3010  00A2  3001               	movlw	1
  3011  00A3  0008               	return
  3012  00A4                     __end_of_writeMul:	
  3013                           
  3014                           	psect	text5
  3015  0EB6                     __ptext5:	
  3016 ;; *************** function _getchar *****************
  3017 ;; Defined at:
  3018 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\getchar.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  2   10[COMMON] int 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;Total ram usage:        2 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    2
  3039 ;; This function calls:
  3040 ;;		_fgetc
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _getchar
  3048  0EB6                     _getchar:	
  3049                           
  3050                           ;incstack = 0
  3051                           ; Regs used in _getchar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3052  0EB6  3000               	movlw	0
  3053  0EB7  3180  20A4         	fcall	_fgetc
  3054  0EB9  0873               	movf	?_fgetc+1,w
  3055  0EBA  00FB               	movwf	?_getchar+1
  3056  0EBB  0872               	movf	?_fgetc,w
  3057  0EBC  00FA               	movwf	?_getchar
  3058  0EBD  0008               	return
  3059  0EBE                     __end_of_getchar:	
  3060                           
  3061                           	psect	text6
  3062  00A4                     __ptext6:	
  3063 ;; *************** function _fgetc *****************
  3064 ;; Defined at:
  3065 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_getc.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  fp              1    wreg     PTR struct _IO_FILE
  3068 ;;		 -> NULL(0), 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  fp              1    9[COMMON] PTR struct _IO_FILE
  3071 ;;		 -> NULL(0), 
  3072 ;;  c               2    7[COMMON] int 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  2    2[COMMON] int 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;Total ram usage:        8 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    1
  3089 ;; This function calls:
  3090 ;;		_getch
  3091 ;; This function is called by:
  3092 ;;		_getchar
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _fgetc
  3098  00A4                     _fgetc:	
  3099                           
  3100                           ;incstack = 0
  3101                           ; Regs used in _fgetc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3102                           ;fgetc@fp stored from wreg
  3103  00A4  00F9               	movwf	fgetc@fp
  3104  00A5  0879               	movf	fgetc@fp,w
  3105  00A6  1D03               	btfss	3,2
  3106  00A7  28B8               	goto	l2405
  3107  00A8  0141               	movlb	1	; select bank1
  3108  00A9  086F               	movf	_ungetcnt^(0+128),w
  3109  00AA  1903               	btfsc	3,2
  3110  00AB  28B0               	goto	l2403
  3111  00AC  01F7               	clrf	fgetc@c
  3112  00AD  01F8               	clrf	fgetc@c+1
  3113  00AE  01EF               	clrf	_ungetcnt^(0+128)
  3114  00AF  28D3               	goto	l2409
  3115  00B0                     l2403:	
  3116  00B0  318E  2691  3180   	fcall	_getch
  3117  00B3  0871               	movf	?_getch+1,w
  3118  00B4  00F8               	movwf	fgetc@c+1
  3119  00B5  0870               	movf	?_getch,w
  3120  00B6  00F7               	movwf	fgetc@c
  3121  00B7  28D3               	goto	l2409
  3122  00B8                     l2405:	
  3123  00B8  0879               	movf	fgetc@fp,w
  3124  00B9  0086               	movwf	6
  3125  00BA  0187               	clrf	7
  3126  00BB  0A79               	incf	fgetc@fp,w
  3127  00BC  0084               	movwf	4
  3128  00BD  0185               	clrf	5
  3129  00BE  0800               	movf	0,w
  3130  00BF  0701               	addwf	1,w
  3131  00C0  00F4               	movwf	??_fgetc
  3132  00C1  0874               	movf	??_fgetc,w
  3133  00C2  0086               	movwf	6
  3134  00C3  0187               	clrf	7
  3135  00C4  0801               	movf	1,w
  3136  00C5  00F5               	movwf	??_fgetc+1
  3137  00C6  01F6               	clrf	??_fgetc+2
  3138  00C7  0875               	movf	??_fgetc+1,w
  3139  00C8  00F7               	movwf	fgetc@c
  3140  00C9  0876               	movf	??_fgetc+2,w
  3141  00CA  00F8               	movwf	fgetc@c+1
  3142  00CB  0A79               	incf	fgetc@fp,w
  3143  00CC  0086               	movwf	6
  3144  00CD  0187               	clrf	7
  3145  00CE  3001               	movlw	1
  3146  00CF  0781               	addwf	1,f
  3147  00D0  3141               	addfsr 1,1
  3148  00D1  1803               	skipnc
  3149  00D2  0A81               	incf	1,f
  3150  00D3                     l2409:	
  3151  00D3  0878               	movf	fgetc@c+1,w
  3152  00D4  00F3               	movwf	?_fgetc+1
  3153  00D5  0877               	movf	fgetc@c,w
  3154  00D6  00F2               	movwf	?_fgetc
  3155  00D7  0008               	return
  3156  00D8                     __end_of_fgetc:	
  3157                           
  3158                           	psect	text7
  3159  0E91                     __ptext7:	
  3160 ;; *************** function _getch *****************
  3161 ;; Defined at:
  3162 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\getch.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  2    0[COMMON] int 
  3169 ;; Registers used:
  3170 ;;		wreg
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3180 ;;Total ram usage:        2 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_fgetc
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           
  3190                           ;psect for function _getch
  3191  0E91                     _getch:	
  3192                           
  3193                           ;incstack = 0
  3194                           ; Regs used in _getch: [wreg]
  3195  0E91  30FF               	movlw	255
  3196  0E92  00F0               	movwf	?_getch
  3197  0E93  30FF               	movlw	255
  3198  0E94  00F1               	movwf	?_getch+1
  3199  0E95  0008               	return
  3200  0E96                     __end_of_getch:	
  3201                           
  3202                           	psect	text8
  3203  0027                     __ptext8:	
  3204 ;; *************** function _exitLowPowerMode *****************
  3205 ;; Defined at:
  3206 ;;		line 173 in file "C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  bw_rate_save    1   21[BANK1 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      _Bool 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3223 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;Total ram usage:        3 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    9
  3227 ;; This function calls:
  3228 ;;		Absolute function
  3229 ;;		_write
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           
  3236                           ;psect for function _exitLowPowerMode
  3237  0027                     _exitLowPowerMode:	
  3238                           
  3239                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 175:  uint8_t bw_rate_save = ad
      +                          xl34x_reg.bw_rate;
  3240                           
  3241                           ;incstack = 0
  3242                           ; Regs used in _exitLowPowerMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3243  0027  0142               	movlb	2	; select bank2
  3244  0028  0837               	movf	(_adxl34x_reg^(0+256)+23),w
  3245  0029  0141               	movlb	1	; select bank1
  3246  002A  00B3               	movwf	??_exitLowPowerMode^(0+128)
  3247  002B  0833               	movf	??_exitLowPowerMode^(0+128),w
  3248  002C  00B5               	movwf	exitLowPowerMode@bw_rate_save^(0+128)
  3249                           
  3250                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 176:  bw_rate_save &= ~(1 << 4)
      +                          ;
  3251  002D  30EF               	movlw	239
  3252  002E  00B3               	movwf	??_exitLowPowerMode^(0+128)
  3253  002F  0833               	movf	??_exitLowPowerMode^(0+128),w
  3254  0030  05B5               	andwf	exitLowPowerMode@bw_rate_save^(0+128),f
  3255                           
  3256                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 177:  if (commWriteByte(0x2C, b
      +                          w_rate_save) == 0)
  3257  0031  302C               	movlw	44
  3258  0032  00B3               	movwf	??_exitLowPowerMode^(0+128)
  3259  0033  0833               	movf	??_exitLowPowerMode^(0+128),w
  3260  0034  00AD               	movwf	write@address^(0+128)
  3261  0035  0835               	movf	exitLowPowerMode@bw_rate_save^(0+128),w
  3262  0036  00B4               	movwf	(??_exitLowPowerMode+1)^(0+128)
  3263  0037  0834               	movf	(??_exitLowPowerMode+1)^(0+128),w
  3264  0038  00AE               	movwf	write@value^(0+128)
  3265  0039  086E               	movf	(_commWriteByte+1)^(0+128),w
  3266  003A  008A               	movwf	10
  3267  003B  086D               	movf	_commWriteByte^(0+128),w
  3268  003C  000A               	callw
  3269  003D  3180               	pagesel	$
  3270  003E  3A00               	xorlw	0
  3271  003F  1D03               	skipz
  3272  0040  2843               	goto	l2467
  3273                           
  3274                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 178:   return 0;
  3275  0041  3000               	movlw	0
  3276  0042  0008               	return
  3277  0043                     l2467:	
  3278                           
  3279                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 179:  adxl34x_reg.bw_rate = bw_
      +                          rate_save;
  3280  0043  0141               	movlb	1	; select bank1
  3281  0044  0835               	movf	exitLowPowerMode@bw_rate_save^(0+128),w
  3282  0045  00B3               	movwf	??_exitLowPowerMode^(0+128)
  3283  0046  0833               	movf	??_exitLowPowerMode^(0+128),w
  3284  0047  0142               	movlb	2	; select bank2
  3285  0048  00B7               	movwf	(_adxl34x_reg^(0+256)+23)
  3286                           
  3287                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 180:  return 1;
  3288  0049  3001               	movlw	1
  3289  004A  0008               	return
  3290  004B                     __end_of_exitLowPowerMode:	
  3291                           
  3292                           	psect	text9
  3293  0FDC                     __ptext9:	
  3294 ;; *************** function _exitAutoSleepMode *****************
  3295 ;; Defined at:
  3296 ;;		line 136 in file "C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  power_ctl_sa    1   21[BANK1 ] unsigned char 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      _Bool 
  3303 ;; Registers used:
  3304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;Total ram usage:        3 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    9
  3317 ;; This function calls:
  3318 ;;		Absolute function
  3319 ;;		_write
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _exitAutoSleepMode
  3327  0FDC                     _exitAutoSleepMode:	
  3328                           
  3329                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 138:  uint8_t power_ctl_save = 
      +                          adxl34x_reg.power_ctl;
  3330                           
  3331                           ;incstack = 0
  3332                           ; Regs used in _exitAutoSleepMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3333  0FDC  0142               	movlb	2	; select bank2
  3334  0FDD  0838               	movf	(_adxl34x_reg^(0+256)+24),w
  3335  0FDE  0141               	movlb	1	; select bank1
  3336  0FDF  00B3               	movwf	??_exitAutoSleepMode^(0+128)
  3337  0FE0  0833               	movf	??_exitAutoSleepMode^(0+128),w
  3338  0FE1  00B5               	movwf	exitAutoSleepMode@power_ctl_save^(0+128)
  3339                           
  3340                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 139:  power_ctl_save &= ~(1 << 
      +                          4) & ~(1 << 5);
  3341  0FE2  30CF               	movlw	207
  3342  0FE3  00B3               	movwf	??_exitAutoSleepMode^(0+128)
  3343  0FE4  0833               	movf	??_exitAutoSleepMode^(0+128),w
  3344  0FE5  05B5               	andwf	exitAutoSleepMode@power_ctl_save^(0+128),f
  3345                           
  3346                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 140:  if (commWriteByte(0x2D, p
      +                          ower_ctl_save) == 0)
  3347  0FE6  302D               	movlw	45
  3348  0FE7  00B3               	movwf	??_exitAutoSleepMode^(0+128)
  3349  0FE8  0833               	movf	??_exitAutoSleepMode^(0+128),w
  3350  0FE9  00AD               	movwf	write@address^(0+128)
  3351  0FEA  0835               	movf	exitAutoSleepMode@power_ctl_save^(0+128),w
  3352  0FEB  00B4               	movwf	(??_exitAutoSleepMode+1)^(0+128)
  3353  0FEC  0834               	movf	(??_exitAutoSleepMode+1)^(0+128),w
  3354  0FED  00AE               	movwf	write@value^(0+128)
  3355  0FEE  086E               	movf	(_commWriteByte+1)^(0+128),w
  3356  0FEF  008A               	movwf	10
  3357  0FF0  086D               	movf	_commWriteByte^(0+128),w
  3358  0FF1  000A               	callw
  3359  0FF2  318F               	pagesel	$
  3360  0FF3  3A00               	xorlw	0
  3361  0FF4  1D03               	skipz
  3362  0FF5  2FF8               	goto	l2439
  3363                           
  3364                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 141:  return 0;
  3365  0FF6  3000               	movlw	0
  3366  0FF7  0008               	return
  3367  0FF8                     l2439:	
  3368                           
  3369                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 142:  adxl34x_reg.power_ctl = p
      +                          ower_ctl_save;
  3370  0FF8  0141               	movlb	1	; select bank1
  3371  0FF9  0835               	movf	exitAutoSleepMode@power_ctl_save^(0+128),w
  3372  0FFA  00B3               	movwf	??_exitAutoSleepMode^(0+128)
  3373  0FFB  0833               	movf	??_exitAutoSleepMode^(0+128),w
  3374  0FFC  0142               	movlb	2	; select bank2
  3375  0FFD  00B8               	movwf	(_adxl34x_reg^(0+256)+24)
  3376                           
  3377                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 143:  return 1;
  3378  0FFE  3001               	movlw	1
  3379  0FFF  0008               	return
  3380  1000                     __end_of_exitAutoSleepMode:	
  3381                           
  3382                           	psect	text10
  3383  0006                     __ptext10:	
  3384 ;; *************** function _enterLowPowerMode *****************
  3385 ;; Defined at:
  3386 ;;		line 164 in file "C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  bw_rate_save    1   21[BANK1 ] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      _Bool 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3402 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3403 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3404 ;;Total ram usage:        3 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    9
  3407 ;; This function calls:
  3408 ;;		Absolute function
  3409 ;;		_write
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function _enterLowPowerMode
  3417  0006                     _enterLowPowerMode:	
  3418                           
  3419                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 166:  uint8_t bw_rate_save = ad
      +                          xl34x_reg.bw_rate;
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _enterLowPowerMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3423  0006  0142               	movlb	2	; select bank2
  3424  0007  0837               	movf	(_adxl34x_reg^(0+256)+23),w
  3425  0008  0141               	movlb	1	; select bank1
  3426  0009  00B3               	movwf	??_enterLowPowerMode^(0+128)
  3427  000A  0833               	movf	??_enterLowPowerMode^(0+128),w
  3428  000B  00B5               	movwf	enterLowPowerMode@bw_rate_save^(0+128)
  3429                           
  3430                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 167:  bw_rate_save |= (1 << 4);
  3431  000C  1635               	bsf	enterLowPowerMode@bw_rate_save^(0+128),4
  3432                           
  3433                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 168:  if (commWriteByte(0x2C, b
      +                          w_rate_save) == 0)
  3434  000D  302C               	movlw	44
  3435  000E  00B3               	movwf	??_enterLowPowerMode^(0+128)
  3436  000F  0833               	movf	??_enterLowPowerMode^(0+128),w
  3437  0010  00AD               	movwf	write@address^(0+128)
  3438  0011  0835               	movf	enterLowPowerMode@bw_rate_save^(0+128),w
  3439  0012  00B4               	movwf	(??_enterLowPowerMode+1)^(0+128)
  3440  0013  0834               	movf	(??_enterLowPowerMode+1)^(0+128),w
  3441  0014  00AE               	movwf	write@value^(0+128)
  3442  0015  086E               	movf	(_commWriteByte+1)^(0+128),w
  3443  0016  008A               	movwf	10
  3444  0017  086D               	movf	_commWriteByte^(0+128),w
  3445  0018  000A               	callw
  3446  0019  3180               	pagesel	$
  3447  001A  3A00               	xorlw	0
  3448  001B  1D03               	skipz
  3449  001C  281F               	goto	l2453
  3450                           
  3451                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 169:   return 0;
  3452  001D  3000               	movlw	0
  3453  001E  0008               	return
  3454  001F                     l2453:	
  3455                           
  3456                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 170:  adxl34x_reg.bw_rate = bw_
      +                          rate_save;
  3457  001F  0141               	movlb	1	; select bank1
  3458  0020  0835               	movf	enterLowPowerMode@bw_rate_save^(0+128),w
  3459  0021  00B3               	movwf	??_enterLowPowerMode^(0+128)
  3460  0022  0833               	movf	??_enterLowPowerMode^(0+128),w
  3461  0023  0142               	movlb	2	; select bank2
  3462  0024  00B7               	movwf	(_adxl34x_reg^(0+256)+23)
  3463                           
  3464                           ;C:/Users/tec4.ele/MPLABXProjects/00119Repo.X/adxl34x.c: 171:  return 1;
  3465  0025  3001               	movlw	1
  3466  0026  0008               	return
  3467  0027                     __end_of_enterLowPowerMode:	
  3468                           
  3469                           	psect	text11
  3470  0F4E                     __ptext11:	
  3471 ;; *************** function _write *****************
  3472 ;; Defined at:
  3473 ;;		line 9 in file "main.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  address         1   13[BANK1 ] unsigned char 
  3476 ;;  value           1   14[BANK1 ] unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      _Bool 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3488 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;Total ram usage:        6 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    8
  3495 ;; This function calls:
  3496 ;;		_printf
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;;		_exitAutoSleepMode
  3500 ;;		_enterLowPowerMode
  3501 ;;		_exitLowPowerMode
  3502 ;;		_enterAutoSleepMode
  3503 ;;		_enterStandByMode
  3504 ;;		_exitStandByMode
  3505 ;;		_setDataRate
  3506 ;;		_interruptEnableDisable
  3507 ;;		_interruptMap
  3508 ;;		_interruptInvert
  3509 ;;		_setFifoMode
  3510 ;;		_setOffset
  3511 ;;		_setTapConfig
  3512 ;;		_setActInactConfig
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           
  3517                           ;psect for function _write
  3518  0F4E                     _write:	
  3519                           
  3520                           ;main.c: 9: _Bool write(uint8_t address, uint8_t value);main.c: 10: {;main.c: 11:   prin
      +                          tf("Writing value %X in register %X\n", value, address);
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in _write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3524  0F4E  3000               	movlw	low (STR_1| (0+32768))
  3525  0F4F  0141               	movlb	1	; select bank1
  3526  0F50  00A3               	movwf	printf@fmt^(0+128)
  3527  0F51  3090               	movlw	high (STR_1| (0+32768))
  3528  0F52  00A4               	movwf	(printf@fmt^(0+128)+1)
  3529  0F53  082E               	movf	write@value^(0+128),w
  3530  0F54  00AF               	movwf	??_write^(0+128)
  3531  0F55  01B0               	clrf	(??_write^(0+128)+1)
  3532  0F56  082F               	movf	??_write^(0+128),w
  3533  0F57  00A5               	movwf	(?_printf^(0+128)+2)
  3534  0F58  0830               	movf	(??_write+1)^(0+128),w
  3535  0F59  00A6               	movwf	((?_printf+1)^(0+128)+2)
  3536  0F5A  082D               	movf	write@address^(0+128),w
  3537  0F5B  00B1               	movwf	(??_write+2)^(0+128)
  3538  0F5C  01B2               	clrf	((??_write+2)^(0+128)+1)
  3539  0F5D  0831               	movf	(??_write+2)^(0+128),w
  3540  0F5E  00A7               	movwf	(?_printf^(0+128)+4)
  3541  0F5F  0832               	movf	(??_write+3)^(0+128),w
  3542  0F60  00A8               	movwf	((?_printf+1)^(0+128)+4)
  3543  0F61  318E  26F3         	fcall	_printf
  3544                           
  3545                           ;main.c: 12:   return 1;
  3546  0F63  3001               	movlw	1
  3547  0F64  0008               	return
  3548  0F65                     __end_of_write:	
  3549                           
  3550                           	psect	text12
  3551  0EF3                     __ptext12:	
  3552 ;; *************** function _printf *****************
  3553 ;; Defined at:
  3554 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  3557 ;;		 -> STR_6(25), STR_5(26), STR_4(24), STR_3(23), 
  3558 ;;		 -> STR_2(33), STR_1(33), 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  ret             2    0        int 
  3561 ;;  ap              1   12[BANK1 ] PTR void [1]
  3562 ;;		 -> ?_printf(2), 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  2    3[BANK1 ] int 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3572 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3573 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3574 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3575 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;Total ram usage:       10 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    7
  3579 ;; This function calls:
  3580 ;;		_vfprintf
  3581 ;; This function is called by:
  3582 ;;		_write
  3583 ;;		_writeMul
  3584 ;;		_main
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function _printf
  3590  0EF3                     _printf:	
  3591                           
  3592                           ;incstack = 0
  3593                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3594  0EF3  30A5               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3595  0EF4  0141               	movlb	1	; select bank1
  3596  0EF5  00A9               	movwf	??_printf^(0+128)
  3597  0EF6  0829               	movf	??_printf^(0+128),w
  3598  0EF7  00AC               	movwf	printf@ap^(0+128)
  3599  0EF8  0824               	movf	(printf@fmt+1)^(0+128),w
  3600  0EF9  0140               	movlb	0	; select bank0
  3601  0EFA  00EC               	movwf	vfprintf@fmt+1
  3602  0EFB  0141               	movlb	1	; select bank1
  3603  0EFC  0823               	movf	printf@fmt^(0+128),w
  3604  0EFD  0140               	movlb	0	; select bank0
  3605  0EFE  00EB               	movwf	vfprintf@fmt
  3606  0EFF  30AC               	movlw	(low (printf@ap| 0))& (0+255)
  3607  0F00  0141               	movlb	1	; select bank1
  3608  0F01  00A9               	movwf	??_printf^(0+128)
  3609  0F02  0829               	movf	??_printf^(0+128),w
  3610  0F03  0140               	movlb	0	; select bank0
  3611  0F04  00ED               	movwf	vfprintf@ap
  3612  0F05  3000               	movlw	0
  3613  0F06  3181  210D         	fcall	_vfprintf
  3614  0F08  0008               	return
  3615  0F09                     __end_of_printf:	
  3616                           
  3617                           	psect	text13
  3618  010D                     __ptext13:	
  3619 ;; *************** function _vfprintf *****************
  3620 ;; Defined at:
  3621 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  fp              1    wreg     PTR struct _IO_FILE
  3624 ;;		 -> NULL(0), 
  3625 ;;  fmt             2   75[BANK0 ] PTR const unsigned char 
  3626 ;;		 -> STR_6(25), STR_5(26), STR_4(24), STR_3(23), 
  3627 ;;		 -> STR_2(33), STR_1(33), 
  3628 ;;  ap              1   77[BANK0 ] PTR PTR void 
  3629 ;;		 -> printf@ap(1), 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  fp              1    0[BANK1 ] PTR struct _IO_FILE
  3632 ;;		 -> NULL(0), 
  3633 ;;  cfmt            2    1[BANK1 ] PTR unsigned char 
  3634 ;;		 -> STR_6(25), STR_5(26), STR_4(24), STR_3(23), 
  3635 ;;		 -> STR_2(33), STR_1(33), 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  2   75[BANK0 ] int 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3645 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3648 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3649 ;;Total ram usage:        8 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    6
  3652 ;; This function calls:
  3653 ;;		_vfpfcnvrt
  3654 ;; This function is called by:
  3655 ;;		_printf
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _vfprintf
  3661  010D                     _vfprintf:	
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3665                           ;vfprintf@fp stored from wreg
  3666  010D  0141               	movlb	1	; select bank1
  3667  010E  00A0               	movwf	vfprintf@fp^(0+128)
  3668                           
  3669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3670  010F  0140               	movlb	0	; select bank0
  3671  0110  086C               	movf	vfprintf@fmt+1,w
  3672  0111  0141               	movlb	1	; select bank1
  3673  0112  00A2               	movwf	(vfprintf@cfmt+1)^(0+128)
  3674  0113  0140               	movlb	0	; select bank0
  3675  0114  086B               	movf	vfprintf@fmt,w
  3676  0115  0141               	movlb	1	; select bank1
  3677  0116  00A1               	movwf	vfprintf@cfmt^(0+128)
  3678                           
  3679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3680  0117  0142               	movlb	2	; select bank2
  3681  0118  01CD               	clrf	_nout^(0+256)
  3682  0119  01CE               	clrf	(_nout+1)^(0+256)
  3683  011A                     l2355:	
  3684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3685                           
  3686                           
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3688  011A  0141               	movlb	1	; select bank1
  3689  011B  0821               	movf	vfprintf@cfmt^(0+128),w
  3690  011C  0084               	movwf	4
  3691  011D  0822               	movf	(vfprintf@cfmt+1)^(0+128),w
  3692  011E  0085               	movwf	5
  3693  011F  0012               	moviw fsr0++
  3694  0120  1903               	btfsc	3,2
  3695  0121  2939               	goto	l2357
  3696                           
  3697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3698  0122  30A1               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3699  0123  0140               	movlb	0	; select bank0
  3700  0124  00EE               	movwf	??_vfprintf
  3701  0125  086E               	movf	??_vfprintf,w
  3702  0126  00D2               	movwf	vfpfcnvrt@fmt
  3703  0127  086D               	movf	vfprintf@ap,w
  3704  0128  00EF               	movwf	??_vfprintf+1
  3705  0129  086F               	movf	??_vfprintf+1,w
  3706  012A  00D3               	movwf	vfpfcnvrt@ap
  3707  012B  0141               	movlb	1	; select bank1
  3708  012C  0820               	movf	vfprintf@fp^(0+128),w
  3709  012D  3184  2405  3181   	fcall	_vfpfcnvrt
  3710  0130  0140               	movlb	0	; select bank0
  3711  0131  0852               	movf	?_vfpfcnvrt,w
  3712  0132  0142               	movlb	2	; select bank2
  3713  0133  07CD               	addwf	_nout^(0+256),f
  3714  0134  0140               	movlb	0	; select bank0
  3715  0135  0853               	movf	?_vfpfcnvrt+1,w
  3716  0136  0142               	movlb	2	; select bank2
  3717  0137  3DCE               	addwfc	(_nout+1)^(0+256),f
  3718  0138  291A               	goto	l2355
  3719  0139                     l2357:	
  3720                           
  3721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3722  0139  0142               	movlb	2	; select bank2
  3723  013A  084E               	movf	(_nout+1)^(0+256),w
  3724  013B  0140               	movlb	0	; select bank0
  3725  013C  00EC               	movwf	?_vfprintf+1
  3726  013D  0142               	movlb	2	; select bank2
  3727  013E  084D               	movf	_nout^(0+256),w
  3728  013F  0140               	movlb	0	; select bank0
  3729  0140  00EB               	movwf	?_vfprintf
  3730  0141  0008               	return
  3731  0142                     __end_of_vfprintf:	
  3732                           
  3733                           	psect	text14
  3734  0405                     __ptext14:	
  3735 ;; *************** function _vfpfcnvrt *****************
  3736 ;; Defined at:
  3737 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  fp              1    wreg     PTR struct _IO_FILE
  3740 ;;		 -> NULL(0), 
  3741 ;;  fmt             1   50[BANK0 ] PTR PTR unsigned char 
  3742 ;;		 -> vfprintf@cfmt(2), 
  3743 ;;  ap              1   51[BANK0 ] PTR PTR void 
  3744 ;;		 -> printf@ap(1), 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  fp              1   74[BANK0 ] PTR struct _IO_FILE
  3747 ;;		 -> NULL(0), 
  3748 ;;  llu             8   65[BANK0 ] unsigned long long 
  3749 ;;  ll              8   57[BANK0 ] long long 
  3750 ;;  f               4    0        long long 
  3751 ;;  ct              3    0        unsigned char [3]
  3752 ;;  vp              2    0        PTR void 
  3753 ;;  i               2    0        int 
  3754 ;;  done            2    0        int 
  3755 ;;  cp              2    0        PTR unsigned char 
  3756 ;;  c               1   73[BANK0 ] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  2   50[BANK0 ] int 
  3759 ;; Registers used:
  3760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3767 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3768 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3770 ;;Total ram usage:       25 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    5
  3773 ;; This function calls:
  3774 ;;		_dtoa
  3775 ;;		_fputc
  3776 ;;		_xtoa
  3777 ;; This function is called by:
  3778 ;;		_vfprintf
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           
  3783                           ;psect for function _vfpfcnvrt
  3784  0405                     _vfpfcnvrt:	
  3785                           
  3786                           ;incstack = 0
  3787                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3788                           ;vfpfcnvrt@fp stored from wreg
  3789  0405  0140               	movlb	0	; select bank0
  3790  0406  00EA               	movwf	vfpfcnvrt@fp
  3791                           
  3792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3793  0407  0852               	movf	vfpfcnvrt@fmt,w
  3794  0408  0086               	movwf	6
  3795  0409  0187               	clrf	7
  3796  040A  3F40               	moviw [0]fsr1
  3797  040B  00D4               	movwf	??_vfpfcnvrt
  3798  040C  3F41               	moviw [1]fsr1
  3799  040D  00D5               	movwf	??_vfpfcnvrt+1
  3800  040E  0854               	movf	??_vfpfcnvrt,w
  3801  040F  0084               	movwf	4
  3802  0410  0855               	movf	??_vfpfcnvrt+1,w
  3803  0411  0085               	movwf	5
  3804  0412  0012               	moviw fsr0++
  3805  0413  3A25               	xorlw	37
  3806  0414  1D03               	btfss	3,2
  3807  0415  2D18               	goto	l2341
  3808                           
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3810  0416  0852               	movf	vfpfcnvrt@fmt,w
  3811  0417  0086               	movwf	6
  3812  0418  0187               	clrf	7
  3813  0419  3001               	movlw	1
  3814  041A  0781               	addwf	1,f
  3815  041B  3141               	addfsr 1,1
  3816  041C  1803               	skipnc
  3817  041D  0A81               	incf	1,f
  3818                           
  3819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3820  041E  0142               	movlb	2	; select bank2
  3821  041F  01CF               	clrf	_width^(0+256)
  3822  0420  01D0               	clrf	(_width+1)^(0+256)
  3823  0421  0141               	movlb	1	; select bank1
  3824  0422  01EB               	clrf	_flags^(0+128)
  3825  0423  01EC               	clrf	(_flags+1)^(0+128)
  3826                           
  3827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3828  0424  30FF               	movlw	255
  3829  0425  0142               	movlb	2	; select bank2
  3830  0426  00D1               	movwf	_prec^(0+256)
  3831  0427  30FF               	movlw	255
  3832  0428  00D2               	movwf	(_prec^(0+256)+1)
  3833                           
  3834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3835  0429  0140               	movlb	0	; select bank0
  3836  042A  0852               	movf	vfpfcnvrt@fmt,w
  3837  042B  0086               	movwf	6
  3838  042C  0187               	clrf	7
  3839  042D  3F40               	moviw [0]fsr1
  3840  042E  00D4               	movwf	??_vfpfcnvrt
  3841  042F  3F41               	moviw [1]fsr1
  3842  0430  00D5               	movwf	??_vfpfcnvrt+1
  3843  0431  0854               	movf	??_vfpfcnvrt,w
  3844  0432  0084               	movwf	4
  3845  0433  0855               	movf	??_vfpfcnvrt+1,w
  3846  0434  0085               	movwf	5
  3847  0435  0012               	moviw fsr0++
  3848  0436  3A64               	xorlw	100
  3849  0437  1903               	btfsc	3,2
  3850  0438  2C48               	goto	l2303
  3851  0439  0852               	movf	vfpfcnvrt@fmt,w
  3852  043A  0086               	movwf	6
  3853  043B  0187               	clrf	7
  3854  043C  3F40               	moviw [0]fsr1
  3855  043D  00D4               	movwf	??_vfpfcnvrt
  3856  043E  3F41               	moviw [1]fsr1
  3857  043F  00D5               	movwf	??_vfpfcnvrt+1
  3858  0440  0854               	movf	??_vfpfcnvrt,w
  3859  0441  0084               	movwf	4
  3860  0442  0855               	movf	??_vfpfcnvrt+1,w
  3861  0443  0085               	movwf	5
  3862  0444  0012               	moviw fsr0++
  3863  0445  3A69               	xorlw	105
  3864  0446  1D03               	btfss	3,2
  3865  0447  2C82               	goto	l2311
  3866  0448                     l2303:	
  3867                           
  3868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3869  0448  0852               	movf	vfpfcnvrt@fmt,w
  3870  0449  0086               	movwf	6
  3871  044A  0187               	clrf	7
  3872  044B  3001               	movlw	1
  3873  044C  0781               	addwf	1,f
  3874  044D  3141               	addfsr 1,1
  3875  044E  1803               	skipnc
  3876  044F  0A81               	incf	1,f
  3877                           
  3878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3879  0450  0853               	movf	vfpfcnvrt@ap,w
  3880  0451  0086               	movwf	6
  3881  0452  0187               	clrf	7
  3882  0453  0801               	movf	1,w
  3883  0454  0084               	movwf	4
  3884  0455  0185               	clrf	5
  3885  0456  3002               	movlw	2
  3886  0457  0781               	addwf	1,f
  3887  0458  3F00               	moviw [0]fsr0
  3888  0459  00D4               	movwf	??_vfpfcnvrt
  3889  045A  3F01               	moviw [1]fsr0
  3890  045B  00D5               	movwf	??_vfpfcnvrt+1
  3891  045C  0854               	movf	??_vfpfcnvrt,w
  3892  045D  00D9               	movwf	vfpfcnvrt@ll
  3893  045E  0855               	movf	??_vfpfcnvrt+1,w
  3894  045F  00DA               	movwf	vfpfcnvrt@ll+1
  3895  0460  0D89               	rlf	9,f
  3896  0461  3B89               	subwfb	9,f
  3897  0462  0989               	comf	9,f
  3898  0463  00DB               	movwf	vfpfcnvrt@ll+2
  3899  0464  00DC               	movwf	vfpfcnvrt@ll+3
  3900  0465  00DD               	movwf	vfpfcnvrt@ll+4
  3901  0466  00DE               	movwf	vfpfcnvrt@ll+5
  3902  0467  00DF               	movwf	vfpfcnvrt@ll+6
  3903  0468  00E0               	movwf	vfpfcnvrt@ll+7
  3904                           
  3905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3906  0469  0859               	movf	vfpfcnvrt@ll,w
  3907  046A  00B0               	movwf	dtoa@d
  3908  046B  085A               	movf	vfpfcnvrt@ll+1,w
  3909  046C  00B1               	movwf	dtoa@d+1
  3910  046D  085B               	movf	vfpfcnvrt@ll+2,w
  3911  046E  00B2               	movwf	dtoa@d+2
  3912  046F  085C               	movf	vfpfcnvrt@ll+3,w
  3913  0470  00B3               	movwf	dtoa@d+3
  3914  0471  085D               	movf	vfpfcnvrt@ll+4,w
  3915  0472  00B4               	movwf	dtoa@d+4
  3916  0473  085E               	movf	vfpfcnvrt@ll+5,w
  3917  0474  00B5               	movwf	dtoa@d+5
  3918  0475  085F               	movf	vfpfcnvrt@ll+6,w
  3919  0476  00B6               	movwf	dtoa@d+6
  3920  0477  0860               	movf	vfpfcnvrt@ll+7,w
  3921  0478  00B7               	movwf	dtoa@d+7
  3922  0479  086A               	movf	vfpfcnvrt@fp,w
  3923  047A  3185  253B         	fcall	_dtoa
  3924  047C  0140               	movlb	0	; select bank0
  3925  047D  0831               	movf	?_dtoa+1,w
  3926  047E  00D3               	movwf	?_vfpfcnvrt+1
  3927  047F  0830               	movf	?_dtoa,w
  3928  0480  00D2               	movwf	?_vfpfcnvrt
  3929  0481  0008               	return
  3930  0482                     l2311:	
  3931                           
  3932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3933  0482  0852               	movf	vfpfcnvrt@fmt,w
  3934  0483  0086               	movwf	6
  3935  0484  0187               	clrf	7
  3936  0485  3F40               	moviw [0]fsr1
  3937  0486  00D4               	movwf	??_vfpfcnvrt
  3938  0487  3F41               	moviw [1]fsr1
  3939  0488  00D5               	movwf	??_vfpfcnvrt+1
  3940  0489  0854               	movf	??_vfpfcnvrt,w
  3941  048A  0084               	movwf	4
  3942  048B  0855               	movf	??_vfpfcnvrt+1,w
  3943  048C  0085               	movwf	5
  3944  048D  0012               	moviw fsr0++
  3945  048E  3A78               	xorlw	120
  3946  048F  1903               	btfsc	3,2
  3947  0490  2CA0               	goto	l2315
  3948  0491  0852               	movf	vfpfcnvrt@fmt,w
  3949  0492  0086               	movwf	6
  3950  0493  0187               	clrf	7
  3951  0494  3F40               	moviw [0]fsr1
  3952  0495  00D4               	movwf	??_vfpfcnvrt
  3953  0496  3F41               	moviw [1]fsr1
  3954  0497  00D5               	movwf	??_vfpfcnvrt+1
  3955  0498  0854               	movf	??_vfpfcnvrt,w
  3956  0499  0084               	movwf	4
  3957  049A  0855               	movf	??_vfpfcnvrt+1,w
  3958  049B  0085               	movwf	5
  3959  049C  0012               	moviw fsr0++
  3960  049D  3A58               	xorlw	88
  3961  049E  1D03               	btfss	3,2
  3962  049F  2CE6               	goto	l2325
  3963  04A0                     l2315:	
  3964                           
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  3966  04A0  0852               	movf	vfpfcnvrt@fmt,w
  3967  04A1  0086               	movwf	6
  3968  04A2  0187               	clrf	7
  3969  04A3  3F40               	moviw [0]fsr1
  3970  04A4  00D4               	movwf	??_vfpfcnvrt
  3971  04A5  3F41               	moviw [1]fsr1
  3972  04A6  00D5               	movwf	??_vfpfcnvrt+1
  3973  04A7  0854               	movf	??_vfpfcnvrt,w
  3974  04A8  0084               	movwf	4
  3975  04A9  0855               	movf	??_vfpfcnvrt+1,w
  3976  04AA  0085               	movwf	5
  3977  04AB  0800               	movf	0,w	;code access
  3978  04AC  00D6               	movwf	??_vfpfcnvrt+2
  3979  04AD  0856               	movf	??_vfpfcnvrt+2,w
  3980  04AE  00E9               	movwf	vfpfcnvrt@c
  3981                           
  3982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  3983  04AF  0852               	movf	vfpfcnvrt@fmt,w
  3984  04B0  0086               	movwf	6
  3985  04B1  0187               	clrf	7
  3986  04B2  3001               	movlw	1
  3987  04B3  0781               	addwf	1,f
  3988  04B4  3141               	addfsr 1,1
  3989  04B5  1803               	skipnc
  3990  04B6  0A81               	incf	1,f
  3991                           
  3992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  3993  04B7  0853               	movf	vfpfcnvrt@ap,w
  3994  04B8  0086               	movwf	6
  3995  04B9  0187               	clrf	7
  3996  04BA  0801               	movf	1,w
  3997  04BB  0084               	movwf	4
  3998  04BC  0185               	clrf	5
  3999  04BD  3002               	movlw	2
  4000  04BE  0781               	addwf	1,f
  4001  04BF  3F00               	moviw [0]fsr0
  4002  04C0  00E1               	movwf	vfpfcnvrt@llu
  4003  04C1  3F01               	moviw [1]fsr0
  4004  04C2  00E2               	movwf	vfpfcnvrt@llu+1
  4005  04C3  01E3               	clrf	vfpfcnvrt@llu+2
  4006  04C4  01E4               	clrf	vfpfcnvrt@llu+3
  4007  04C5  01E5               	clrf	vfpfcnvrt@llu+4
  4008  04C6  01E6               	clrf	vfpfcnvrt@llu+5
  4009  04C7  01E7               	clrf	vfpfcnvrt@llu+6
  4010  04C8  01E8               	clrf	vfpfcnvrt@llu+7
  4011                           
  4012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  4013  04C9  0861               	movf	vfpfcnvrt@llu,w
  4014  04CA  00AC               	movwf	xtoa@d
  4015  04CB  0862               	movf	vfpfcnvrt@llu+1,w
  4016  04CC  00AD               	movwf	xtoa@d+1
  4017  04CD  0863               	movf	vfpfcnvrt@llu+2,w
  4018  04CE  00AE               	movwf	xtoa@d+2
  4019  04CF  0864               	movf	vfpfcnvrt@llu+3,w
  4020  04D0  00AF               	movwf	xtoa@d+3
  4021  04D1  0865               	movf	vfpfcnvrt@llu+4,w
  4022  04D2  00B0               	movwf	xtoa@d+4
  4023  04D3  0866               	movf	vfpfcnvrt@llu+5,w
  4024  04D4  00B1               	movwf	xtoa@d+5
  4025  04D5  0867               	movf	vfpfcnvrt@llu+6,w
  4026  04D6  00B2               	movwf	xtoa@d+6
  4027  04D7  0868               	movf	vfpfcnvrt@llu+7,w
  4028  04D8  00B3               	movwf	xtoa@d+7
  4029  04D9  0869               	movf	vfpfcnvrt@c,w
  4030  04DA  00D4               	movwf	??_vfpfcnvrt
  4031  04DB  0854               	movf	??_vfpfcnvrt,w
  4032  04DC  00B4               	movwf	xtoa@x
  4033  04DD  086A               	movf	vfpfcnvrt@fp,w
  4034  04DE  3186  268E         	fcall	_xtoa
  4035  04E0  0140               	movlb	0	; select bank0
  4036  04E1  082D               	movf	?_xtoa+1,w
  4037  04E2  00D3               	movwf	?_vfpfcnvrt+1
  4038  04E3  082C               	movf	?_xtoa,w
  4039  04E4  00D2               	movwf	?_vfpfcnvrt
  4040  04E5  0008               	return
  4041  04E6                     l2325:	
  4042                           
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4044  04E6  0852               	movf	vfpfcnvrt@fmt,w
  4045  04E7  0086               	movwf	6
  4046  04E8  0187               	clrf	7
  4047  04E9  3F40               	moviw [0]fsr1
  4048  04EA  00D4               	movwf	??_vfpfcnvrt
  4049  04EB  3F41               	moviw [1]fsr1
  4050  04EC  00D5               	movwf	??_vfpfcnvrt+1
  4051  04ED  0854               	movf	??_vfpfcnvrt,w
  4052  04EE  0084               	movwf	4
  4053  04EF  0855               	movf	??_vfpfcnvrt+1,w
  4054  04F0  0085               	movwf	5
  4055  04F1  0012               	moviw fsr0++
  4056  04F2  3A25               	xorlw	37
  4057  04F3  1D03               	btfss	3,2
  4058  04F4  2D0D               	goto	l2335
  4059                           
  4060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4061  04F5  0852               	movf	vfpfcnvrt@fmt,w
  4062  04F6  0086               	movwf	6
  4063  04F7  0187               	clrf	7
  4064  04F8  3001               	movlw	1
  4065  04F9  0781               	addwf	1,f
  4066  04FA  3141               	addfsr 1,1
  4067  04FB  1803               	skipnc
  4068  04FC  0A81               	incf	1,f
  4069                           
  4070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4071  04FD  3025               	movlw	37
  4072  04FE  00F1               	movwf	fputc@c
  4073  04FF  3000               	movlw	0
  4074  0500  00F2               	movwf	fputc@c+1
  4075  0501  086A               	movf	vfpfcnvrt@fp,w
  4076  0502  00D4               	movwf	??_vfpfcnvrt
  4077  0503  0854               	movf	??_vfpfcnvrt,w
  4078  0504  00F3               	movwf	fputc@fp
  4079  0505  3180  20D8         	fcall	_fputc
  4080  0507                     l2331:	
  4081                           
  4082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4083  0507  3001               	movlw	1
  4084  0508  0140               	movlb	0	; select bank0
  4085  0509  00D2               	movwf	?_vfpfcnvrt
  4086  050A  3000               	movlw	0
  4087  050B  00D3               	movwf	?_vfpfcnvrt+1
  4088  050C  0008               	return
  4089  050D                     l2335:	
  4090                           
  4091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4092  050D  0852               	movf	vfpfcnvrt@fmt,w
  4093  050E  0086               	movwf	6
  4094  050F  0187               	clrf	7
  4095  0510  3001               	movlw	1
  4096  0511  0781               	addwf	1,f
  4097  0512  3141               	addfsr 1,1
  4098  0513  1803               	skipnc
  4099  0514  0A81               	incf	1,f
  4100                           
  4101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4102  0515  01D2               	clrf	?_vfpfcnvrt
  4103  0516  01D3               	clrf	?_vfpfcnvrt+1
  4104  0517  0008               	return
  4105  0518                     l2341:	
  4106                           
  4107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4108  0518  0852               	movf	vfpfcnvrt@fmt,w
  4109  0519  0086               	movwf	6
  4110  051A  0187               	clrf	7
  4111  051B  3F40               	moviw [0]fsr1
  4112  051C  00D4               	movwf	??_vfpfcnvrt
  4113  051D  3F41               	moviw [1]fsr1
  4114  051E  00D5               	movwf	??_vfpfcnvrt+1
  4115  051F  0854               	movf	??_vfpfcnvrt,w
  4116  0520  0084               	movwf	4
  4117  0521  0855               	movf	??_vfpfcnvrt+1,w
  4118  0522  0085               	movwf	5
  4119  0523  0800               	movf	0,w	;code access
  4120  0524  00D6               	movwf	??_vfpfcnvrt+2
  4121  0525  01D7               	clrf	??_vfpfcnvrt+3
  4122  0526  0856               	movf	??_vfpfcnvrt+2,w
  4123  0527  00F1               	movwf	fputc@c
  4124  0528  0857               	movf	??_vfpfcnvrt+3,w
  4125  0529  00F2               	movwf	fputc@c+1
  4126  052A  086A               	movf	vfpfcnvrt@fp,w
  4127  052B  00D8               	movwf	??_vfpfcnvrt+4
  4128  052C  0858               	movf	??_vfpfcnvrt+4,w
  4129  052D  00F3               	movwf	fputc@fp
  4130  052E  3180  20D8  3184   	fcall	_fputc
  4131                           
  4132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4133  0531  0140               	movlb	0	; select bank0
  4134  0532  0852               	movf	vfpfcnvrt@fmt,w
  4135  0533  0086               	movwf	6
  4136  0534  0187               	clrf	7
  4137  0535  3001               	movlw	1
  4138  0536  0781               	addwf	1,f
  4139  0537  3141               	addfsr 1,1
  4140  0538  1803               	skipnc
  4141  0539  0A81               	incf	1,f
  4142  053A  2D07               	goto	l2331
  4143  053B                     __end_of_vfpfcnvrt:	
  4144                           
  4145                           	psect	text15
  4146  068E                     __ptext15:	
  4147 ;; *************** function _xtoa *****************
  4148 ;; Defined at:
  4149 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  fp              1    wreg     PTR struct _IO_FILE
  4152 ;;		 -> NULL(0), 
  4153 ;;  d               8   12[BANK0 ] unsigned long long 
  4154 ;;  x               1   20[BANK0 ] unsigned char 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  4157 ;;		 -> NULL(0), 
  4158 ;;  n               8   38[BANK0 ] unsigned long long 
  4159 ;;  c               2   48[BANK0 ] int 
  4160 ;;  i               2   46[BANK0 ] int 
  4161 ;;  w               2   36[BANK0 ] int 
  4162 ;;  p               2   33[BANK0 ] int 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  2   12[BANK0 ] int 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4172 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;Total ram usage:       38 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    4
  4179 ;; This function calls:
  4180 ;;		_isalpha
  4181 ;;		_isupper
  4182 ;;		_pad
  4183 ;;		_toupper
  4184 ;; This function is called by:
  4185 ;;		_vfpfcnvrt
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           
  4190                           ;psect for function _xtoa
  4191  068E                     _xtoa:	
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _xtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4195                           ;xtoa@fp stored from wreg
  4196  068E  0140               	movlb	0	; select bank0
  4197  068F  00C3               	movwf	xtoa@fp
  4198                           
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  4200  0690  0142               	movlb	2	; select bank2
  4201  0691  1BD2               	btfsc	(_prec+1)^(0+256),7
  4202  0692  2E98               	goto	l535
  4203                           
  4204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  4205  0693  30FD               	movlw	253
  4206  0694  0141               	movlb	1	; select bank1
  4207  0695  05EB               	andwf	_flags^(0+128),f
  4208  0696  30FF               	movlw	255
  4209  0697  05EC               	andwf	(_flags+1)^(0+128),f
  4210  0698                     l535:	
  4211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  4212                           
  4213                           
  4214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  4215  0698  0142               	movlb	2	; select bank2
  4216  0699  0852               	movf	(_prec+1)^(0+256),w
  4217  069A  3A80               	xorlw	128
  4218  069B  0140               	movlb	0	; select bank0
  4219  069C  00B5               	movwf	??_xtoa
  4220  069D  3080               	movlw	128
  4221  069E  0235               	subwf	??_xtoa,w
  4222  069F  1D03               	skipz
  4223  06A0  2EA4               	goto	u2195
  4224  06A1  3001               	movlw	1
  4225  06A2  0142               	movlb	2	; select bank2
  4226  06A3  0251               	subwf	_prec^(0+256),w
  4227  06A4                     u2195:	
  4228  06A4  1803               	skipnc
  4229  06A5  2EAC               	goto	l2233
  4230  06A6  3001               	movlw	1
  4231  06A7  0140               	movlb	0	; select bank0
  4232  06A8  00C1               	movwf	xtoa@p
  4233  06A9  3000               	movlw	0
  4234  06AA  00C2               	movwf	xtoa@p+1
  4235  06AB  2EB4               	goto	l539
  4236  06AC                     l2233:	
  4237  06AC  0142               	movlb	2	; select bank2
  4238  06AD  0852               	movf	(_prec+1)^(0+256),w
  4239  06AE  0140               	movlb	0	; select bank0
  4240  06AF  00C2               	movwf	xtoa@p+1
  4241  06B0  0142               	movlb	2	; select bank2
  4242  06B1  0851               	movf	_prec^(0+256),w
  4243  06B2  0140               	movlb	0	; select bank0
  4244  06B3  00C1               	movwf	xtoa@p
  4245  06B4                     l539:	
  4246                           
  4247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  4248  06B4  0142               	movlb	2	; select bank2
  4249  06B5  0850               	movf	(_width+1)^(0+256),w
  4250  06B6  0140               	movlb	0	; select bank0
  4251  06B7  00C5               	movwf	xtoa@w+1
  4252  06B8  0142               	movlb	2	; select bank2
  4253  06B9  084F               	movf	_width^(0+256),w
  4254  06BA  0140               	movlb	0	; select bank0
  4255  06BB  00C4               	movwf	xtoa@w
  4256                           
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  4258  06BC  0141               	movlb	1	; select bank1
  4259  06BD  1E6B               	btfss	_flags^(0+128),4
  4260  06BE  2EC4               	goto	l2239
  4261                           
  4262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  4263  06BF  30FE               	movlw	254
  4264  06C0  0140               	movlb	0	; select bank0
  4265  06C1  07C4               	addwf	xtoa@w,f
  4266  06C2  30FF               	movlw	255
  4267  06C3  3DC5               	addwfc	xtoa@w+1,f
  4268  06C4                     l2239:	
  4269                           
  4270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  4271  06C4  0140               	movlb	0	; select bank0
  4272  06C5  082C               	movf	xtoa@d,w
  4273  06C6  00C6               	movwf	xtoa@n
  4274  06C7  082D               	movf	xtoa@d+1,w
  4275  06C8  00C7               	movwf	xtoa@n+1
  4276  06C9  082E               	movf	xtoa@d+2,w
  4277  06CA  00C8               	movwf	xtoa@n+2
  4278  06CB  082F               	movf	xtoa@d+3,w
  4279  06CC  00C9               	movwf	xtoa@n+3
  4280  06CD  0830               	movf	xtoa@d+4,w
  4281  06CE  00CA               	movwf	xtoa@n+4
  4282  06CF  0831               	movf	xtoa@d+5,w
  4283  06D0  00CB               	movwf	xtoa@n+5
  4284  06D1  0832               	movf	xtoa@d+6,w
  4285  06D2  00CC               	movwf	xtoa@n+6
  4286  06D3  0833               	movf	xtoa@d+7,w
  4287  06D4  00CD               	movwf	xtoa@n+7
  4288                           
  4289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  4290  06D5  301F               	movlw	31
  4291  06D6  00CE               	movwf	xtoa@i
  4292  06D7  3000               	movlw	0
  4293  06D8  00CF               	movwf	xtoa@i+1
  4294                           
  4295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  4296  06D9  0143               	movlb	3	; select bank3
  4297  06DA  01BF               	clrf	(_dbuf^(0+384)+31)
  4298                           
  4299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4300  06DB  2F86               	goto	l2271
  4301  06DC                     l2243:	
  4302                           
  4303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  4304  06DC  30FF               	movlw	255
  4305  06DD  0140               	movlb	0	; select bank0
  4306  06DE  07CE               	addwf	xtoa@i,f
  4307  06DF  30FF               	movlw	255
  4308  06E0  3DCF               	addwfc	xtoa@i+1,f
  4309                           
  4310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  4311  06E1  300F               	movlw	15
  4312  06E2  0546               	andwf	xtoa@n,w
  4313  06E3  00D0               	movwf	xtoa@c
  4314  06E4  3000               	movlw	0
  4315  06E5  0547               	andwf	xtoa@n+1,w
  4316  06E6  00D1               	movwf	xtoa@c+1
  4317                           
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  4319  06E7  0851               	movf	xtoa@c+1,w
  4320  06E8  3A80               	xorlw	128
  4321  06E9  00B5               	movwf	??_xtoa
  4322  06EA  3080               	movlw	128
  4323  06EB  0235               	subwf	??_xtoa,w
  4324  06EC  1D03               	skipz
  4325  06ED  2EF0               	goto	u2215
  4326  06EE  300A               	movlw	10
  4327  06EF  0250               	subwf	xtoa@c,w
  4328  06F0                     u2215:	
  4329  06F0  1C03               	skipc
  4330  06F1  2EF6               	goto	l2247
  4331  06F2  0140               	movlb	0	; select bank0
  4332  06F3  0850               	movf	xtoa@c,w
  4333  06F4  3E57               	addlw	87
  4334  06F5  2EF9               	goto	L1
  4335  06F6                     l2247:	
  4336  06F6  0140               	movlb	0	; select bank0
  4337  06F7  0850               	movf	xtoa@c,w
  4338  06F8  3E30               	addlw	48
  4339  06F9                     L1:	
  4340  06F9  00D0               	movwf	xtoa@c
  4341  06FA  3000               	movlw	0
  4342  06FB  3D51               	addwfc	xtoa@c+1,w
  4343  06FC  00D1               	movwf	xtoa@c+1
  4344  06FD  0834               	movf	xtoa@x,w
  4345  06FE  3EBF               	addlw	191
  4346  06FF  00B5               	movwf	??_xtoa
  4347  0700  30FF               	movlw	255
  4348  0701  1803               	skipnc
  4349  0702  3000               	movlw	0
  4350  0703  00B6               	movwf	??_xtoa+1
  4351  0704  3000               	movlw	0
  4352  0705  0236               	subwf	??_xtoa+1,w
  4353  0706  301A               	movlw	26
  4354  0707  1903               	skipnz
  4355  0708  0235               	subwf	??_xtoa,w
  4356  0709  1803               	btfsc	3,0
  4357  070A  2F0D               	goto	u2220
  4358  070B  3001               	movlw	1
  4359  070C  2F0E               	goto	u2230
  4360  070D                     u2220:	
  4361  070D  3000               	movlw	0
  4362  070E                     u2230:	
  4363  070E  00B7               	movwf	??_xtoa+2
  4364  070F  01B8               	clrf	??_xtoa+3
  4365  0710  0837               	movf	??_xtoa+2,w
  4366  0711  00BD               	movwf	_xtoa$1240
  4367  0712  0838               	movf	??_xtoa+3,w
  4368  0713  00BE               	movwf	_xtoa$1240+1
  4369  0714  083D               	movf	_xtoa$1240,w
  4370  0715  043E               	iorwf	_xtoa$1240+1,w
  4371  0716  1903               	btfsc	3,2
  4372  0717  2F44               	goto	l2263
  4373  0718  3020               	movlw	32
  4374  0719  0450               	iorwf	xtoa@c,w
  4375  071A  00B5               	movwf	??_xtoa
  4376  071B  3000               	movlw	0
  4377  071C  0451               	iorwf	xtoa@c+1,w
  4378  071D  00B6               	movwf	??_xtoa+1
  4379  071E  0835               	movf	??_xtoa,w
  4380  071F  3E9F               	addlw	159
  4381  0720  00B7               	movwf	??_xtoa+2
  4382  0721  30FF               	movlw	255
  4383  0722  3D36               	addwfc	??_xtoa+1,w
  4384  0723  00B8               	movwf	??_xtoa+3
  4385  0724  3000               	movlw	0
  4386  0725  0238               	subwf	??_xtoa+3,w
  4387  0726  301A               	movlw	26
  4388  0727  1903               	skipnz
  4389  0728  0237               	subwf	??_xtoa+2,w
  4390  0729  1803               	btfsc	3,0
  4391  072A  2F2D               	goto	u2250
  4392  072B  3001               	movlw	1
  4393  072C  2F2E               	goto	u2260
  4394  072D                     u2250:	
  4395  072D  3000               	movlw	0
  4396  072E                     u2260:	
  4397  072E  00B9               	movwf	??_xtoa+4
  4398  072F  01BA               	clrf	??_xtoa+5
  4399  0730  0839               	movf	??_xtoa+4,w
  4400  0731  00BF               	movwf	_xtoa$1241
  4401  0732  083A               	movf	??_xtoa+5,w
  4402  0733  00C0               	movwf	_xtoa$1241+1
  4403  0734  083F               	movf	_xtoa$1241,w
  4404  0735  0440               	iorwf	_xtoa$1241+1,w
  4405  0736  1903               	btfsc	3,2
  4406  0737  2F44               	goto	l2263
  4407                           
  4408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  4409  0738  0851               	movf	xtoa@c+1,w
  4410  0739  00F7               	movwf	toupper@c+1
  4411  073A  0850               	movf	xtoa@c,w
  4412  073B  00F6               	movwf	toupper@c
  4413  073C  318F  27BB  3186   	fcall	_toupper
  4414  073F  0877               	movf	?_toupper+1,w
  4415  0740  0140               	movlb	0	; select bank0
  4416  0741  00D1               	movwf	xtoa@c+1
  4417  0742  0876               	movf	?_toupper,w
  4418  0743  00D0               	movwf	xtoa@c
  4419  0744                     l2263:	
  4420                           
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  4422  0744  0850               	movf	xtoa@c,w
  4423  0745  00B5               	movwf	??_xtoa
  4424  0746  084E               	movf	xtoa@i,w
  4425  0747  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4426  0748  0086               	movwf	6
  4427  0749  3001               	movlw	1	; select bank3/4
  4428  074A  0087               	movwf	7
  4429  074B  0835               	movf	??_xtoa,w
  4430  074C  0081               	movwf	1
  4431                           
  4432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  4433  074D  30FF               	movlw	255
  4434  074E  07C1               	addwf	xtoa@p,f
  4435  074F  30FF               	movlw	255
  4436  0750  3DC2               	addwfc	xtoa@p+1,f
  4437                           
  4438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  4439  0751  30FF               	movlw	255
  4440  0752  07C4               	addwf	xtoa@w,f
  4441  0753  30FF               	movlw	255
  4442  0754  3DC5               	addwfc	xtoa@w+1,f
  4443                           
  4444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  4445  0755  3046               	movlw	low xtoa@n
  4446  0756  0086               	movwf	6
  4447  0757  3000               	movlw	high xtoa@n
  4448  0758  0087               	movwf	7
  4449  0759  3F40               	moviw [0]fsr1
  4450  075A  00B5               	movwf	??_xtoa
  4451  075B  3F41               	moviw [1]fsr1
  4452  075C  00B6               	movwf	??_xtoa+1
  4453  075D  3F42               	moviw [2]fsr1
  4454  075E  00B7               	movwf	??_xtoa+2
  4455  075F  3F43               	moviw [3]fsr1
  4456  0760  00B8               	movwf	??_xtoa+3
  4457  0761  3F44               	moviw [4]fsr1
  4458  0762  00B9               	movwf	??_xtoa+4
  4459  0763  3F45               	moviw [5]fsr1
  4460  0764  00BA               	movwf	??_xtoa+5
  4461  0765  3F46               	moviw [6]fsr1
  4462  0766  00BB               	movwf	??_xtoa+6
  4463  0767  3F47               	moviw [7]fsr1
  4464  0768  00BC               	movwf	??_xtoa+7
  4465  0769  3004               	movlw	4
  4466  076A                     u2285:	
  4467  076A  0140               	movlb	0	; select bank0
  4468  076B  36BC               	lsrf	??_xtoa+7,f
  4469  076C  0CBB               	rrf	??_xtoa+6,f
  4470  076D  0CBA               	rrf	??_xtoa+5,f
  4471  076E  0CB9               	rrf	??_xtoa+4,f
  4472  076F  0CB8               	rrf	??_xtoa+3,f
  4473  0770  0CB7               	rrf	??_xtoa+2,f
  4474  0771  0CB6               	rrf	??_xtoa+1,f
  4475  0772  0CB5               	rrf	??_xtoa,f
  4476  0773  0B89               	decfsz	9,f
  4477  0774  2F6A               	goto	u2285
  4478  0775  0140               	movlb	0	; select bank0
  4479  0776  083C               	movf	??_xtoa+7,w
  4480  0777  00CD               	movwf	xtoa@n+7
  4481  0778  083B               	movf	??_xtoa+6,w
  4482  0779  00CC               	movwf	xtoa@n+6
  4483  077A  083A               	movf	??_xtoa+5,w
  4484  077B  00CB               	movwf	xtoa@n+5
  4485  077C  0839               	movf	??_xtoa+4,w
  4486  077D  00CA               	movwf	xtoa@n+4
  4487  077E  0838               	movf	??_xtoa+3,w
  4488  077F  00C9               	movwf	xtoa@n+3
  4489  0780  0837               	movf	??_xtoa+2,w
  4490  0781  00C8               	movwf	xtoa@n+2
  4491  0782  0836               	movf	??_xtoa+1,w
  4492  0783  00C7               	movwf	xtoa@n+1
  4493  0784  0835               	movf	??_xtoa,w
  4494  0785  00C6               	movwf	xtoa@n
  4495  0786                     l2271:	
  4496                           
  4497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4498  0786  0140               	movlb	0	; select bank0
  4499  0787  084F               	movf	xtoa@i+1,w
  4500  0788  3A80               	xorlw	128
  4501  0789  00B5               	movwf	??_xtoa
  4502  078A  3080               	movlw	128
  4503  078B  0235               	subwf	??_xtoa,w
  4504  078C  1D03               	skipz
  4505  078D  2F90               	goto	u2295
  4506  078E  3002               	movlw	2
  4507  078F  024E               	subwf	xtoa@i,w
  4508  0790                     u2295:	
  4509  0790  1C03               	skipc
  4510  0791  2FB7               	goto	l560
  4511  0792  0140               	movlb	0	; select bank0
  4512  0793  0846               	movf	xtoa@n,w
  4513  0794  0447               	iorwf	xtoa@n+1,w
  4514  0795  0448               	iorwf	xtoa@n+2,w
  4515  0796  0449               	iorwf	xtoa@n+3,w
  4516  0797  044A               	iorwf	xtoa@n+4,w
  4517  0798  044B               	iorwf	xtoa@n+5,w
  4518  0799  044C               	iorwf	xtoa@n+6,w
  4519  079A  044D               	iorwf	xtoa@n+7,w
  4520  079B  1D03               	skipz
  4521  079C  2EDC               	goto	l2243
  4522  079D  0842               	movf	xtoa@p+1,w
  4523  079E  3A80               	xorlw	128
  4524  079F  00B5               	movwf	??_xtoa
  4525  07A0  3080               	movlw	128
  4526  07A1  0235               	subwf	??_xtoa,w
  4527  07A2  1D03               	skipz
  4528  07A3  2FA6               	goto	u2315
  4529  07A4  3001               	movlw	1
  4530  07A5  0241               	subwf	xtoa@p,w
  4531  07A6                     u2315:	
  4532  07A6  1803               	skipnc
  4533  07A7  2EDC               	goto	l2243
  4534  07A8  0140               	movlb	0	; select bank0
  4535  07A9  0845               	movf	xtoa@w+1,w
  4536  07AA  3A80               	xorlw	128
  4537  07AB  00B5               	movwf	??_xtoa
  4538  07AC  3080               	movlw	128
  4539  07AD  0235               	subwf	??_xtoa,w
  4540  07AE  1D03               	skipz
  4541  07AF  2FB2               	goto	u2325
  4542  07B0  3001               	movlw	1
  4543  07B1  0244               	subwf	xtoa@w,w
  4544  07B2                     u2325:	
  4545  07B2  1C03               	skipc
  4546  07B3  2FB7               	goto	l560
  4547  07B4  0141               	movlb	1	; select bank1
  4548  07B5  18EB               	btfsc	_flags^(0+128),1
  4549  07B6  2EDC               	goto	l2243
  4550  07B7                     l560:	
  4551                           
  4552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  4553  07B7  0141               	movlb	1	; select bank1
  4554  07B8  1E6B               	btfss	_flags^(0+128),4
  4555  07B9  2FD5               	goto	l2287
  4556                           
  4557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  4558  07BA  30FF               	movlw	255
  4559  07BB  0140               	movlb	0	; select bank0
  4560  07BC  07CE               	addwf	xtoa@i,f
  4561  07BD  30FF               	movlw	255
  4562  07BE  3DCF               	addwfc	xtoa@i+1,f
  4563                           
  4564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  4565  07BF  0834               	movf	xtoa@x,w
  4566  07C0  00B5               	movwf	??_xtoa
  4567  07C1  084E               	movf	xtoa@i,w
  4568  07C2  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4569  07C3  0086               	movwf	6
  4570  07C4  3001               	movlw	1	; select bank3/4
  4571  07C5  0087               	movwf	7
  4572  07C6  0835               	movf	??_xtoa,w
  4573  07C7  0081               	movwf	1
  4574                           
  4575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  4576  07C8  30FF               	movlw	255
  4577  07C9  07CE               	addwf	xtoa@i,f
  4578  07CA  30FF               	movlw	255
  4579  07CB  3DCF               	addwfc	xtoa@i+1,f
  4580                           
  4581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  4582  07CC  3030               	movlw	48
  4583  07CD  00B5               	movwf	??_xtoa
  4584  07CE  084E               	movf	xtoa@i,w
  4585  07CF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4586  07D0  0086               	movwf	6
  4587  07D1  3001               	movlw	1	; select bank3/4
  4588  07D2  0087               	movwf	7
  4589  07D3  0835               	movf	??_xtoa,w
  4590  07D4  0081               	movwf	1
  4591  07D5                     l2287:	
  4592                           
  4593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  4594  07D5  0140               	movlb	0	; select bank0
  4595  07D6  084E               	movf	xtoa@i,w
  4596  07D7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4597  07D8  00B5               	movwf	??_xtoa
  4598  07D9  0835               	movf	??_xtoa,w
  4599  07DA  00A4               	movwf	pad@buf
  4600  07DB  0845               	movf	xtoa@w+1,w
  4601  07DC  00A6               	movwf	pad@p+1
  4602  07DD  0844               	movf	xtoa@w,w
  4603  07DE  00A5               	movwf	pad@p
  4604  07DF  0843               	movf	xtoa@fp,w
  4605  07E0  3181  2142         	fcall	_pad
  4606  07E2  0140               	movlb	0	; select bank0
  4607  07E3  0825               	movf	?_pad+1,w
  4608  07E4  00AD               	movwf	?_xtoa+1
  4609  07E5  0824               	movf	?_pad,w
  4610  07E6  00AC               	movwf	?_xtoa
  4611  07E7  0008               	return
  4612  07E8                     __end_of_xtoa:	
  4613                           
  4614                           	psect	text16
  4615  0FBB                     __ptext16:	
  4616 ;; *************** function _toupper *****************
  4617 ;; Defined at:
  4618 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  c               2    6[COMMON] int 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  2    6[COMMON] int 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;Total ram usage:        8 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    1
  4639 ;; This function calls:
  4640 ;;		_islower
  4641 ;; This function is called by:
  4642 ;;		_xtoa
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _toupper
  4648  0FBB                     _toupper:	
  4649                           
  4650                           ;incstack = 0
  4651                           ; Regs used in _toupper: [wreg+status,2+status,0]
  4652  0FBB  0876               	movf	toupper@c,w
  4653  0FBC  3E9F               	addlw	159
  4654  0FBD  00F8               	movwf	??_toupper
  4655  0FBE  30FF               	movlw	255
  4656  0FBF  3D77               	addwfc	toupper@c+1,w
  4657  0FC0  00F9               	movwf	??_toupper+1
  4658  0FC1  3000               	movlw	0
  4659  0FC2  0279               	subwf	??_toupper+1,w
  4660  0FC3  301A               	movlw	26
  4661  0FC4  1903               	skipnz
  4662  0FC5  0278               	subwf	??_toupper,w
  4663  0FC6  1803               	btfsc	3,0
  4664  0FC7  2FCA               	goto	u1780
  4665  0FC8  3001               	movlw	1
  4666  0FC9  2FCB               	goto	u1790
  4667  0FCA                     u1780:	
  4668  0FCA  3000               	movlw	0
  4669  0FCB                     u1790:	
  4670  0FCB  00FA               	movwf	??_toupper+2
  4671  0FCC  01FB               	clrf	??_toupper+3
  4672  0FCD  087A               	movf	??_toupper+2,w
  4673  0FCE  00FC               	movwf	_toupper$1641
  4674  0FCF  087B               	movf	??_toupper+3,w
  4675  0FD0  00FD               	movwf	_toupper$1641+1
  4676  0FD1  087C               	movf	_toupper$1641,w
  4677  0FD2  047D               	iorwf	_toupper$1641+1,w
  4678  0FD3  1903               	btfsc	3,2
  4679  0FD4  0008               	return
  4680  0FD5  305F               	movlw	95
  4681  0FD6  0576               	andwf	toupper@c,w
  4682  0FD7  00F6               	movwf	?_toupper
  4683  0FD8  3000               	movlw	0
  4684  0FD9  0577               	andwf	toupper@c+1,w
  4685  0FDA  00F7               	movwf	?_toupper+1
  4686  0FDB  0008               	return
  4687  0FDC                     __end_of_toupper:	
  4688                           
  4689                           	psect	text17
  4690  0F37                     __ptext17:	
  4691 ;; *************** function _islower *****************
  4692 ;; Defined at:
  4693 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  c               2    0[COMMON] int 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  2    0[COMMON] int 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;Total ram usage:        6 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_toupper
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _islower
  4722  0F37                     _islower:	
  4723                           
  4724                           ;incstack = 0
  4725                           ; Regs used in _islower: [wreg+status,2+status,0]
  4726  0F37  0870               	movf	islower@c,w
  4727  0F38  3E9F               	addlw	159
  4728  0F39  00F2               	movwf	??_islower
  4729  0F3A  30FF               	movlw	255
  4730  0F3B  3D71               	addwfc	islower@c+1,w
  4731  0F3C  00F3               	movwf	??_islower+1
  4732  0F3D  3000               	movlw	0
  4733  0F3E  0273               	subwf	??_islower+1,w
  4734  0F3F  301A               	movlw	26
  4735  0F40  1903               	skipnz
  4736  0F41  0272               	subwf	??_islower,w
  4737  0F42  1803               	btfsc	3,0
  4738  0F43  2F46               	goto	u1670
  4739  0F44  3001               	movlw	1
  4740  0F45  2F47               	goto	u1680
  4741  0F46                     u1670:	
  4742  0F46  3000               	movlw	0
  4743  0F47                     u1680:	
  4744  0F47  00F4               	movwf	??_islower+2
  4745  0F48  01F5               	clrf	??_islower+3
  4746  0F49  0874               	movf	??_islower+2,w
  4747  0F4A  00F0               	movwf	?_islower
  4748  0F4B  0875               	movf	??_islower+3,w
  4749  0F4C  00F1               	movwf	?_islower+1
  4750  0F4D  0008               	return
  4751  0F4E                     __end_of_islower:	
  4752                           
  4753                           	psect	text18
  4754  0F20                     __ptext18:	
  4755 ;; *************** function _isupper *****************
  4756 ;; Defined at:
  4757 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  c               2    0[COMMON] int 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  2    0[COMMON] int 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;Total ram usage:        6 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_xtoa
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           
  4785                           ;psect for function _isupper
  4786  0F20                     _isupper:	
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _isupper: [wreg+status,2+status,0]
  4790  0F20  0870               	movf	isupper@c,w
  4791  0F21  3EBF               	addlw	191
  4792  0F22  00F2               	movwf	??_isupper
  4793  0F23  30FF               	movlw	255
  4794  0F24  3D71               	addwfc	isupper@c+1,w
  4795  0F25  00F3               	movwf	??_isupper+1
  4796  0F26  3000               	movlw	0
  4797  0F27  0273               	subwf	??_isupper+1,w
  4798  0F28  301A               	movlw	26
  4799  0F29  1903               	skipnz
  4800  0F2A  0272               	subwf	??_isupper,w
  4801  0F2B  1803               	btfsc	3,0
  4802  0F2C  2F2F               	goto	u1740
  4803  0F2D  3001               	movlw	1
  4804  0F2E  2F30               	goto	u1750
  4805  0F2F                     u1740:	
  4806  0F2F  3000               	movlw	0
  4807  0F30                     u1750:	
  4808  0F30  00F4               	movwf	??_isupper+2
  4809  0F31  01F5               	clrf	??_isupper+3
  4810  0F32  0874               	movf	??_isupper+2,w
  4811  0F33  00F0               	movwf	?_isupper
  4812  0F34  0875               	movf	??_isupper+3,w
  4813  0F35  00F1               	movwf	?_isupper+1
  4814  0F36  0008               	return
  4815  0F37                     __end_of_isupper:	
  4816                           
  4817                           	psect	text19
  4818  0F7D                     __ptext19:	
  4819 ;; *************** function _isalpha *****************
  4820 ;; Defined at:
  4821 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  c               2    0[COMMON] int 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  2    0[COMMON] int 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;Total ram usage:        8 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_xtoa
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _isalpha
  4850  0F7D                     _isalpha:	
  4851                           
  4852                           ;incstack = 0
  4853                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  4854  0F7D  3020               	movlw	32
  4855  0F7E  0470               	iorwf	isalpha@c,w
  4856  0F7F  00F2               	movwf	??_isalpha
  4857  0F80  3000               	movlw	0
  4858  0F81  0471               	iorwf	isalpha@c+1,w
  4859  0F82  00F3               	movwf	??_isalpha+1
  4860  0F83  0872               	movf	??_isalpha,w
  4861  0F84  3E9F               	addlw	159
  4862  0F85  00F4               	movwf	??_isalpha+2
  4863  0F86  30FF               	movlw	255
  4864  0F87  3D73               	addwfc	??_isalpha+1,w
  4865  0F88  00F5               	movwf	??_isalpha+3
  4866  0F89  3000               	movlw	0
  4867  0F8A  0275               	subwf	??_isalpha+3,w
  4868  0F8B  301A               	movlw	26
  4869  0F8C  1903               	skipnz
  4870  0F8D  0274               	subwf	??_isalpha+2,w
  4871  0F8E  1803               	btfsc	3,0
  4872  0F8F  2F92               	goto	u1760
  4873  0F90  3001               	movlw	1
  4874  0F91  2F93               	goto	u1770
  4875  0F92                     u1760:	
  4876  0F92  3000               	movlw	0
  4877  0F93                     u1770:	
  4878  0F93  00F6               	movwf	??_isalpha+4
  4879  0F94  01F7               	clrf	??_isalpha+5
  4880  0F95  0876               	movf	??_isalpha+4,w
  4881  0F96  00F0               	movwf	?_isalpha
  4882  0F97  0877               	movf	??_isalpha+5,w
  4883  0F98  00F1               	movwf	?_isalpha+1
  4884  0F99  0008               	return
  4885  0F9A                     __end_of_isalpha:	
  4886                           
  4887                           	psect	text20
  4888  053B                     __ptext20:	
  4889 ;; *************** function _dtoa *****************
  4890 ;; Defined at:
  4891 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  fp              1    wreg     PTR struct _IO_FILE
  4894 ;;		 -> NULL(0), 
  4895 ;;  d               8   16[BANK0 ] long long 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
  4898 ;;		 -> NULL(0), 
  4899 ;;  n               8   36[BANK0 ] long long 
  4900 ;;  i               2   44[BANK0 ] int 
  4901 ;;  s               2   34[BANK0 ] int 
  4902 ;;  w               2   32[BANK0 ] int 
  4903 ;;  p               2   29[BANK0 ] int 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  2   16[BANK0 ] int 
  4906 ;; Registers used:
  4907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4913 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;Total ram usage:       30 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    4
  4920 ;; This function calls:
  4921 ;;		___aodiv
  4922 ;;		___aomod
  4923 ;;		_abs
  4924 ;;		_pad
  4925 ;; This function is called by:
  4926 ;;		_vfpfcnvrt
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function _dtoa
  4932  053B                     _dtoa:	
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4936                           ;dtoa@fp stored from wreg
  4937  053B  0140               	movlb	0	; select bank0
  4938  053C  00BF               	movwf	dtoa@fp
  4939                           
  4940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4941  053D  0830               	movf	dtoa@d,w
  4942  053E  00C4               	movwf	dtoa@n
  4943  053F  0831               	movf	dtoa@d+1,w
  4944  0540  00C5               	movwf	dtoa@n+1
  4945  0541  0832               	movf	dtoa@d+2,w
  4946  0542  00C6               	movwf	dtoa@n+2
  4947  0543  0833               	movf	dtoa@d+3,w
  4948  0544  00C7               	movwf	dtoa@n+3
  4949  0545  0834               	movf	dtoa@d+4,w
  4950  0546  00C8               	movwf	dtoa@n+4
  4951  0547  0835               	movf	dtoa@d+5,w
  4952  0548  00C9               	movwf	dtoa@n+5
  4953  0549  0836               	movf	dtoa@d+6,w
  4954  054A  00CA               	movwf	dtoa@n+6
  4955  054B  0837               	movf	dtoa@d+7,w
  4956  054C  00CB               	movwf	dtoa@n+7
  4957                           
  4958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4959  054D  3044               	movlw	low dtoa@n
  4960  054E  0086               	movwf	6
  4961  054F  3000               	movlw	high dtoa@n
  4962  0550  0087               	movwf	7
  4963  0551  3F47               	moviw [7]fsr1
  4964  0552  00B8               	movwf	??_dtoa
  4965  0553  1FB8               	btfss	??_dtoa,7
  4966  0554  2D57               	goto	u2020
  4967  0555  3001               	movlw	1
  4968  0556  2D58               	goto	u2030
  4969  0557                     u2020:	
  4970  0557  3000               	movlw	0
  4971  0558                     u2030:	
  4972  0558  0140               	movlb	0	; select bank0
  4973  0559  00B9               	movwf	??_dtoa+1
  4974  055A  01BA               	clrf	??_dtoa+2
  4975  055B  0839               	movf	??_dtoa+1,w
  4976  055C  00C2               	movwf	dtoa@s
  4977  055D  083A               	movf	??_dtoa+2,w
  4978  055E  00C3               	movwf	dtoa@s+1
  4979                           
  4980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4981  055F  0842               	movf	dtoa@s,w
  4982  0560  0443               	iorwf	dtoa@s+1,w
  4983  0561  1903               	btfsc	3,2
  4984  0562  2D81               	goto	l509
  4985                           
  4986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4987  0563  09C4               	comf	dtoa@n,f
  4988  0564  09C5               	comf	dtoa@n+1,f
  4989  0565  09C6               	comf	dtoa@n+2,f
  4990  0566  09C7               	comf	dtoa@n+3,f
  4991  0567  09C8               	comf	dtoa@n+4,f
  4992  0568  09C9               	comf	dtoa@n+5,f
  4993  0569  09CA               	comf	dtoa@n+6,f
  4994  056A  09CB               	comf	dtoa@n+7,f
  4995  056B  0AC4               	incf	dtoa@n,f
  4996  056C  1D03               	skipz
  4997  056D  2D81               	goto	l509
  4998  056E  0AC5               	incf	dtoa@n+1,f
  4999  056F  1D03               	skipz
  5000  0570  2D81               	goto	l509
  5001  0571  0AC6               	incf	dtoa@n+2,f
  5002  0572  1D03               	skipz
  5003  0573  2D81               	goto	l509
  5004  0574  0AC7               	incf	dtoa@n+3,f
  5005  0575  1D03               	skipz
  5006  0576  2D81               	goto	l509
  5007  0577  0AC8               	incf	dtoa@n+4,f
  5008  0578  1D03               	skipz
  5009  0579  2D81               	goto	l509
  5010  057A  0AC9               	incf	dtoa@n+5,f
  5011  057B  1D03               	skipz
  5012  057C  2D81               	goto	l509
  5013  057D  0ACA               	incf	dtoa@n+6,f
  5014  057E  1D03               	skipz
  5015  057F  2D81               	goto	l509
  5016  0580  0ACB               	incf	dtoa@n+7,f
  5017  0581                     l509:	
  5018                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  5019                           
  5020                           
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5022  0581  0142               	movlb	2	; select bank2
  5023  0582  1BD2               	btfsc	(_prec+1)^(0+256),7
  5024  0583  2D89               	goto	l510
  5025                           
  5026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5027  0584  30FD               	movlw	253
  5028  0585  0141               	movlb	1	; select bank1
  5029  0586  05EB               	andwf	_flags^(0+128),f
  5030  0587  30FF               	movlw	255
  5031  0588  05EC               	andwf	(_flags+1)^(0+128),f
  5032  0589                     l510:	
  5033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  5034                           
  5035                           
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5037  0589  0142               	movlb	2	; select bank2
  5038  058A  0852               	movf	(_prec+1)^(0+256),w
  5039  058B  3A80               	xorlw	128
  5040  058C  0140               	movlb	0	; select bank0
  5041  058D  00B8               	movwf	??_dtoa
  5042  058E  3080               	movlw	128
  5043  058F  0238               	subwf	??_dtoa,w
  5044  0590  1D03               	skipz
  5045  0591  2D95               	goto	u2075
  5046  0592  3001               	movlw	1
  5047  0593  0142               	movlb	2	; select bank2
  5048  0594  0251               	subwf	_prec^(0+256),w
  5049  0595                     u2075:	
  5050  0595  1803               	skipnc
  5051  0596  2D9D               	goto	l2181
  5052  0597  3001               	movlw	1
  5053  0598  0140               	movlb	0	; select bank0
  5054  0599  00BD               	movwf	dtoa@p
  5055  059A  3000               	movlw	0
  5056  059B  00BE               	movwf	dtoa@p+1
  5057  059C  2DA5               	goto	l514
  5058  059D                     l2181:	
  5059  059D  0142               	movlb	2	; select bank2
  5060  059E  0852               	movf	(_prec+1)^(0+256),w
  5061  059F  0140               	movlb	0	; select bank0
  5062  05A0  00BE               	movwf	dtoa@p+1
  5063  05A1  0142               	movlb	2	; select bank2
  5064  05A2  0851               	movf	_prec^(0+256),w
  5065  05A3  0140               	movlb	0	; select bank0
  5066  05A4  00BD               	movwf	dtoa@p
  5067  05A5                     l514:	
  5068                           
  5069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5070  05A5  0142               	movlb	2	; select bank2
  5071  05A6  0850               	movf	(_width+1)^(0+256),w
  5072  05A7  0140               	movlb	0	; select bank0
  5073  05A8  00C1               	movwf	dtoa@w+1
  5074  05A9  0142               	movlb	2	; select bank2
  5075  05AA  084F               	movf	_width^(0+256),w
  5076  05AB  0140               	movlb	0	; select bank0
  5077  05AC  00C0               	movwf	dtoa@w
  5078                           
  5079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5080  05AD  0842               	movf	dtoa@s,w
  5081  05AE  0443               	iorwf	dtoa@s+1,w
  5082  05AF  1D03               	btfss	3,2
  5083  05B0  2DB4               	goto	l2187
  5084  05B1  0141               	movlb	1	; select bank1
  5085  05B2  1D6B               	btfss	_flags^(0+128),2
  5086  05B3  2DB9               	goto	l515
  5087  05B4                     l2187:	
  5088                           
  5089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  5090  05B4  30FF               	movlw	255
  5091  05B5  0140               	movlb	0	; select bank0
  5092  05B6  07C0               	addwf	dtoa@w,f
  5093  05B7  30FF               	movlw	255
  5094  05B8  3DC1               	addwfc	dtoa@w+1,f
  5095  05B9                     l515:	
  5096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  5097                           
  5098                           
  5099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  5100  05B9  301F               	movlw	31
  5101  05BA  0140               	movlb	0	; select bank0
  5102  05BB  00CC               	movwf	dtoa@i
  5103  05BC  3000               	movlw	0
  5104  05BD  00CD               	movwf	dtoa@i+1
  5105                           
  5106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  5107  05BE  0143               	movlb	3	; select bank3
  5108  05BF  01BF               	clrf	(_dbuf^(0+384)+31)
  5109                           
  5110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5111  05C0  2E4F               	goto	l518
  5112  05C1                     l2201:	
  5113  05C1  0140               	movlb	0	; select bank0
  5114  05C2  0844               	movf	dtoa@n,w
  5115  05C3  0445               	iorwf	dtoa@n+1,w
  5116  05C4  0446               	iorwf	dtoa@n+2,w
  5117  05C5  0447               	iorwf	dtoa@n+3,w
  5118  05C6  0448               	iorwf	dtoa@n+4,w
  5119  05C7  0449               	iorwf	dtoa@n+5,w
  5120  05C8  044A               	iorwf	dtoa@n+6,w
  5121  05C9  044B               	iorwf	dtoa@n+7,w
  5122  05CA  1D03               	skipz
  5123  05CB  2DE6               	goto	l2191
  5124  05CC  083E               	movf	dtoa@p+1,w
  5125  05CD  3A80               	xorlw	128
  5126  05CE  00B8               	movwf	??_dtoa
  5127  05CF  3080               	movlw	128
  5128  05D0  0238               	subwf	??_dtoa,w
  5129  05D1  1D03               	skipz
  5130  05D2  2DD5               	goto	u2125
  5131  05D3  3001               	movlw	1
  5132  05D4  023D               	subwf	dtoa@p,w
  5133  05D5                     u2125:	
  5134  05D5  1803               	skipnc
  5135  05D6  2DE6               	goto	l2191
  5136  05D7  0140               	movlb	0	; select bank0
  5137  05D8  0841               	movf	dtoa@w+1,w
  5138  05D9  3A80               	xorlw	128
  5139  05DA  00B8               	movwf	??_dtoa
  5140  05DB  3080               	movlw	128
  5141  05DC  0238               	subwf	??_dtoa,w
  5142  05DD  1D03               	skipz
  5143  05DE  2DE1               	goto	u2135
  5144  05DF  3001               	movlw	1
  5145  05E0  0240               	subwf	dtoa@w,w
  5146  05E1                     u2135:	
  5147  05E1  1C03               	skipc
  5148  05E2  2E5B               	goto	l2209
  5149  05E3  0141               	movlb	1	; select bank1
  5150  05E4  1CEB               	btfss	_flags^(0+128),1
  5151  05E5  2E5B               	goto	l2209
  5152  05E6                     l2191:	
  5153                           
  5154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  5155  05E6  30FF               	movlw	255
  5156  05E7  0140               	movlb	0	; select bank0
  5157  05E8  07CC               	addwf	dtoa@i,f
  5158  05E9  30FF               	movlw	255
  5159  05EA  3DCD               	addwfc	dtoa@i+1,f
  5160                           
  5161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  5162  05EB  300A               	movlw	10
  5163  05EC  00A0               	movwf	___aomod@divisor
  5164  05ED  01A1               	clrf	___aomod@divisor+1
  5165  05EE  01A2               	clrf	___aomod@divisor+2
  5166  05EF  01A3               	clrf	___aomod@divisor+3
  5167  05F0  01A4               	clrf	___aomod@divisor+4
  5168  05F1  01A5               	clrf	___aomod@divisor+5
  5169  05F2  01A6               	clrf	___aomod@divisor+6
  5170  05F3  01A7               	clrf	___aomod@divisor+7
  5171  05F4  0844               	movf	dtoa@n,w
  5172  05F5  00A8               	movwf	___aomod@dividend
  5173  05F6  0845               	movf	dtoa@n+1,w
  5174  05F7  00A9               	movwf	___aomod@dividend+1
  5175  05F8  0846               	movf	dtoa@n+2,w
  5176  05F9  00AA               	movwf	___aomod@dividend+2
  5177  05FA  0847               	movf	dtoa@n+3,w
  5178  05FB  00AB               	movwf	___aomod@dividend+3
  5179  05FC  0848               	movf	dtoa@n+4,w
  5180  05FD  00AC               	movwf	___aomod@dividend+4
  5181  05FE  0849               	movf	dtoa@n+5,w
  5182  05FF  00AD               	movwf	___aomod@dividend+5
  5183  0600  084A               	movf	dtoa@n+6,w
  5184  0601  00AE               	movwf	___aomod@dividend+6
  5185  0602  084B               	movf	dtoa@n+7,w
  5186  0603  00AF               	movwf	___aomod@dividend+7
  5187  0604  3182  2236  3185   	fcall	___aomod
  5188  0607  0140               	movlb	0	; select bank0
  5189  0608  0821               	movf	?___aomod+1,w
  5190  0609  00F4               	movwf	abs@a+1
  5191  060A  0820               	movf	?___aomod,w
  5192  060B  00F3               	movwf	abs@a
  5193  060C  318F  2709  3185   	fcall	_abs
  5194  060F  0873               	movf	?_abs,w
  5195  0610  3E30               	addlw	48
  5196  0611  0140               	movlb	0	; select bank0
  5197  0612  00B8               	movwf	??_dtoa
  5198  0613  084C               	movf	dtoa@i,w
  5199  0614  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5200  0615  0086               	movwf	6
  5201  0616  3001               	movlw	1	; select bank3/4
  5202  0617  0087               	movwf	7
  5203  0618  0838               	movf	??_dtoa,w
  5204  0619  0081               	movwf	1
  5205                           
  5206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5207  061A  30FF               	movlw	255
  5208  061B  07BD               	addwf	dtoa@p,f
  5209  061C  30FF               	movlw	255
  5210  061D  3DBE               	addwfc	dtoa@p+1,f
  5211                           
  5212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5213  061E  30FF               	movlw	255
  5214  061F  07C0               	addwf	dtoa@w,f
  5215  0620  30FF               	movlw	255
  5216  0621  3DC1               	addwfc	dtoa@w+1,f
  5217                           
  5218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5219  0622  300A               	movlw	10
  5220  0623  00A0               	movwf	___aodiv@divisor
  5221  0624  01A1               	clrf	___aodiv@divisor+1
  5222  0625  01A2               	clrf	___aodiv@divisor+2
  5223  0626  01A3               	clrf	___aodiv@divisor+3
  5224  0627  01A4               	clrf	___aodiv@divisor+4
  5225  0628  01A5               	clrf	___aodiv@divisor+5
  5226  0629  01A6               	clrf	___aodiv@divisor+6
  5227  062A  01A7               	clrf	___aodiv@divisor+7
  5228  062B  0844               	movf	dtoa@n,w
  5229  062C  00A8               	movwf	___aodiv@dividend
  5230  062D  0845               	movf	dtoa@n+1,w
  5231  062E  00A9               	movwf	___aodiv@dividend+1
  5232  062F  0846               	movf	dtoa@n+2,w
  5233  0630  00AA               	movwf	___aodiv@dividend+2
  5234  0631  0847               	movf	dtoa@n+3,w
  5235  0632  00AB               	movwf	___aodiv@dividend+3
  5236  0633  0848               	movf	dtoa@n+4,w
  5237  0634  00AC               	movwf	___aodiv@dividend+4
  5238  0635  0849               	movf	dtoa@n+5,w
  5239  0636  00AD               	movwf	___aodiv@dividend+5
  5240  0637  084A               	movf	dtoa@n+6,w
  5241  0638  00AE               	movwf	___aodiv@dividend+6
  5242  0639  084B               	movf	dtoa@n+7,w
  5243  063A  00AF               	movwf	___aodiv@dividend+7
  5244  063B  3183  2312  3185   	fcall	___aodiv
  5245  063E  0140               	movlb	0	; select bank0
  5246  063F  0820               	movf	?___aodiv,w
  5247  0640  00C4               	movwf	dtoa@n
  5248  0641  0821               	movf	?___aodiv+1,w
  5249  0642  00C5               	movwf	dtoa@n+1
  5250  0643  0822               	movf	?___aodiv+2,w
  5251  0644  00C6               	movwf	dtoa@n+2
  5252  0645  0823               	movf	?___aodiv+3,w
  5253  0646  00C7               	movwf	dtoa@n+3
  5254  0647  0824               	movf	?___aodiv+4,w
  5255  0648  00C8               	movwf	dtoa@n+4
  5256  0649  0825               	movf	?___aodiv+5,w
  5257  064A  00C9               	movwf	dtoa@n+5
  5258  064B  0826               	movf	?___aodiv+6,w
  5259  064C  00CA               	movwf	dtoa@n+6
  5260  064D  0827               	movf	?___aodiv+7,w
  5261  064E  00CB               	movwf	dtoa@n+7
  5262  064F                     l518:	
  5263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  5264                           
  5265                           
  5266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5267  064F  0140               	movlb	0	; select bank0
  5268  0650  084D               	movf	dtoa@i+1,w
  5269  0651  3A80               	xorlw	128
  5270  0652  00B8               	movwf	??_dtoa
  5271  0653  3080               	movlw	128
  5272  0654  0238               	subwf	??_dtoa,w
  5273  0655  1D03               	skipz
  5274  0656  2E59               	goto	u2105
  5275  0657  3001               	movlw	1
  5276  0658  024C               	subwf	dtoa@i,w
  5277  0659                     u2105:	
  5278  0659  1803               	btfsc	3,0
  5279  065A  2DC1               	goto	l2201
  5280  065B                     l2209:	
  5281                           
  5282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5283  065B  0140               	movlb	0	; select bank0
  5284  065C  0842               	movf	dtoa@s,w
  5285  065D  0443               	iorwf	dtoa@s+1,w
  5286  065E  1D03               	btfss	3,2
  5287  065F  2E63               	goto	l2213
  5288  0660  0141               	movlb	1	; select bank1
  5289  0661  1D6B               	btfss	_flags^(0+128),2
  5290  0662  2E7B               	goto	l2223
  5291  0663                     l2213:	
  5292                           
  5293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5294  0663  30FF               	movlw	255
  5295  0664  0140               	movlb	0	; select bank0
  5296  0665  07CC               	addwf	dtoa@i,f
  5297  0666  30FF               	movlw	255
  5298  0667  3DCD               	addwfc	dtoa@i+1,f
  5299                           
  5300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5301  0668  0842               	movf	dtoa@s,w
  5302  0669  0443               	iorwf	dtoa@s+1,w
  5303  066A  1D03               	btfss	3,2
  5304  066B  2E6E               	goto	l2219
  5305  066C  302B               	movlw	43
  5306  066D  2E6F               	goto	L2
  5307  066E                     l2219:	
  5308  066E  302D               	movlw	45
  5309  066F                     L2:	
  5310  066F  00BB               	movwf	_dtoa$1229
  5311  0670  3000               	movlw	0
  5312  0671  00BC               	movwf	_dtoa$1229+1
  5313  0672  083B               	movf	_dtoa$1229,w
  5314  0673  00B8               	movwf	??_dtoa
  5315  0674  084C               	movf	dtoa@i,w
  5316  0675  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5317  0676  0086               	movwf	6
  5318  0677  3001               	movlw	1	; select bank3/4
  5319  0678  0087               	movwf	7
  5320  0679  0838               	movf	??_dtoa,w
  5321  067A  0081               	movwf	1
  5322  067B                     l2223:	
  5323                           
  5324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5325  067B  0140               	movlb	0	; select bank0
  5326  067C  084C               	movf	dtoa@i,w
  5327  067D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5328  067E  00B8               	movwf	??_dtoa
  5329  067F  0838               	movf	??_dtoa,w
  5330  0680  00A4               	movwf	pad@buf
  5331  0681  0841               	movf	dtoa@w+1,w
  5332  0682  00A6               	movwf	pad@p+1
  5333  0683  0840               	movf	dtoa@w,w
  5334  0684  00A5               	movwf	pad@p
  5335  0685  083F               	movf	dtoa@fp,w
  5336  0686  3181  2142         	fcall	_pad
  5337  0688  0140               	movlb	0	; select bank0
  5338  0689  0825               	movf	?_pad+1,w
  5339  068A  00B1               	movwf	?_dtoa+1
  5340  068B  0824               	movf	?_pad,w
  5341  068C  00B0               	movwf	?_dtoa
  5342  068D  0008               	return
  5343  068E                     __end_of_dtoa:	
  5344                           
  5345                           	psect	text21
  5346  0142                     __ptext21:	
  5347 ;; *************** function _pad *****************
  5348 ;; Defined at:
  5349 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  fp              1    wreg     PTR struct _IO_FILE
  5352 ;;		 -> NULL(0), 
  5353 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  5354 ;;		 -> dbuf(32), 
  5355 ;;  p               2    5[BANK0 ] int 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  5358 ;;		 -> NULL(0), 
  5359 ;;  w               2    9[BANK0 ] int 
  5360 ;;  i               2    7[BANK0 ] int 
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  2    4[BANK0 ] int 
  5363 ;; Registers used:
  5364 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5370 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;Total ram usage:        9 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    3
  5377 ;; This function calls:
  5378 ;;		_fputc
  5379 ;;		_fputs
  5380 ;;		_strlen
  5381 ;; This function is called by:
  5382 ;;		_dtoa
  5383 ;;		_xtoa
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _pad
  5389  0142                     _pad:	
  5390                           
  5391                           ;incstack = 0
  5392                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5393                           ;pad@fp stored from wreg
  5394  0142  0140               	movlb	0	; select bank0
  5395  0143  00AB               	movwf	pad@fp
  5396                           
  5397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5398  0144  0141               	movlb	1	; select bank1
  5399  0145  1C6B               	btfss	_flags^(0+128),0
  5400  0146  2950               	goto	l2063
  5401                           
  5402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5403  0147  0140               	movlb	0	; select bank0
  5404  0148  082B               	movf	pad@fp,w
  5405  0149  00FD               	movwf	??_pad
  5406  014A  087D               	movf	??_pad,w
  5407  014B  00F9               	movwf	fputs@fp
  5408  014C  0824               	movf	pad@buf,w
  5409  014D  3180  204B  3181   	fcall	_fputs
  5410  0150                     l2063:	
  5411                           
  5412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5413  0150  0140               	movlb	0	; select bank0
  5414  0151  1BA6               	btfsc	pad@p+1,7
  5415  0152  2958               	goto	l2067
  5416  0153  0826               	movf	pad@p+1,w
  5417  0154  00AA               	movwf	pad@w+1
  5418  0155  0825               	movf	pad@p,w
  5419  0156  00A9               	movwf	pad@w
  5420  0157  295A               	goto	l501
  5421  0158                     l2067:	
  5422  0158  01A9               	clrf	pad@w
  5423  0159  01AA               	clrf	pad@w+1
  5424  015A                     l501:	
  5425                           
  5426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5427  015A  01A7               	clrf	pad@i
  5428  015B  01A8               	clrf	pad@i+1
  5429  015C                     l2073:	
  5430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5431                           
  5432                           
  5433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5434  015C  0828               	movf	pad@i+1,w
  5435  015D  3A80               	xorlw	128
  5436  015E  00FD               	movwf	??_pad
  5437  015F  082A               	movf	pad@w+1,w
  5438  0160  3A80               	xorlw	128
  5439  0161  027D               	subwf	??_pad,w
  5440  0162  1D03               	skipz
  5441  0163  2966               	goto	u1715
  5442  0164  0829               	movf	pad@w,w
  5443  0165  0227               	subwf	pad@i,w
  5444  0166                     u1715:	
  5445  0166  1803               	btfsc	3,0
  5446  0167  297A               	goto	l504
  5447                           
  5448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5449  0168  3020               	movlw	32
  5450  0169  00F1               	movwf	fputc@c
  5451  016A  3000               	movlw	0
  5452  016B  00F2               	movwf	fputc@c+1
  5453  016C  0140               	movlb	0	; select bank0
  5454  016D  082B               	movf	pad@fp,w
  5455  016E  00FD               	movwf	??_pad
  5456  016F  087D               	movf	??_pad,w
  5457  0170  00F3               	movwf	fputc@fp
  5458  0171  3180  20D8  3181   	fcall	_fputc
  5459                           
  5460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5461  0174  3001               	movlw	1
  5462  0175  0140               	movlb	0	; select bank0
  5463  0176  07A7               	addwf	pad@i,f
  5464  0177  3000               	movlw	0
  5465  0178  3DA8               	addwfc	pad@i+1,f
  5466  0179  295C               	goto	l2073
  5467  017A                     l504:	
  5468                           
  5469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5470  017A  0141               	movlb	1	; select bank1
  5471  017B  186B               	btfsc	_flags^(0+128),0
  5472  017C  2986               	goto	l505
  5473                           
  5474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5475  017D  0140               	movlb	0	; select bank0
  5476  017E  082B               	movf	pad@fp,w
  5477  017F  00FD               	movwf	??_pad
  5478  0180  087D               	movf	??_pad,w
  5479  0181  00F9               	movwf	fputs@fp
  5480  0182  0824               	movf	pad@buf,w
  5481  0183  3180  204B  3181   	fcall	_fputs
  5482  0186                     l505:	
  5483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
  5484                           
  5485                           
  5486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5487  0186  0140               	movlb	0	; select bank0
  5488  0187  0824               	movf	pad@buf,w
  5489  0188  318F  2765         	fcall	_strlen
  5490  018A  0140               	movlb	0	; select bank0
  5491  018B  0829               	movf	pad@w,w
  5492  018C  0770               	addwf	?_strlen,w
  5493  018D  00A4               	movwf	?_pad
  5494  018E  082A               	movf	pad@w+1,w
  5495  018F  3D71               	addwfc	?_strlen+1,w
  5496  0190  00A5               	movwf	?_pad+1
  5497  0191  0008               	return
  5498  0192                     __end_of_pad:	
  5499                           
  5500                           	psect	text22
  5501  0F65                     __ptext22:	
  5502 ;; *************** function _strlen *****************
  5503 ;; Defined at:
  5504 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  s               1    wreg     PTR const unsigned char 
  5507 ;;		 -> dbuf(32), 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  s               1    4[COMMON] PTR const unsigned char 
  5510 ;;		 -> dbuf(32), 
  5511 ;;  a               1    3[COMMON] PTR const unsigned char 
  5512 ;;		 -> dbuf(32), 
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  2    0[COMMON] unsigned int 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;Total ram usage:        5 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_pad
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           
  5536                           ;psect for function _strlen
  5537  0F65                     _strlen:	
  5538                           
  5539                           ;incstack = 0
  5540                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  5541                           ;strlen@s stored from wreg
  5542  0F65  00F4               	movwf	strlen@s
  5543  0F66  0874               	movf	strlen@s,w
  5544  0F67  00F2               	movwf	??_strlen
  5545  0F68  0872               	movf	??_strlen,w
  5546  0F69  00F3               	movwf	strlen@a
  5547  0F6A                     l2049:	
  5548  0F6A  0874               	movf	strlen@s,w
  5549  0F6B  0086               	movwf	6
  5550  0F6C  3001               	movlw	1	; select bank2/3
  5551  0F6D  0087               	movwf	7
  5552  0F6E  0801               	movf	1,w
  5553  0F6F  1903               	btfsc	3,2
  5554  0F70  2F76               	goto	l2051
  5555  0F71  3001               	movlw	1
  5556  0F72  00F2               	movwf	??_strlen
  5557  0F73  0872               	movf	??_strlen,w
  5558  0F74  07F4               	addwf	strlen@s,f
  5559  0F75  2F6A               	goto	l2049
  5560  0F76                     l2051:	
  5561  0F76  0873               	movf	strlen@a,w
  5562  0F77  0274               	subwf	strlen@s,w
  5563  0F78  00F0               	movwf	?_strlen
  5564  0F79  01F1               	clrf	?_strlen+1
  5565  0F7A  1BF0               	btfsc	?_strlen,7
  5566  0F7B  03F1               	decf	?_strlen+1,f
  5567  0F7C  0008               	return
  5568  0F7D                     __end_of_strlen:	
  5569                           
  5570                           	psect	text23
  5571  004B                     __ptext23:	
  5572 ;; *************** function _fputs *****************
  5573 ;; Defined at:
  5574 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  s               1    wreg     PTR const unsigned char 
  5577 ;;		 -> dbuf(32), 
  5578 ;;  fp              1    9[COMMON] PTR struct _IO_FILE
  5579 ;;		 -> NULL(0), 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  5582 ;;		 -> dbuf(32), 
  5583 ;;  i               2    1[BANK0 ] int 
  5584 ;;  c               1    0[BANK0 ] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  2    9[COMMON] int 
  5587 ;; Registers used:
  5588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5594 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;Total ram usage:        8 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    2
  5601 ;; This function calls:
  5602 ;;		_fputc
  5603 ;; This function is called by:
  5604 ;;		_pad
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function _fputs
  5610  004B                     _fputs:	
  5611                           
  5612                           ;incstack = 0
  5613                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5614                           ;fputs@s stored from wreg
  5615  004B  0140               	movlb	0	; select bank0
  5616  004C  00A3               	movwf	fputs@s
  5617  004D  01A1               	clrf	fputs@i
  5618  004E  01A2               	clrf	fputs@i+1
  5619  004F                     l2043:	
  5620  004F  0821               	movf	fputs@i,w
  5621  0050  0723               	addwf	fputs@s,w
  5622  0051  00FA               	movwf	??_fputs
  5623  0052  087A               	movf	??_fputs,w
  5624  0053  0086               	movwf	6
  5625  0054  3001               	movlw	1	; select bank2/3
  5626  0055  0087               	movwf	7
  5627  0056  0801               	movf	1,w
  5628  0057  00FB               	movwf	??_fputs+1
  5629  0058  087B               	movf	??_fputs+1,w
  5630  0059  00A0               	movwf	fputs@c
  5631  005A  0820               	movf	fputs@c,w
  5632  005B  1903               	btfsc	3,2
  5633  005C  0008               	return
  5634  005D  0820               	movf	fputs@c,w
  5635  005E  00FA               	movwf	??_fputs
  5636  005F  01FB               	clrf	??_fputs+1
  5637  0060  087A               	movf	??_fputs,w
  5638  0061  00F1               	movwf	fputc@c
  5639  0062  087B               	movf	??_fputs+1,w
  5640  0063  00F2               	movwf	fputc@c+1
  5641  0064  0879               	movf	fputs@fp,w
  5642  0065  00FC               	movwf	??_fputs+2
  5643  0066  087C               	movf	??_fputs+2,w
  5644  0067  00F3               	movwf	fputc@fp
  5645  0068  3180  20D8  3180   	fcall	_fputc
  5646  006B  3001               	movlw	1
  5647  006C  0140               	movlb	0	; select bank0
  5648  006D  07A1               	addwf	fputs@i,f
  5649  006E  3000               	movlw	0
  5650  006F  3DA2               	addwfc	fputs@i+1,f
  5651  0070  284F               	goto	l2043
  5652  0071                     __end_of_fputs:	
  5653                           
  5654                           	psect	text24
  5655  00D8                     __ptext24:	
  5656 ;; *************** function _fputc *****************
  5657 ;; Defined at:
  5658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  c               2    1[COMMON] int 
  5661 ;;  fp              1    3[COMMON] PTR struct _IO_FILE
  5662 ;;		 -> NULL(0), 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  2    1[COMMON] int 
  5667 ;; Registers used:
  5668 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5674 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;Total ram usage:        8 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    1
  5681 ;; This function calls:
  5682 ;;		_putch
  5683 ;; This function is called by:
  5684 ;;		_pad
  5685 ;;		_vfpfcnvrt
  5686 ;;		_fputs
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           
  5691                           ;psect for function _fputc
  5692  00D8                     _fputc:	
  5693                           
  5694                           ;incstack = 0
  5695                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5696  00D8  0873               	movf	fputc@fp,w
  5697  00D9  1D03               	btfss	3,2
  5698  00DA  0873               	movf	fputc@fp,w
  5699  00DB  1D03               	btfss	3,2
  5700  00DC  28E1               	goto	l2029
  5701  00DD  0871               	movf	fputc@c,w
  5702  00DE  318E  26D3         	fcall	_putch
  5703  00E0  0008               	return
  5704  00E1                     l2029:	
  5705  00E1  0873               	movf	fputc@fp,w
  5706  00E2  3E03               	addlw	3
  5707  00E3  0086               	movwf	6
  5708  00E4  0187               	clrf	7
  5709  00E5  0016               	moviw fsr1++
  5710  00E6  0401               	iorwf	1,w
  5711  00E7  1903               	btfsc	3,2
  5712  00E8  2904               	goto	l2033
  5713  00E9  0873               	movf	fputc@fp,w
  5714  00EA  3E03               	addlw	3
  5715  00EB  0086               	movwf	6
  5716  00EC  0187               	clrf	7
  5717  00ED  3F40               	moviw [0]fsr1
  5718  00EE  00F4               	movwf	??_fputc
  5719  00EF  3F41               	moviw [1]fsr1
  5720  00F0  00F5               	movwf	??_fputc+1
  5721  00F1  0A73               	incf	fputc@fp,w
  5722  00F2  0086               	movwf	6
  5723  00F3  0187               	clrf	7
  5724  00F4  3F40               	moviw [0]fsr1
  5725  00F5  00F6               	movwf	??_fputc+2
  5726  00F6  3F41               	moviw [1]fsr1
  5727  00F7  00F7               	movwf	??_fputc+3
  5728  00F8  0877               	movf	??_fputc+3,w
  5729  00F9  3A80               	xorlw	128
  5730  00FA  00F8               	movwf	??_fputc+4
  5731  00FB  0875               	movf	??_fputc+1,w
  5732  00FC  3A80               	xorlw	128
  5733  00FD  0278               	subwf	??_fputc+4,w
  5734  00FE  1D03               	skipz
  5735  00FF  2902               	goto	u1645
  5736  0100  0874               	movf	??_fputc,w
  5737  0101  0276               	subwf	??_fputc+2,w
  5738  0102                     u1645:	
  5739  0102  1803               	skipnc
  5740  0103  0008               	return
  5741  0104                     l2033:	
  5742  0104  0A73               	incf	fputc@fp,w
  5743  0105  0086               	movwf	6
  5744  0106  0187               	clrf	7
  5745  0107  3001               	movlw	1
  5746  0108  0781               	addwf	1,f
  5747  0109  3141               	addfsr 1,1
  5748  010A  1803               	skipnc
  5749  010B  0A81               	incf	1,f
  5750  010C  0008               	return
  5751  010D                     __end_of_fputc:	
  5752                           
  5753                           	psect	text25
  5754  0ED3                     __ptext25:	
  5755 ;; *************** function _putch *****************
  5756 ;; Defined at:
  5757 ;;		line 139 in file "mcc_generated_files/eusart1.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  byte            1    wreg     unsigned char 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  byte            1    0[COMMON] unsigned char 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1    wreg      void 
  5764 ;; Registers used:
  5765 ;;		wreg
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;Total ram usage:        1 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_fputc
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function _putch
  5786  0ED3                     _putch:	
  5787                           
  5788                           ;incstack = 0
  5789                           ; Regs used in _putch: [wreg]
  5790                           ;putch@byte stored from wreg
  5791  0ED3  00F0               	movwf	putch@byte
  5792                           
  5793                           ;mcc_generated_files/eusart1.c: 139: void putch(unsigned char byte);mcc_generated_files/
      +                          eusart1.c: 140: {;mcc_generated_files/eusart1.c: 141:     TXSTA=0x26;
  5794  0ED4  3026               	movlw	38
  5795  0ED5  0142               	movlb	2	; select bank2
  5796  0ED6  009E               	movwf	30	;volatile
  5797                           
  5798                           ;mcc_generated_files/eusart1.c: 142:     RCSTAbits.SPEN=1;
  5799  0ED7  179D               	bsf	29,7	;volatile
  5800                           
  5801                           ;mcc_generated_files/eusart1.c: 143:     TXREG=byte;
  5802  0ED8  0870               	movf	putch@byte,w
  5803  0ED9  009A               	movwf	26	;volatile
  5804  0EDA                     l383:	
  5805                           ;mcc_generated_files/eusart1.c: 144:     while(!PIR3bits.TX1IF)continue;
  5806                           
  5807  0EDA  014E               	movlb	14	; select bank14
  5808  0EDB  1E0F               	btfss	15,4	;volatile
  5809  0EDC  2EDA               	goto	l383
  5810                           
  5811                           ;mcc_generated_files/eusart1.c: 145:     PIR3bits.TX1IF=0;
  5812  0EDD  120F               	bcf	15,4	;volatile
  5813  0EDE  0008               	return
  5814  0EDF                     __end_of_putch:	
  5815                           
  5816                           	psect	text26
  5817  0F09                     __ptext26:	
  5818 ;; *************** function _abs *****************
  5819 ;; Defined at:
  5820 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  a               2    3[COMMON] int 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  2    3[COMMON] int 
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5838 ;;Total ram usage:        4 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_dtoa
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _abs
  5849  0F09                     _abs:	
  5850                           
  5851                           ;incstack = 0
  5852                           ; Regs used in _abs: [wreg+status,2+status,0]
  5853  0F09  0874               	movf	abs@a+1,w
  5854  0F0A  3A80               	xorlw	128
  5855  0F0B  00F5               	movwf	??_abs
  5856  0F0C  3080               	movlw	128
  5857  0F0D  0275               	subwf	??_abs,w
  5858  0F0E  1D03               	skipz
  5859  0F0F  2F12               	goto	u1735
  5860  0F10  3001               	movlw	1
  5861  0F11  0273               	subwf	abs@a,w
  5862  0F12                     u1735:	
  5863  0F12  1803               	skipnc
  5864  0F13  0008               	return
  5865  0F14  0973               	comf	abs@a,w
  5866  0F15  00F5               	movwf	??_abs
  5867  0F16  0974               	comf	abs@a+1,w
  5868  0F17  00F6               	movwf	??_abs+1
  5869  0F18  0AF5               	incf	??_abs,f
  5870  0F19  1903               	skipnz
  5871  0F1A  0AF6               	incf	??_abs+1,f
  5872  0F1B  0875               	movf	??_abs,w
  5873  0F1C  00F3               	movwf	?_abs
  5874  0F1D  0876               	movf	??_abs+1,w
  5875  0F1E  00F4               	movwf	?_abs+1
  5876  0F1F  0008               	return
  5877  0F20                     __end_of_abs:	
  5878                           
  5879                           	psect	text27
  5880  0236                     __ptext27:	
  5881 ;; *************** function ___aomod *****************
  5882 ;; Defined at:
  5883 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  divisor         8    0[BANK0 ] long long 
  5886 ;;  dividend        8    8[BANK0 ] long long 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  sign            1    2[COMMON] unsigned char 
  5889 ;;  counter         1    1[COMMON] unsigned char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  8    0[BANK0 ] long long 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5899 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5902 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5903 ;;Total ram usage:       19 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_dtoa
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           
  5913                           ;psect for function ___aomod
  5914  0236                     ___aomod:	
  5915                           
  5916                           ;incstack = 0
  5917                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  5918  0236  01F2               	clrf	___aomod@sign
  5919  0237  3028               	movlw	low ___aomod@dividend
  5920  0238  0086               	movwf	6
  5921  0239  3000               	movlw	high ___aomod@dividend
  5922  023A  0087               	movwf	7
  5923  023B  3F47               	moviw [7]fsr1
  5924  023C  00F0               	movwf	??___aomod
  5925  023D  1FF0               	btfss	??___aomod,7
  5926  023E  2A60               	goto	l2145
  5927  023F  0140               	movlb	0	; select bank0
  5928  0240  09A8               	comf	___aomod@dividend,f
  5929  0241  09A9               	comf	___aomod@dividend+1,f
  5930  0242  09AA               	comf	___aomod@dividend+2,f
  5931  0243  09AB               	comf	___aomod@dividend+3,f
  5932  0244  09AC               	comf	___aomod@dividend+4,f
  5933  0245  09AD               	comf	___aomod@dividend+5,f
  5934  0246  09AE               	comf	___aomod@dividend+6,f
  5935  0247  09AF               	comf	___aomod@dividend+7,f
  5936  0248  0AA8               	incf	___aomod@dividend,f
  5937  0249  1D03               	skipz
  5938  024A  2A5E               	goto	u193lld
  5939  024B  0AA9               	incf	___aomod@dividend+1,f
  5940  024C  1D03               	skipz
  5941  024D  2A5E               	goto	u193lld
  5942  024E  0AAA               	incf	___aomod@dividend+2,f
  5943  024F  1D03               	skipz
  5944  0250  2A5E               	goto	u193lld
  5945  0251  0AAB               	incf	___aomod@dividend+3,f
  5946  0252  1D03               	skipz
  5947  0253  2A5E               	goto	u193lld
  5948  0254  0AAC               	incf	___aomod@dividend+4,f
  5949  0255  1D03               	skipz
  5950  0256  2A5E               	goto	u193lld
  5951  0257  0AAD               	incf	___aomod@dividend+5,f
  5952  0258  1D03               	skipz
  5953  0259  2A5E               	goto	u193lld
  5954  025A  0AAE               	incf	___aomod@dividend+6,f
  5955  025B  1D03               	skipz
  5956  025C  2A5E               	goto	u193lld
  5957  025D  0AAF               	incf	___aomod@dividend+7,f
  5958  025E                     u193lld:	
  5959  025E  01F2               	clrf	___aomod@sign
  5960  025F  0AF2               	incf	___aomod@sign,f
  5961  0260                     l2145:	
  5962  0260  3020               	movlw	low ___aomod@divisor
  5963  0261  0086               	movwf	6
  5964  0262  3000               	movlw	high ___aomod@divisor
  5965  0263  0087               	movwf	7
  5966  0264  3F47               	moviw [7]fsr1
  5967  0265  00F0               	movwf	??___aomod
  5968  0266  1FF0               	btfss	??___aomod,7
  5969  0267  2A87               	goto	l2149
  5970  0268  0140               	movlb	0	; select bank0
  5971  0269  09A0               	comf	___aomod@divisor,f
  5972  026A  09A1               	comf	___aomod@divisor+1,f
  5973  026B  09A2               	comf	___aomod@divisor+2,f
  5974  026C  09A3               	comf	___aomod@divisor+3,f
  5975  026D  09A4               	comf	___aomod@divisor+4,f
  5976  026E  09A5               	comf	___aomod@divisor+5,f
  5977  026F  09A6               	comf	___aomod@divisor+6,f
  5978  0270  09A7               	comf	___aomod@divisor+7,f
  5979  0271  0AA0               	incf	___aomod@divisor,f
  5980  0272  1D03               	skipz
  5981  0273  2A87               	goto	l2149
  5982  0274  0AA1               	incf	___aomod@divisor+1,f
  5983  0275  1D03               	skipz
  5984  0276  2A87               	goto	l2149
  5985  0277  0AA2               	incf	___aomod@divisor+2,f
  5986  0278  1D03               	skipz
  5987  0279  2A87               	goto	l2149
  5988  027A  0AA3               	incf	___aomod@divisor+3,f
  5989  027B  1D03               	skipz
  5990  027C  2A87               	goto	l2149
  5991  027D  0AA4               	incf	___aomod@divisor+4,f
  5992  027E  1D03               	skipz
  5993  027F  2A87               	goto	l2149
  5994  0280  0AA5               	incf	___aomod@divisor+5,f
  5995  0281  1D03               	skipz
  5996  0282  2A87               	goto	l2149
  5997  0283  0AA6               	incf	___aomod@divisor+6,f
  5998  0284  1D03               	skipz
  5999  0285  2A87               	goto	l2149
  6000  0286  0AA7               	incf	___aomod@divisor+7,f
  6001  0287                     l2149:	
  6002  0287  0140               	movlb	0	; select bank0
  6003  0288  0820               	movf	___aomod@divisor,w
  6004  0289  0421               	iorwf	___aomod@divisor+1,w
  6005  028A  0422               	iorwf	___aomod@divisor+2,w
  6006  028B  0423               	iorwf	___aomod@divisor+3,w
  6007  028C  0424               	iorwf	___aomod@divisor+4,w
  6008  028D  0425               	iorwf	___aomod@divisor+5,w
  6009  028E  0426               	iorwf	___aomod@divisor+6,w
  6010  028F  0427               	iorwf	___aomod@divisor+7,w
  6011  0290  1903               	skipnz
  6012  0291  2ADF               	goto	l2165
  6013  0292  01F1               	clrf	___aomod@counter
  6014  0293  0AF1               	incf	___aomod@counter,f
  6015  0294                     l2157:	
  6016  0294  1BA7               	btfsc	___aomod@divisor+7,7
  6017  0295  2AA3               	goto	l2159
  6018  0296  35A0               	lslf	___aomod@divisor,f
  6019  0297  0DA1               	rlf	___aomod@divisor+1,f
  6020  0298  0DA2               	rlf	___aomod@divisor+2,f
  6021  0299  0DA3               	rlf	___aomod@divisor+3,f
  6022  029A  0DA4               	rlf	___aomod@divisor+4,f
  6023  029B  0DA5               	rlf	___aomod@divisor+5,f
  6024  029C  0DA6               	rlf	___aomod@divisor+6,f
  6025  029D  0DA7               	rlf	___aomod@divisor+7,f
  6026  029E  3001               	movlw	1
  6027  029F  00F0               	movwf	??___aomod
  6028  02A0  0870               	movf	??___aomod,w
  6029  02A1  07F1               	addwf	___aomod@counter,f
  6030  02A2  2A94               	goto	l2157
  6031  02A3                     l2159:	
  6032  02A3  0827               	movf	___aomod@divisor+7,w
  6033  02A4  022F               	subwf	___aomod@dividend+7,w
  6034  02A5  1D03               	skipz
  6035  02A6  2AC1               	goto	u1985
  6036  02A7  0826               	movf	___aomod@divisor+6,w
  6037  02A8  022E               	subwf	___aomod@dividend+6,w
  6038  02A9  1D03               	skipz
  6039  02AA  2AC1               	goto	u1985
  6040  02AB  0825               	movf	___aomod@divisor+5,w
  6041  02AC  022D               	subwf	___aomod@dividend+5,w
  6042  02AD  1D03               	skipz
  6043  02AE  2AC1               	goto	u1985
  6044  02AF  0824               	movf	___aomod@divisor+4,w
  6045  02B0  022C               	subwf	___aomod@dividend+4,w
  6046  02B1  1D03               	skipz
  6047  02B2  2AC1               	goto	u1985
  6048  02B3  0823               	movf	___aomod@divisor+3,w
  6049  02B4  022B               	subwf	___aomod@dividend+3,w
  6050  02B5  1D03               	skipz
  6051  02B6  2AC1               	goto	u1985
  6052  02B7  0822               	movf	___aomod@divisor+2,w
  6053  02B8  022A               	subwf	___aomod@dividend+2,w
  6054  02B9  1D03               	skipz
  6055  02BA  2AC1               	goto	u1985
  6056  02BB  0821               	movf	___aomod@divisor+1,w
  6057  02BC  0229               	subwf	___aomod@dividend+1,w
  6058  02BD  1D03               	skipz
  6059  02BE  2AC1               	goto	u1985
  6060  02BF  0820               	movf	___aomod@divisor,w
  6061  02C0  0228               	subwf	___aomod@dividend,w
  6062  02C1                     u1985:	
  6063  02C1  1C03               	skipc
  6064  02C2  2AD3               	goto	l2163
  6065  02C3  0820               	movf	___aomod@divisor,w
  6066  02C4  02A8               	subwf	___aomod@dividend,f
  6067  02C5  0821               	movf	___aomod@divisor+1,w
  6068  02C6  3BA9               	subwfb	___aomod@dividend+1,f
  6069  02C7  0822               	movf	___aomod@divisor+2,w
  6070  02C8  3BAA               	subwfb	___aomod@dividend+2,f
  6071  02C9  0823               	movf	___aomod@divisor+3,w
  6072  02CA  3BAB               	subwfb	___aomod@dividend+3,f
  6073  02CB  0824               	movf	___aomod@divisor+4,w
  6074  02CC  3BAC               	subwfb	___aomod@dividend+4,f
  6075  02CD  0825               	movf	___aomod@divisor+5,w
  6076  02CE  3BAD               	subwfb	___aomod@dividend+5,f
  6077  02CF  0826               	movf	___aomod@divisor+6,w
  6078  02D0  3BAE               	subwfb	___aomod@dividend+6,f
  6079  02D1  0827               	movf	___aomod@divisor+7,w
  6080  02D2  3BAF               	subwfb	___aomod@dividend+7,f
  6081  02D3                     l2163:	
  6082  02D3  36A7               	lsrf	___aomod@divisor+7,f
  6083  02D4  0CA6               	rrf	___aomod@divisor+6,f
  6084  02D5  0CA5               	rrf	___aomod@divisor+5,f
  6085  02D6  0CA4               	rrf	___aomod@divisor+4,f
  6086  02D7  0CA3               	rrf	___aomod@divisor+3,f
  6087  02D8  0CA2               	rrf	___aomod@divisor+2,f
  6088  02D9  0CA1               	rrf	___aomod@divisor+1,f
  6089  02DA  0CA0               	rrf	___aomod@divisor,f
  6090  02DB  3001               	movlw	1
  6091  02DC  02F1               	subwf	___aomod@counter,f
  6092  02DD  1D03               	btfss	3,2
  6093  02DE  2AA3               	goto	l2159
  6094  02DF                     l2165:	
  6095  02DF  0872               	movf	___aomod@sign,w
  6096  02E0  1903               	btfsc	3,2
  6097  02E1  2B00               	goto	l696
  6098  02E2  09A8               	comf	___aomod@dividend,f
  6099  02E3  09A9               	comf	___aomod@dividend+1,f
  6100  02E4  09AA               	comf	___aomod@dividend+2,f
  6101  02E5  09AB               	comf	___aomod@dividend+3,f
  6102  02E6  09AC               	comf	___aomod@dividend+4,f
  6103  02E7  09AD               	comf	___aomod@dividend+5,f
  6104  02E8  09AE               	comf	___aomod@dividend+6,f
  6105  02E9  09AF               	comf	___aomod@dividend+7,f
  6106  02EA  0AA8               	incf	___aomod@dividend,f
  6107  02EB  1D03               	skipz
  6108  02EC  2B00               	goto	l696
  6109  02ED  0AA9               	incf	___aomod@dividend+1,f
  6110  02EE  1D03               	skipz
  6111  02EF  2B00               	goto	l696
  6112  02F0  0AAA               	incf	___aomod@dividend+2,f
  6113  02F1  1D03               	skipz
  6114  02F2  2B00               	goto	l696
  6115  02F3  0AAB               	incf	___aomod@dividend+3,f
  6116  02F4  1D03               	skipz
  6117  02F5  2B00               	goto	l696
  6118  02F6  0AAC               	incf	___aomod@dividend+4,f
  6119  02F7  1D03               	skipz
  6120  02F8  2B00               	goto	l696
  6121  02F9  0AAD               	incf	___aomod@dividend+5,f
  6122  02FA  1D03               	skipz
  6123  02FB  2B00               	goto	l696
  6124  02FC  0AAE               	incf	___aomod@dividend+6,f
  6125  02FD  1D03               	skipz
  6126  02FE  2B00               	goto	l696
  6127  02FF  0AAF               	incf	___aomod@dividend+7,f
  6128  0300                     l696:	
  6129  0300  0140               	movlb	0	; select bank0
  6130  0301  0828               	movf	___aomod@dividend,w
  6131  0302  00A0               	movwf	?___aomod
  6132  0303  0829               	movf	___aomod@dividend+1,w
  6133  0304  00A1               	movwf	?___aomod+1
  6134  0305  082A               	movf	___aomod@dividend+2,w
  6135  0306  00A2               	movwf	?___aomod+2
  6136  0307  082B               	movf	___aomod@dividend+3,w
  6137  0308  00A3               	movwf	?___aomod+3
  6138  0309  082C               	movf	___aomod@dividend+4,w
  6139  030A  00A4               	movwf	?___aomod+4
  6140  030B  082D               	movf	___aomod@dividend+5,w
  6141  030C  00A5               	movwf	?___aomod+5
  6142  030D  082E               	movf	___aomod@dividend+6,w
  6143  030E  00A6               	movwf	?___aomod+6
  6144  030F  082F               	movf	___aomod@dividend+7,w
  6145  0310  00A7               	movwf	?___aomod+7
  6146  0311  0008               	return
  6147  0312                     __end_of___aomod:	
  6148                           
  6149                           	psect	text28
  6150  0312                     __ptext28:	
  6151 ;; *************** function ___aodiv *****************
  6152 ;; Defined at:
  6153 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  divisor         8    0[BANK0 ] long long 
  6156 ;;  dividend        8    8[BANK0 ] long long 
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;  quotient        8    3[COMMON] long long 
  6159 ;;  sign            1    2[COMMON] unsigned char 
  6160 ;;  counter         1    1[COMMON] unsigned char 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  8    0[BANK0 ] long long 
  6163 ;; Registers used:
  6164 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6170 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6171 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6173 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6174 ;;Total ram usage:       27 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_dtoa
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           
  6184                           ;psect for function ___aodiv
  6185  0312                     ___aodiv:	
  6186                           
  6187                           ;incstack = 0
  6188                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6189  0312  01F2               	clrf	___aodiv@sign
  6190  0313  3020               	movlw	low ___aodiv@divisor
  6191  0314  0086               	movwf	6
  6192  0315  3000               	movlw	high ___aodiv@divisor
  6193  0316  0087               	movwf	7
  6194  0317  3F47               	moviw [7]fsr1
  6195  0318  00F0               	movwf	??___aodiv
  6196  0319  1FF0               	btfss	??___aodiv,7
  6197  031A  2B3C               	goto	l2107
  6198  031B  0140               	movlb	0	; select bank0
  6199  031C  09A0               	comf	___aodiv@divisor,f
  6200  031D  09A1               	comf	___aodiv@divisor+1,f
  6201  031E  09A2               	comf	___aodiv@divisor+2,f
  6202  031F  09A3               	comf	___aodiv@divisor+3,f
  6203  0320  09A4               	comf	___aodiv@divisor+4,f
  6204  0321  09A5               	comf	___aodiv@divisor+5,f
  6205  0322  09A6               	comf	___aodiv@divisor+6,f
  6206  0323  09A7               	comf	___aodiv@divisor+7,f
  6207  0324  0AA0               	incf	___aodiv@divisor,f
  6208  0325  1D03               	skipz
  6209  0326  2B3A               	goto	u182lld
  6210  0327  0AA1               	incf	___aodiv@divisor+1,f
  6211  0328  1D03               	skipz
  6212  0329  2B3A               	goto	u182lld
  6213  032A  0AA2               	incf	___aodiv@divisor+2,f
  6214  032B  1D03               	skipz
  6215  032C  2B3A               	goto	u182lld
  6216  032D  0AA3               	incf	___aodiv@divisor+3,f
  6217  032E  1D03               	skipz
  6218  032F  2B3A               	goto	u182lld
  6219  0330  0AA4               	incf	___aodiv@divisor+4,f
  6220  0331  1D03               	skipz
  6221  0332  2B3A               	goto	u182lld
  6222  0333  0AA5               	incf	___aodiv@divisor+5,f
  6223  0334  1D03               	skipz
  6224  0335  2B3A               	goto	u182lld
  6225  0336  0AA6               	incf	___aodiv@divisor+6,f
  6226  0337  1D03               	skipz
  6227  0338  2B3A               	goto	u182lld
  6228  0339  0AA7               	incf	___aodiv@divisor+7,f
  6229  033A                     u182lld:	
  6230  033A  01F2               	clrf	___aodiv@sign
  6231  033B  0AF2               	incf	___aodiv@sign,f
  6232  033C                     l2107:	
  6233  033C  3028               	movlw	low ___aodiv@dividend
  6234  033D  0086               	movwf	6
  6235  033E  3000               	movlw	high ___aodiv@dividend
  6236  033F  0087               	movwf	7
  6237  0340  3F47               	moviw [7]fsr1
  6238  0341  00F0               	movwf	??___aodiv
  6239  0342  1FF0               	btfss	??___aodiv,7
  6240  0343  2B67               	goto	l2113
  6241  0344  0140               	movlb	0	; select bank0
  6242  0345  09A8               	comf	___aodiv@dividend,f
  6243  0346  09A9               	comf	___aodiv@dividend+1,f
  6244  0347  09AA               	comf	___aodiv@dividend+2,f
  6245  0348  09AB               	comf	___aodiv@dividend+3,f
  6246  0349  09AC               	comf	___aodiv@dividend+4,f
  6247  034A  09AD               	comf	___aodiv@dividend+5,f
  6248  034B  09AE               	comf	___aodiv@dividend+6,f
  6249  034C  09AF               	comf	___aodiv@dividend+7,f
  6250  034D  0AA8               	incf	___aodiv@dividend,f
  6251  034E  1D03               	skipz
  6252  034F  2B63               	goto	l2111
  6253  0350  0AA9               	incf	___aodiv@dividend+1,f
  6254  0351  1D03               	skipz
  6255  0352  2B63               	goto	l2111
  6256  0353  0AAA               	incf	___aodiv@dividend+2,f
  6257  0354  1D03               	skipz
  6258  0355  2B63               	goto	l2111
  6259  0356  0AAB               	incf	___aodiv@dividend+3,f
  6260  0357  1D03               	skipz
  6261  0358  2B63               	goto	l2111
  6262  0359  0AAC               	incf	___aodiv@dividend+4,f
  6263  035A  1D03               	skipz
  6264  035B  2B63               	goto	l2111
  6265  035C  0AAD               	incf	___aodiv@dividend+5,f
  6266  035D  1D03               	skipz
  6267  035E  2B63               	goto	l2111
  6268  035F  0AAE               	incf	___aodiv@dividend+6,f
  6269  0360  1D03               	skipz
  6270  0361  2B63               	goto	l2111
  6271  0362  0AAF               	incf	___aodiv@dividend+7,f
  6272  0363                     l2111:	
  6273  0363  3001               	movlw	1
  6274  0364  00F0               	movwf	??___aodiv
  6275  0365  0870               	movf	??___aodiv,w
  6276  0366  06F2               	xorwf	___aodiv@sign,f
  6277  0367                     l2113:	
  6278  0367  3073               	movlw	low ___aodiv@quotient
  6279  0368  0086               	movwf	6
  6280  0369  3000               	movlw	high ___aodiv@quotient
  6281  036A  0087               	movwf	7
  6282  036B  3008               	movlw	8
  6283  036C  00F0               	movwf	??___aodiv
  6284  036D  3000               	movlw	0
  6285  036E                     u1850:	
  6286  036E  001E               	movwi fsr1++
  6287  036F  0BF0               	decfsz	??___aodiv,f
  6288  0370  2B6E               	goto	u1850
  6289  0371  0140               	movlb	0	; select bank0
  6290  0372  0820               	movf	___aodiv@divisor,w
  6291  0373  0421               	iorwf	___aodiv@divisor+1,w
  6292  0374  0422               	iorwf	___aodiv@divisor+2,w
  6293  0375  0423               	iorwf	___aodiv@divisor+3,w
  6294  0376  0424               	iorwf	___aodiv@divisor+4,w
  6295  0377  0425               	iorwf	___aodiv@divisor+5,w
  6296  0378  0426               	iorwf	___aodiv@divisor+6,w
  6297  0379  0427               	iorwf	___aodiv@divisor+7,w
  6298  037A  1903               	skipnz
  6299  037B  2BD2               	goto	l2135
  6300  037C  01F1               	clrf	___aodiv@counter
  6301  037D  0AF1               	incf	___aodiv@counter,f
  6302  037E                     l2123:	
  6303  037E  1BA7               	btfsc	___aodiv@divisor+7,7
  6304  037F  2B8D               	goto	l2125
  6305  0380  35A0               	lslf	___aodiv@divisor,f
  6306  0381  0DA1               	rlf	___aodiv@divisor+1,f
  6307  0382  0DA2               	rlf	___aodiv@divisor+2,f
  6308  0383  0DA3               	rlf	___aodiv@divisor+3,f
  6309  0384  0DA4               	rlf	___aodiv@divisor+4,f
  6310  0385  0DA5               	rlf	___aodiv@divisor+5,f
  6311  0386  0DA6               	rlf	___aodiv@divisor+6,f
  6312  0387  0DA7               	rlf	___aodiv@divisor+7,f
  6313  0388  3001               	movlw	1
  6314  0389  00F0               	movwf	??___aodiv
  6315  038A  0870               	movf	??___aodiv,w
  6316  038B  07F1               	addwf	___aodiv@counter,f
  6317  038C  2B7E               	goto	l2123
  6318  038D                     l2125:	
  6319  038D  35F3               	lslf	___aodiv@quotient,f
  6320  038E  0DF4               	rlf	___aodiv@quotient+1,f
  6321  038F  0DF5               	rlf	___aodiv@quotient+2,f
  6322  0390  0DF6               	rlf	___aodiv@quotient+3,f
  6323  0391  0DF7               	rlf	___aodiv@quotient+4,f
  6324  0392  0DF8               	rlf	___aodiv@quotient+5,f
  6325  0393  0DF9               	rlf	___aodiv@quotient+6,f
  6326  0394  0DFA               	rlf	___aodiv@quotient+7,f
  6327  0395  0827               	movf	___aodiv@divisor+7,w
  6328  0396  022F               	subwf	___aodiv@dividend+7,w
  6329  0397  1D03               	skipz
  6330  0398  2BB3               	goto	u1885
  6331  0399  0826               	movf	___aodiv@divisor+6,w
  6332  039A  022E               	subwf	___aodiv@dividend+6,w
  6333  039B  1D03               	skipz
  6334  039C  2BB3               	goto	u1885
  6335  039D  0825               	movf	___aodiv@divisor+5,w
  6336  039E  022D               	subwf	___aodiv@dividend+5,w
  6337  039F  1D03               	skipz
  6338  03A0  2BB3               	goto	u1885
  6339  03A1  0824               	movf	___aodiv@divisor+4,w
  6340  03A2  022C               	subwf	___aodiv@dividend+4,w
  6341  03A3  1D03               	skipz
  6342  03A4  2BB3               	goto	u1885
  6343  03A5  0823               	movf	___aodiv@divisor+3,w
  6344  03A6  022B               	subwf	___aodiv@dividend+3,w
  6345  03A7  1D03               	skipz
  6346  03A8  2BB3               	goto	u1885
  6347  03A9  0822               	movf	___aodiv@divisor+2,w
  6348  03AA  022A               	subwf	___aodiv@dividend+2,w
  6349  03AB  1D03               	skipz
  6350  03AC  2BB3               	goto	u1885
  6351  03AD  0821               	movf	___aodiv@divisor+1,w
  6352  03AE  0229               	subwf	___aodiv@dividend+1,w
  6353  03AF  1D03               	skipz
  6354  03B0  2BB3               	goto	u1885
  6355  03B1  0820               	movf	___aodiv@divisor,w
  6356  03B2  0228               	subwf	___aodiv@dividend,w
  6357  03B3                     u1885:	
  6358  03B3  1C03               	skipc
  6359  03B4  2BC6               	goto	l2133
  6360  03B5  0820               	movf	___aodiv@divisor,w
  6361  03B6  02A8               	subwf	___aodiv@dividend,f
  6362  03B7  0821               	movf	___aodiv@divisor+1,w
  6363  03B8  3BA9               	subwfb	___aodiv@dividend+1,f
  6364  03B9  0822               	movf	___aodiv@divisor+2,w
  6365  03BA  3BAA               	subwfb	___aodiv@dividend+2,f
  6366  03BB  0823               	movf	___aodiv@divisor+3,w
  6367  03BC  3BAB               	subwfb	___aodiv@dividend+3,f
  6368  03BD  0824               	movf	___aodiv@divisor+4,w
  6369  03BE  3BAC               	subwfb	___aodiv@dividend+4,f
  6370  03BF  0825               	movf	___aodiv@divisor+5,w
  6371  03C0  3BAD               	subwfb	___aodiv@dividend+5,f
  6372  03C1  0826               	movf	___aodiv@divisor+6,w
  6373  03C2  3BAE               	subwfb	___aodiv@dividend+6,f
  6374  03C3  0827               	movf	___aodiv@divisor+7,w
  6375  03C4  3BAF               	subwfb	___aodiv@dividend+7,f
  6376  03C5  1473               	bsf	___aodiv@quotient,0
  6377  03C6                     l2133:	
  6378  03C6  36A7               	lsrf	___aodiv@divisor+7,f
  6379  03C7  0CA6               	rrf	___aodiv@divisor+6,f
  6380  03C8  0CA5               	rrf	___aodiv@divisor+5,f
  6381  03C9  0CA4               	rrf	___aodiv@divisor+4,f
  6382  03CA  0CA3               	rrf	___aodiv@divisor+3,f
  6383  03CB  0CA2               	rrf	___aodiv@divisor+2,f
  6384  03CC  0CA1               	rrf	___aodiv@divisor+1,f
  6385  03CD  0CA0               	rrf	___aodiv@divisor,f
  6386  03CE  3001               	movlw	1
  6387  03CF  02F1               	subwf	___aodiv@counter,f
  6388  03D0  1D03               	btfss	3,2
  6389  03D1  2B8D               	goto	l2125
  6390  03D2                     l2135:	
  6391  03D2  0872               	movf	___aodiv@sign,w
  6392  03D3  1903               	btfsc	3,2
  6393  03D4  2BF3               	goto	l683
  6394  03D5  09F3               	comf	___aodiv@quotient,f
  6395  03D6  09F4               	comf	___aodiv@quotient+1,f
  6396  03D7  09F5               	comf	___aodiv@quotient+2,f
  6397  03D8  09F6               	comf	___aodiv@quotient+3,f
  6398  03D9  09F7               	comf	___aodiv@quotient+4,f
  6399  03DA  09F8               	comf	___aodiv@quotient+5,f
  6400  03DB  09F9               	comf	___aodiv@quotient+6,f
  6401  03DC  09FA               	comf	___aodiv@quotient+7,f
  6402  03DD  0AF3               	incf	___aodiv@quotient,f
  6403  03DE  1D03               	skipz
  6404  03DF  2BF3               	goto	l683
  6405  03E0  0AF4               	incf	___aodiv@quotient+1,f
  6406  03E1  1D03               	skipz
  6407  03E2  2BF3               	goto	l683
  6408  03E3  0AF5               	incf	___aodiv@quotient+2,f
  6409  03E4  1D03               	skipz
  6410  03E5  2BF3               	goto	l683
  6411  03E6  0AF6               	incf	___aodiv@quotient+3,f
  6412  03E7  1D03               	skipz
  6413  03E8  2BF3               	goto	l683
  6414  03E9  0AF7               	incf	___aodiv@quotient+4,f
  6415  03EA  1D03               	skipz
  6416  03EB  2BF3               	goto	l683
  6417  03EC  0AF8               	incf	___aodiv@quotient+5,f
  6418  03ED  1D03               	skipz
  6419  03EE  2BF3               	goto	l683
  6420  03EF  0AF9               	incf	___aodiv@quotient+6,f
  6421  03F0  1D03               	skipz
  6422  03F1  2BF3               	goto	l683
  6423  03F2  0AFA               	incf	___aodiv@quotient+7,f
  6424  03F3                     l683:	
  6425  03F3  0873               	movf	___aodiv@quotient,w
  6426  03F4  0140               	movlb	0	; select bank0
  6427  03F5  00A0               	movwf	?___aodiv
  6428  03F6  0874               	movf	___aodiv@quotient+1,w
  6429  03F7  00A1               	movwf	?___aodiv+1
  6430  03F8  0875               	movf	___aodiv@quotient+2,w
  6431  03F9  00A2               	movwf	?___aodiv+2
  6432  03FA  0876               	movf	___aodiv@quotient+3,w
  6433  03FB  00A3               	movwf	?___aodiv+3
  6434  03FC  0877               	movf	___aodiv@quotient+4,w
  6435  03FD  00A4               	movwf	?___aodiv+4
  6436  03FE  0878               	movf	___aodiv@quotient+5,w
  6437  03FF  00A5               	movwf	?___aodiv+5
  6438  0400  0879               	movf	___aodiv@quotient+6,w
  6439  0401  00A6               	movwf	?___aodiv+6
  6440  0402  087A               	movf	___aodiv@quotient+7,w
  6441  0403  00A7               	movwf	?___aodiv+7
  6442  0404  0008               	return
  6443  0405                     __end_of___aodiv:	
  6444                           
  6445                           	psect	text29
  6446  0EAE                     __ptext29:	
  6447 ;; *************** function _EUSART1_Write *****************
  6448 ;; Defined at:
  6449 ;;		line 131 in file "mcc_generated_files/eusart1.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  txData          1    wreg     unsigned char 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  txData          1    0[COMMON] unsigned char 
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  1    wreg      void 
  6456 ;; Registers used:
  6457 ;;		wreg
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;Total ram usage:        1 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_main
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           
  6477                           ;psect for function _EUSART1_Write
  6478  0EAE                     _EUSART1_Write:	
  6479                           
  6480                           ;incstack = 0
  6481                           ; Regs used in _EUSART1_Write: [wreg]
  6482                           ;EUSART1_Write@txData stored from wreg
  6483  0EAE  00F0               	movwf	EUSART1_Write@txData
  6484  0EAF                     l377:	
  6485                           ;mcc_generated_files/eusart1.c: 134:     {;mcc_generated_files/eusart1.c: 135:     }
  6486                           
  6487                           
  6488                           ;mcc_generated_files/eusart1.c: 133:     while(0 == PIR3bits.TX1IF)
  6489  0EAF  014E               	movlb	14	; select bank14
  6490  0EB0  1E0F               	btfss	15,4	;volatile
  6491  0EB1  2EAF               	goto	l377
  6492                           
  6493                           ;mcc_generated_files/eusart1.c: 137:     TX1REG = txData;
  6494  0EB2  0870               	movf	EUSART1_Write@txData,w
  6495  0EB3  0142               	movlb	2	; select bank2
  6496  0EB4  009A               	movwf	26	;volatile
  6497  0EB5  0008               	return
  6498  0EB6                     __end_of_EUSART1_Write:	
  6499                           
  6500                           	psect	text30
  6501  0F9A                     __ptext30:	
  6502 ;; *************** function _EUSART1_Initialize *****************
  6503 ;; Defined at:
  6504 ;;		line 65 in file "mcc_generated_files/eusart1.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;		None
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  1    wreg      void 
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0, pclath, cstack
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;Total ram usage:        0 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    1
  6525 ;; This function calls:
  6526 ;;		_EUSART1_SetErrorHandler
  6527 ;;		_EUSART1_SetFramingErrorHandler
  6528 ;;		_EUSART1_SetOverrunErrorHandler
  6529 ;; This function is called by:
  6530 ;;		_main
  6531 ;;		_SYSTEM_Initialize
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           
  6536                           ;psect for function _EUSART1_Initialize
  6537  0F9A                     _EUSART1_Initialize:	
  6538                           
  6539                           ;mcc_generated_files/eusart1.c: 70:     BAUD1CON = 0x08;
  6540                           
  6541                           ;incstack = 0
  6542                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6543  0F9A  3008               	movlw	8
  6544  0F9B  0142               	movlb	2	; select bank2
  6545  0F9C  009F               	movwf	31	;volatile
  6546                           
  6547                           ;mcc_generated_files/eusart1.c: 73:     RC1STA = 0x80;
  6548  0F9D  3080               	movlw	128
  6549  0F9E  009D               	movwf	29	;volatile
  6550                           
  6551                           ;mcc_generated_files/eusart1.c: 76:     TX1STA = 0x24;
  6552  0F9F  3024               	movlw	36
  6553  0FA0  009E               	movwf	30	;volatile
  6554                           
  6555                           ;mcc_generated_files/eusart1.c: 79:     SP1BRGL = 0x0C;
  6556  0FA1  300C               	movlw	12
  6557  0FA2  009B               	movwf	27	;volatile
  6558                           
  6559                           ;mcc_generated_files/eusart1.c: 82:     SP1BRGH = 0x00;
  6560  0FA3  019C               	clrf	28	;volatile
  6561                           
  6562                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6563  0FA4  3000               	movlw	0
  6564  0FA5  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  6565  0FA6  3000               	movlw	0
  6566  0FA7  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  6567  0FA8  318E  269C  318F   	fcall	_EUSART1_SetFramingErrorHandler
  6568                           
  6569                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6570  0FAB  3000               	movlw	0
  6571  0FAC  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  6572  0FAD  3000               	movlw	0
  6573  0FAE  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  6574  0FAF  318E  26A2  318F   	fcall	_EUSART1_SetOverrunErrorHandler
  6575                           
  6576                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6577  0FB2  3000               	movlw	0
  6578  0FB3  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  6579  0FB4  3000               	movlw	0
  6580  0FB5  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  6581  0FB6  318E  2696         	fcall	_EUSART1_SetErrorHandler
  6582                           
  6583                           ;mcc_generated_files/eusart1.c: 89:     eusart1RxLastError.status = 0;
  6584  0FB8  0142               	movlb	2	; select bank2
  6585  0FB9  01DA               	clrf	_eusart1RxLastError^(0+256)	;volatile
  6586  0FBA  0008               	return
  6587  0FBB                     __end_of_EUSART1_Initialize:	
  6588                           
  6589                           	psect	text31
  6590  0EA2                     __ptext31:	
  6591 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6592 ;; Defined at:
  6593 ;;		line 168 in file "mcc_generated_files/eusart1.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6596 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;Total ram usage:        2 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_EUSART1_Initialize
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           
  6622                           ;psect for function _EUSART1_SetOverrunErrorHandler
  6623  0EA2                     _EUSART1_SetOverrunErrorHandler:	
  6624                           
  6625                           ;mcc_generated_files/eusart1.c: 169:     EUSART1_OverrunErrorHandler = interruptHandler;
  6626                           
  6627                           ;incstack = 0
  6628                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  6629  0EA2  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  6630  0EA3  0142               	movlb	2	; select bank2
  6631  0EA4  00E8               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
  6632  0EA5  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  6633  0EA6  00E7               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
  6634  0EA7  0008               	return
  6635  0EA8                     __end_of_EUSART1_SetOverrunErrorHandler:	
  6636                           
  6637                           	psect	text32
  6638  0E9C                     __ptext32:	
  6639 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6640 ;; Defined at:
  6641 ;;		line 164 in file "mcc_generated_files/eusart1.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6644 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;		None
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;Total ram usage:        2 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_EUSART1_Initialize
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           
  6670                           ;psect for function _EUSART1_SetFramingErrorHandler
  6671  0E9C                     _EUSART1_SetFramingErrorHandler:	
  6672                           
  6673                           ;mcc_generated_files/eusart1.c: 165:     EUSART1_FramingErrorHandler = interruptHandler;
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  6677  0E9C  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  6678  0E9D  0142               	movlb	2	; select bank2
  6679  0E9E  00EA               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  6680  0E9F  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  6681  0EA0  00E9               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  6682  0EA1  0008               	return
  6683  0EA2                     __end_of_EUSART1_SetFramingErrorHandler:	
  6684                           
  6685                           	psect	text33
  6686  0E96                     __ptext33:	
  6687 ;; *************** function _EUSART1_SetErrorHandler *****************
  6688 ;; Defined at:
  6689 ;;		line 172 in file "mcc_generated_files/eusart1.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6692 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;		None
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      void 
  6697 ;; Registers used:
  6698 ;;		wreg
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6708 ;;Total ram usage:        2 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; This function calls:
  6711 ;;		Nothing
  6712 ;; This function is called by:
  6713 ;;		_EUSART1_Initialize
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           
  6718                           ;psect for function _EUSART1_SetErrorHandler
  6719  0E96                     _EUSART1_SetErrorHandler:	
  6720                           
  6721                           ;mcc_generated_files/eusart1.c: 173:     EUSART1_ErrorHandler = interruptHandler;
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  6725  0E96  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  6726  0E97  0142               	movlb	2	; select bank2
  6727  0E98  00E6               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  6728  0E99  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  6729  0E9A  00E5               	movwf	_EUSART1_ErrorHandler^(0+256)
  6730  0E9B  0008               	return
  6731  0E9C                     __end_of_EUSART1_SetErrorHandler:	
  6732  007E                     btemp	set	126	;btemp
  6733  007E                     wtemp0	set	126


Data Sizes:
    Strings     131
    Constant    45
    Data        0
    BSS         97
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     75      80
    BANK2            80      9      75
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    read_Interface$1	PTR unsigned char  size(1) Largest target is 1
		 -> getFifoStatus@fifo_status(COMMON[1]), getInterruptSource@int_source(COMMON[1]), 

    writeInterface$2	PTR unsigned char  size(1) Largest target is 45
		 -> initializeDevice@init_values(BANK1[45]), 

    readInterface$2	PTR unsigned char  size(1) Largest target is 0

    commReadMultipleBytes$2	PTR unsigned char  size(1) Largest target is 0

    commWriteMultipleBytes$2	PTR unsigned char  size(1) Largest target is 45
		 -> initializeDevice@init_values(BANK1[45]), 

    commReadByte$1	PTR unsigned char  size(1) Largest target is 1
		 -> getFifoStatus@fifo_status(COMMON[1]), getInterruptSource@int_source(COMMON[1]), 

    input	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_6(CODE[25]), STR_5(CODE[26]), STR_4(CODE[24]), STR_3(CODE[23]), 
		 -> STR_2(CODE[33]), STR_1(CODE[33]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    ungetc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fgetc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fgetc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1540_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_6(CODE[25]), STR_5(CODE[26]), STR_4(CODE[24]), STR_3(CODE[23]), 
		 -> STR_2(CODE[33]), STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_6(CODE[25]), STR_5(CODE[26]), STR_4(CODE[24]), STR_3(CODE[23]), 
		 -> STR_2(CODE[33]), STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    writeMul@value	PTR unsigned char  size(1) Largest target is 45
		 -> initializeDevice@init_values(BANK1[45]), 

    setReadWriteMultipleByteInterfaces@readInterface	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> readMul(), 

    commReadMultipleBytes	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> Absolute function(), readMul(), 

    setReadWriteMultipleByteInterfaces@writeInterface	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> writeMul(), 

    commWriteMultipleBytes	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> Absolute function(), writeMul(), 

    setReadWriteByteInterfaces@read_Interface	PTR FTN(unsigned char ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> read(), 

    commReadByte	PTR FTN(unsigned char ,PTR unsigned char ,)_Bool  size(2) Largest target is 1
		 -> Absolute function(), read(), 

    setReadWriteByteInterfaces@write_Interface	PTR FTN(unsigned char ,unsigned char ,)_Bool  size(2) Largest target is 1
		 -> write(), 

    commWriteByte	PTR FTN(unsigned char ,unsigned char ,)_Bool  size(2) Largest target is 1
		 -> Absolute function(), write(), 


Critical Paths under _main in COMMON

    _getchar->_fgetc
    _fgetc->_getch
    _xtoa->_pad
    _xtoa->_toupper
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_initializeDevice
    _initializeDevice->_writeMul
    _writeMul->_printf
    _exitLowPowerMode->_write
    _exitAutoSleepMode->_write
    _enterLowPowerMode->_write
    _write->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    12      4   63402
                                             68 BANK1      7     3      4
                                              0 BANK2      9     9      0
                 _EUSART1_Initialize
                      _EUSART1_Write
                  _enterLowPowerMode
                  _exitAutoSleepMode
                   _exitLowPowerMode
                            _getchar
                   _initializeDevice
                             _printf
         _setReadWriteByteInterfaces
 _setReadWriteMultipleByteInterfaces
 ---------------------------------------------------------------------------------
 (1) _setReadWriteMultipleByteInterfaces                   4     0      4     196
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _setReadWriteByteInterfaces                           4     0      4     196
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initializeDevice                                    48     3     45   11204
                                             20 BANK1     48     3     45
                   Absolute function *
                           _writeMul *
 ---------------------------------------------------------------------------------
 (2) _writeMul                                             7     4      3   11105
                                             13 BANK1      7     4      3
                             _printf
 ---------------------------------------------------------------------------------
 (1) _getchar                                              2     0      2     163
                                             10 COMMON     2     0      2
                              _fgetc
 ---------------------------------------------------------------------------------
 (2) _fgetc                                                8     6      2     163
                                              2 COMMON     8     6      2
                              _getch
 ---------------------------------------------------------------------------------
 (3) _getch                                                2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _exitLowPowerMode                                     3     3      0   13467
                                             19 BANK1      3     3      0
                   Absolute function *
                              _write *
 ---------------------------------------------------------------------------------
 (1) _exitAutoSleepMode                                    3     3      0   13467
                                             19 BANK1      3     3      0
                   Absolute function *
                              _write *
 ---------------------------------------------------------------------------------
 (1) _enterLowPowerMode                                    3     3      0   13467
                                             19 BANK1      3     3      0
                   Absolute function *
                              _write *
 ---------------------------------------------------------------------------------
 (2) _write                                                6     4      2   13421
                                             13 BANK1      6     4      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   10833
                                              3 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   10321
                                             75 BANK0      5     2      3
                                              0 BANK1      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    9988
                                             50 BANK0     25    23      2
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                38    29      9    4196
                                             12 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMMON     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              8     6      2     161
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4291
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2668
                                             13 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1105
                                              9 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     790
                                              1 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
     _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
   _EUSART1_Write
   _enterLowPowerMode
     Absolute function(Fake) *
     _write *
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _exitAutoSleepMode
     Absolute function(Fake) *
     _write *
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _exitLowPowerMode
     Absolute function(Fake) *
     _write *
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _getchar
     _fgetc
       _getch
   _initializeDevice
     Absolute function(Fake) *
     _writeMul *
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower
   _setReadWriteByteInterfaces
   _setReadWriteMultipleByteInterfaces

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     119       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4B      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      9      4B      10       93.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     119      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 03 23:11:13 2019

                                     __CFG_CP$OFF 0000                     enterLowPowerMode@bw_rate_save 00B5  
                                     __CFG_LVP$ON 0000                   exitAutoSleepMode@power_ctl_save 00B5  
                                             l501 015A                                               l510 0589  
                                             l504 017A                                               l505 0186  
                                             l514 05A5                                               l515 05B9  
                                             l509 0581                                               l518 064F  
                                             l383 0EDA                                               l535 0698  
                                             l560 07B7                                               l377 0EAF  
                                             l539 06B4                                               l683 03F3  
                                             l696 0300                                               _abs 0F09  
                                             _pad 0142                                      __CFG_BORV$LO 0000  
                                             wreg 0009                                     __CFG_BBEN$OFF 0000  
                                    __CFG_ZCD$OFF 0000                                              ?_abs 0073  
                                            l2111 0363                                              l2113 0367  
                                            l2033 0104                                              l2201 05C1  
                                            l2123 037E                                              l2107 033C  
                                            l2043 004F                                              l2051 0F76  
                                            l2133 03C6                                              l2125 038D  
                                            l2029 00E1                                              l2213 0663  
                                            l2135 03D2                                              l2063 0150  
                                            l2223 067B                                              l2311 0482  
                                            l2303 0448                                              l2145 0260  
                                            l2049 0F6A                                              l2073 015C  
                                            l2209 065B                                              l2233 06AC  
                                            l2163 02D3                                              l2067 0158  
                                            l2219 066E                                              l2243 06DC  
                                            l2331 0507                                              l2315 04A0  
                                            l2403 00B0                                              l2157 0294  
                                            l2165 02DF                                              l2149 0287  
                                            l2181 059D                                              l2325 04E6  
                                            l2341 0518                                              l2405 00B8  
                                            l2159 02A3                                              l2191 05E6  
                                            l2263 0744                                              l2247 06F6  
                                            l2271 0786                                              l2239 06C4  
                                            l2335 050D                                              l2409 00D3  
                                            l2187 05B4                                              l2355 011A  
                                            l2357 0139                                              l2453 001F  
                                            l2287 07D5                                              l2439 0FF8  
                                            l2385 0074                                              l2467 0043  
                                            l2387 00A2                                              ?_pad 0024  
                                            STR_1 1000                                              STR_2 1000  
                                            STR_3 106C                                              STR_4 1054  
                                            STR_5 1021                                              STR_6 103B  
                                            u2020 0557                                              u2030 0558  
                                            u2105 0659                                              u2220 070D  
                                            u2125 05D5                                              _LATA 0018  
                                            u2230 070E                                              u2135 05E1  
                                            u2215 06F0                                              _LATC 001A  
                                            u2250 072D                                              u2075 0595  
                                            u2315 07A6                                              u2260 072E  
                                            u2325 07B2                                              u3070 01BA  
                                            u2425 007D                                              u1715 0166  
                                            u2195 06A4                                              u1740 0F2F  
                                            u1645 0102                                              u2285 076A  
                                            u1750 0F30                                              u1670 0F46  
                                            u1735 0F12                                              u2295 0790  
                                            u1760 0F92                                              u1680 0F47  
                                            u1850 036E                                              u1770 0F93  
                                            u1780 0FCA                                              u1790 0FCB  
                                            _PMD0 0796                                              u1885 03B3  
                                            _PMD1 0797                                              _PMD2 0798  
                                            _PMD3 0799                                              _PMD4 079A  
                                            u1985 02C1                                              _PMD5 079B  
                                            _WPUA 1F39                                              _WPUC 1F4F  
                                   _EUSART1_Write 0EAE                                     __CFG_FCMEN$ON 0000  
                                            abs@a 0073                                              _dbuf 01A0  
                                            _main 0192                                              _dtoa 053B  
                                            _read 0000                                              _prec 0151  
                                            _nout 014D                                              pad@i 0027  
                                            pad@p 0025                                              fsr0h 0005  
                                            fsr1h 0007                                              indf0 0000  
                                            fsr0l 0004                                              indf1 0001  
                                            fsr1l 0006                                              pad@w 0029  
                                            btemp 007E                                              _xtoa 068E  
                                   __CFG_BOREN$ON 0000                                              start 0002  
                                   __CFG_CSWEN$ON 0000                                     __CFG_MCLRE$ON 0000  
                                           ??_abs 0075                                             ??_pad 007D  
                                 __end_of___aodiv 0405                                             ?_main 00E4  
                                           ?_dtoa 0030                                   __end_of___aomod 0312  
                                   __CFG_WDTE$OFF 0000                                             ?_xtoa 002C  
                                           _OSCEN 0891                                      vfpfcnvrt@fmt 0052  
                                    vfpfcnvrt@llu 0061                                             _TRISA 0012  
                                           _TRISC 0014                                             _TXREG 011A  
                                           _TXSTA 011E                                   __end_of_getchar 0EBE  
                                   __CFG_WRTB$OFF 0000                                     __CFG_WRTC$OFF 0000  
                                           _fgetc 00A4                                             _flags 00EB  
                                           _getch 0E91                                             _fputc 00D8  
                                 __end_of_isalpha 0F9A                                             _fputs 004B  
                                           _input 015B                                             pad@fp 002B  
                                           _width 014F                                             _putch 0ED3  
                                           dtoa@d 0030                                             dtoa@i 004C  
                                           dtoa@n 0044                                             dtoa@p 003D  
                                           dtoa@s 0042                                             dtoa@w 0040  
                                           _write 0F4E                                   __end_of_islower 0F4E  
                                  ?_EUSART1_Write 0070                                   __end_of_isupper 0F37  
                                           pclath 000A                        __size_of_enterLowPowerMode 0021  
                                           status 0003                                             wtemp0 007E  
                                           xtoa@c 0050                                             xtoa@d 002C  
                                           xtoa@i 004E                                             xtoa@n 0046  
                                           xtoa@p 0041                                             xtoa@w 0044  
                                           xtoa@x 0034                                   __end_of_toupper 0FDC  
              _EUSART1_DefaultFramingErrorHandler 0000                                      _toupper$1641 007C  
                                 __initialization 07E8                        __end_of_EUSART1_Initialize 0FBB  
                                    __end_of_main 0236                                      __end_of_dtoa 068E  
                                    __end_of_xtoa 07E8                                    __CFG_SAFEN$OFF 0000  
                                          ??_main 00E8                                            ??_dtoa 0038  
                                          ??_xtoa 0035                                            ?_fgetc 0072  
                                          ?_getch 0070                                            ?_fputc 0071  
                                          ?_fputs 0079                                            _ANSELA 1F38  
                                          ?_putch 0070                                            _ANSELC 1F4E  
                              __CFG_RSTOSC$HFINT1 0000                                            ?_write 00AD  
                               ?_initializeDevice 00B4                                            _RC1REG 0119  
                                          _RC0PPS 1F20                                            _RC1STA 011D  
                                          _RC2PPS 1F22                                            _RC4PPS 1F24  
                                          _ODCONA 1F3A                                            _ODCONC 1F50  
                                  __CFG_WDTCCS$SC 0000                                            _OSCFRQ 0893  
                                          u182lld 033A                                            _TX1REG 011A  
                                          u193lld 025E                                            _TX1STA 011E  
                              ??_initializeDevice 00E1                                    __CFG_PWRTE$OFF 0000  
                                    vfprintf@cfmt 00A1                                         ??___aodiv 0070  
                     initializeDevice@init_values 00B4                                         ??___aomod 0070  
                                  __CFG_STVREN$ON 0000                          ?_EUSART1_SetErrorHandler 0070  
                                          fgetc@c 0077                                            _printf 0EF3  
                                          pad@buf 0024                  ??_EUSART1_SetOverrunErrorHandler 0072  
                 ?_EUSART1_SetOverrunErrorHandler 0070                                            dtoa@fp 003F  
                                       ??_getchar 007C                                            _strlen 0F65  
                                          fputc@c 0071                                            fputs@c 0020  
                                          fputs@i 0021                                            fputs@s 0023  
                                       ??_isalpha 0072                                         ??_islower 0072  
                                       ??_isupper 0072                                  __end_of_vfprintf 0142  
                                 ??_EUSART1_Write 0070                                            xtoa@fp 0043  
                                       ??_toupper 0078                                  __end_of_writeMul 00A4  
                         __end_of__initialization 07FD                                    __pcstackCOMMON 0070  
                           _commReadMultipleBytes 0153                         __size_of_exitLowPowerMode 0024  
                                   __end_of_fgetc 00D8                                     __end_of_getch 0E96  
                                   __end_of_fputc 010D                                     __end_of_fputs 0071  
                                   __end_of_putch 0EDF                                     __end_of_write 0F65  
                                         ??_fgetc 0074                                           ??_getch 0072  
                                         ??_fputc 0074                                           ??_fputs 007A  
                                         ??_putch 0070                                           ??_write 00AF  
                                      __pbssBANK1 00EB                                        __pbssBANK2 0120  
                                      __pbssBANK3 01A0                   __end_of_EUSART1_SetErrorHandler 0E9C  
                                      __pmaintext 0192                                   __CFG_PPS1WAY$ON 0000  
                                         ?_printf 00A3                                           ?_strlen 0070  
          __end_of_EUSART1_SetFramingErrorHandler 0EA2           __size_of_EUSART1_SetFramingErrorHandler 0006  
                  _EUSART1_SetFramingErrorHandler 0E9C                                           _SP1BRGH 011C  
                                         _SP1BRGL 011B                                           _OSCCON1 088D  
                                         _OSCCON3 088F                                __size_of_vfpfcnvrt 0136  
                                         _OSCSTAT 0890                                           _OSCTUNE 0892  
                                         _SSP1ADD 018D                                           _SLRCONA 1F3B  
                                         _SLRCONC 1F51                                           _SSP1BUF 018C  
                    exitLowPowerMode@bw_rate_save 00B5                                           ___aodiv 0312  
                                         ___aomod 0236                                         ?_vfprintf 006B  
                                         __ptext1 0EBE                                           __ptext2 0EC8  
                                         __ptext3 0EDF                                           __ptext4 0071  
                                         __ptext5 0EB6                                           __ptext6 00A4  
                                         __ptext7 0E91                                           __ptext8 0027  
                                         __ptext9 0FDC                                         ?_writeMul 00AD  
                                 __size_of_printf 0016                                           _getchar 0EB6  
                                 __CFG_WRTAPP$OFF 0000                                   __size_of_strlen 0018  
                                    __size_of_abs 0017                                           _readMul 0000  
                                    __size_of_pad 0050                                           _isalpha 0F7D  
                                    _commReadByte 0157                                _EUSART1_Initialize 0F9A  
                                         _islower 0F37                                   __CFG_WRTSAF$OFF 0000  
                                         _isupper 0F20                                           fgetc@fp 0079  
                    ??_setReadWriteByteInterfaces 0074                                           clrloop0 0EA9  
                                         _toupper 0FBB                              end_of_initialization 07FD  
                             ?_EUSART1_Initialize 0070                                      write@address 00AD  
                                         fputc@fp 0073                       _EUSART1_OverrunErrorHandler 0167  
                                         fputs@fp 0079                                 _exitAutoSleepMode 0FDC  
                               __end_of_vfpfcnvrt 053B                                         _RCSTAbits 011D  
                                _exitLowPowerMode 0027                         __size_of_initializeDevice 0014  
                              ?_exitAutoSleepMode 0070                                        ??_vfprintf 006E  
                            ??_EUSART1_Initialize 0072                             __CFG_WDTCPS$WDTCPS_31 0000  
                                         strlen@a 0073                                           strlen@s 0074  
      __end_of_setReadWriteMultipleByteInterfaces 0EC8       __size_of_setReadWriteMultipleByteInterfaces 000A  
            ??_setReadWriteMultipleByteInterfaces 0074               ?_setReadWriteMultipleByteInterfaces 0070  
              _setReadWriteMultipleByteInterfaces 0EBE               __size_of_setReadWriteByteInterfaces 000B  
                                      ??_writeMul 00B0                               ??_exitAutoSleepMode 00B3  
                __size_of_EUSART1_SetErrorHandler 0006                               EUSART1_Write@txData 0070  
                                __CFG_FEXTOSC$OFF 0000                         __end_of_exitAutoSleepMode 1000  
                                     vfpfcnvrt@ap 0053                                       vfpfcnvrt@fp 006A  
                                     vfpfcnvrt@ll 0059                                    __end_of_printf 0F09  
                                  __end_of_strlen 0F7D                               start_initialization 07E8  
                                     __end_of_abs 0F20                                       __end_of_pad 0192  
                           __end_of_EUSART1_Write 0EB6                                       _adxl34x_reg 0120  
                                _adxl34x_reg_init 0800                                  __CFG_LPBOREN$OFF 0000  
                                     vfprintf@fmt 006B  setReadWriteMultipleByteInterfaces@writeInterface 0070  
                                        ??_printf 00A9                                          ??_strlen 0072  
              __end_of_setReadWriteByteInterfaces 0ED3                        _setReadWriteByteInterfaces 0EC8  
                                       ___latbits 0002                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00A0                                     __pcstackBANK2 015C  
                                ___aodiv@dividend 0028                  ??_EUSART1_SetFramingErrorHandler 0072  
                 ?_EUSART1_SetFramingErrorHandler 0070                                         __pnvBANK2 0165  
                      __size_of_exitAutoSleepMode 0024                                         _main$1910 015F  
                                       _main$1911 0161                                         _main$1912 0163  
                                       _main$1909 015D                                         _dtoa$1229 003B  
                                        ?___aodiv 0020                                          ?___aomod 0020  
                                ___aodiv@quotient 0073                                  _initializeDevice 0EDF  
                               __size_of_vfprintf 0035                                          ?_getchar 007A  
                                        _BAUD1CON 011F                _EUSART1_DefaultOverrunErrorHandler 0000  
                                        ?_isalpha 0070                                 __size_of_writeMul 0033  
                            _EUSART1_ErrorHandler 0165                                          ?_islower 0070  
                                        ?_isupper 0070                           _EUSART1_SetErrorHandler 0E96  
                        __end_of_exitLowPowerMode 004B                                    __size_of_fgetc 0034  
                                  __size_of_getch 0005                                    __size_of_fputc 0035  
                                  __size_of_fputs 0026                                          ?_toupper 0076  
                                  __size_of_putch 000C                                    __size_of_write 0017  
         EUSART1_SetErrorHandler@interruptHandler 0070                                         clear_ram0 0EA8  
                                        _PIR3bits 070F                                 __CFG_BBSIZE$BB512 0000  
                                        _SSP1CON1 0190                                          _SSP1STAT 018F  
                                       _vfpfcnvrt 0405                                         _xtoa$1240 003D  
                                       _xtoa$1241 003F          setReadWriteByteInterfaces@read_Interface 0072  
                                      vfpfcnvrt@c 0069                                        vfprintf@ap 006D  
                                      vfprintf@fp 00A0                                  __size_of___aodiv 00F3  
                                __size_of___aomod 00DC                       __size_of_EUSART1_Initialize 0021  
                                      ?_vfpfcnvrt 0052                                   ___aodiv@divisor 0020  
                                 ___aodiv@counter 0071                         ??_EUSART1_SetErrorHandler 0072  
                        __end_of_adxl34x_reg_init 082D                       _EUSART1_DefaultErrorHandler 0000  
                                __size_of_getchar 0008                                  __size_of_isalpha 001D  
                                __size_of_islower 0017                                          __ptext10 0006  
                                        __ptext11 0F4E                                          __ptext20 053B  
                                        __ptext12 0EF3                                          __ptext21 0142  
                                        __ptext13 010D                                          __ptext30 0F9A  
                                        __ptext22 0F65                                          __ptext14 0405  
                                        __ptext31 0EA2                                          __ptext23 004B  
                                        __ptext15 068E                                          __ptext32 0E9C  
                                        __ptext24 00D8                                          __ptext16 0FBB  
                                        __ptext33 0E96                                          __ptext25 0ED3  
                                        __ptext17 0F37                                          __ptext26 0F09  
                                        __ptext18 0F20                                          __ptext27 0236  
                                        __ptext19 0F7D                                          __ptext28 0312  
                                        __ptext29 0EAE                                  __size_of_isupper 0017  
                                    _SSP1CON1bits 0190                                  __size_of_toupper 0021  
       setReadWriteByteInterfaces@write_Interface 0070                                     __size_of_main 00A4  
                                   __size_of_dtoa 0153                                     __size_of_xtoa 015A  
                            __CFG_WDTCWS$WDTCWS_7 0000                                        _RC1STAbits 011D  
                                      write@value 00AE    EUSART1_SetOverrunErrorHandler@interruptHandler 0070  
                                        _ungetbuf 0159                                          _ungetcnt 00EF  
                                        _vfprintf 010D                                         printf@fmt 00A3  
                                        main@argc 00E4                                          main@argv 00E6  
                                    _SSP1STATbits 018F                       _EUSART1_FramingErrorHandler 0169  
                                        _writeMul 0071                                  ___aomod@dividend 0028  
                                       putch@byte 0070                       ?_setReadWriteByteInterfaces 0070  
                                        isalpha@c 0070                          __end_of_initializeDevice 0EF3  
                                        islower@c 0070                            _commWriteMultipleBytes 0155  
                               __CFG_CLKOUTEN$OFF 0000   setReadWriteMultipleByteInterfaces@readInterface 0072  
          __end_of_EUSART1_SetOverrunErrorHandler 0EA8           __size_of_EUSART1_SetOverrunErrorHandler 0006  
                  _EUSART1_SetOverrunErrorHandler 0EA2                                 _enterLowPowerMode 0006  
                                 writeMul@address 00AE                                     _commWriteByte 00ED  
                                        isupper@c 0070                                ?_enterLowPowerMode 0070  
                                       writeMul@i 00B2                                         writeMul@n 00AD  
                                        printf@ap 00AC    EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                                 ___aomod@divisor 0020                                       ??_vfpfcnvrt 0054  
                                 ___aomod@counter 0071                               ??_enterLowPowerMode 00B3  
                          __size_of_EUSART1_Write 0008                                _eusart1RxLastError 015A  
                                   __pstringtext1 0800                                     __pstringtext2 1000  
                                   __pstringtext3 1021                                     __pstringtext4 103B  
                                   __pstringtext5 1054                                     __pstringtext6 106C  
                                   __pstringtext7 0000                                        _SSP1DATPPS 1EC6  
                                      _SSP1CLKPPS 1EC5                                          toupper@c 0076  
                                      _TX1STAbits 011E                                 ?_exitLowPowerMode 0070  
                                    ___aodiv@sign 0072                                ??_exitLowPowerMode 00B3  
                       __end_of_enterLowPowerMode 0027                                     writeMul@value 00AF  
                                    ___aomod@sign 0072  
